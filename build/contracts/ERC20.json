{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        },
        {
          "name": "supply",
          "type": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "arg0",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "arg0",
          "type": "address"
        },
        {
          "name": "arg1",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/tests/ERC20.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "alias": null,
        "ast_type": "ImportFrom",
        "col_offset": 0,
        "end_col_offset": 34,
        "end_lineno": 7,
        "level": 0,
        "lineno": 7,
        "module": "vyper.interfaces",
        "name": "ERC20",
        "node_id": 1,
        "src": "169:34:0"
      },
      {
        "alias": null,
        "ast_type": "ImportFrom",
        "col_offset": 0,
        "end_col_offset": 42,
        "end_lineno": 8,
        "level": 0,
        "lineno": 8,
        "module": "vyper.interfaces",
        "name": "ERC20Detailed",
        "node_id": 3,
        "src": "204:42:0"
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 12,
          "end_col_offset": 17,
          "end_lineno": 10,
          "id": "ERC20",
          "lineno": 10,
          "node_id": 8,
          "src": "260:5:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 17,
        "end_lineno": 10,
        "lineno": 10,
        "node_id": 5,
        "simple": 1,
        "src": "248:17:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 10,
          "id": "implements",
          "lineno": 10,
          "node_id": 6,
          "src": "248:10:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 12,
          "end_col_offset": 25,
          "end_lineno": 11,
          "id": "ERC20Detailed",
          "lineno": 11,
          "node_id": 13,
          "src": "278:13:0"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 25,
        "end_lineno": 11,
        "lineno": 11,
        "node_id": 10,
        "simple": 1,
        "src": "266:25:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 11,
          "id": "implements",
          "lineno": 11,
          "node_id": 11,
          "src": "266:10:0"
        },
        "value": null
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 27,
                  "end_lineno": 14,
                  "id": "address",
                  "lineno": 14,
                  "node_id": 22,
                  "src": "329:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 12,
              "end_col_offset": 28,
              "end_lineno": 14,
              "func": {
                "ast_type": "Name",
                "col_offset": 12,
                "end_col_offset": 19,
                "end_lineno": 14,
                "id": "indexed",
                "lineno": 14,
                "node_id": 20,
                "src": "321:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 14,
              "node_id": 19,
              "src": "321:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 14,
            "lineno": 14,
            "node_id": 16,
            "simple": 1,
            "src": "313:24:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 14,
              "id": "sender",
              "lineno": 14,
              "node_id": 17,
              "src": "313:6:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 29,
                  "end_lineno": 15,
                  "id": "address",
                  "lineno": 15,
                  "node_id": 30,
                  "src": "360:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 15,
              "func": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 15,
                "id": "indexed",
                "lineno": 15,
                "node_id": 28,
                "src": "352:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 15,
              "node_id": 27,
              "src": "352:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 15,
            "lineno": 15,
            "node_id": 24,
            "simple": 1,
            "src": "342:26:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 15,
              "id": "receiver",
              "lineno": 15,
              "node_id": 25,
              "src": "342:8:0"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 16,
              "id": "uint256",
              "lineno": 16,
              "node_id": 35,
              "src": "380:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 18,
            "end_lineno": 16,
            "lineno": 16,
            "node_id": 32,
            "simple": 1,
            "src": "373:14:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 16,
              "id": "value",
              "lineno": 16,
              "node_id": 33,
              "src": "373:5:0"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 16,
        "lineno": 13,
        "name": "Transfer",
        "node_id": 15,
        "src": "293:94:0"
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 19,
                  "id": "address",
                  "lineno": 19,
                  "node_id": 44,
                  "src": "424:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 19,
              "func": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 18,
                "end_lineno": 19,
                "id": "indexed",
                "lineno": 19,
                "node_id": 42,
                "src": "416:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 19,
              "node_id": 41,
              "src": "416:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 19,
            "lineno": 19,
            "node_id": 38,
            "simple": 1,
            "src": "409:23:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 19,
              "id": "owner",
              "lineno": 19,
              "node_id": 39,
              "src": "409:5:0"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 28,
                  "end_lineno": 20,
                  "id": "address",
                  "lineno": 20,
                  "node_id": 52,
                  "src": "454:7:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 13,
              "end_col_offset": 29,
              "end_lineno": 20,
              "func": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 20,
                "end_lineno": 20,
                "id": "indexed",
                "lineno": 20,
                "node_id": 50,
                "src": "446:7:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 20,
              "node_id": 49,
              "src": "446:16:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 20,
            "lineno": 20,
            "node_id": 46,
            "simple": 1,
            "src": "437:25:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 11,
              "end_lineno": 20,
              "id": "spender",
              "lineno": 20,
              "node_id": 47,
              "src": "437:7:0"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 21,
              "id": "uint256",
              "lineno": 21,
              "node_id": 57,
              "src": "474:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 18,
            "end_lineno": 21,
            "lineno": 21,
            "node_id": 54,
            "simple": 1,
            "src": "467:14:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 21,
              "id": "value",
              "lineno": 21,
              "node_id": 55,
              "src": "467:5:0"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 21,
        "lineno": 18,
        "name": "Approval",
        "node_id": 37,
        "src": "389:92:0"
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 16,
          "end_col_offset": 26,
          "end_lineno": 23,
          "lineno": 23,
          "node_id": 65,
          "slice": {
            "ast_type": "Index",
            "col_offset": 16,
            "end_col_offset": 26,
            "end_lineno": 23,
            "lineno": 23,
            "node_id": 70,
            "src": "499:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 23,
              "end_col_offset": 25,
              "end_lineno": 23,
              "lineno": 23,
              "node_id": 68,
              "src": "506:2:0",
              "value": 33
            }
          },
          "src": "499:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 16,
            "end_col_offset": 22,
            "end_lineno": 23,
            "id": "String",
            "lineno": 23,
            "node_id": 66,
            "src": "499:6:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 27,
        "end_lineno": 23,
        "is_constant": false,
        "is_immutable": true,
        "is_public": false,
        "lineno": 23,
        "node_id": 59,
        "src": "483:27:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 4,
          "end_lineno": 23,
          "id": "NAME",
          "lineno": 23,
          "node_id": 60,
          "src": "483:4:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 18,
          "end_col_offset": 28,
          "end_lineno": 24,
          "lineno": 24,
          "node_id": 77,
          "slice": {
            "ast_type": "Index",
            "col_offset": 18,
            "end_col_offset": 28,
            "end_lineno": 24,
            "lineno": 24,
            "node_id": 82,
            "src": "558:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 25,
              "end_col_offset": 27,
              "end_lineno": 24,
              "lineno": 24,
              "node_id": 80,
              "src": "565:2:0",
              "value": 32
            }
          },
          "src": "558:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 18,
            "end_col_offset": 24,
            "end_lineno": 24,
            "id": "String",
            "lineno": 24,
            "node_id": 78,
            "src": "558:6:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 29,
        "end_lineno": 24,
        "is_constant": false,
        "is_immutable": true,
        "is_public": false,
        "lineno": 24,
        "node_id": 71,
        "src": "540:29:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 6,
          "end_lineno": 24,
          "id": "SYMBOL",
          "lineno": 24,
          "node_id": 72,
          "src": "540:6:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 20,
          "end_col_offset": 25,
          "end_lineno": 25,
          "id": "uint8",
          "lineno": 25,
          "node_id": 89,
          "src": "590:5:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 25,
        "is_constant": false,
        "is_immutable": true,
        "is_public": false,
        "lineno": 25,
        "node_id": 83,
        "src": "570:26:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 8,
          "end_lineno": 25,
          "id": "DECIMALS",
          "lineno": 25,
          "node_id": 84,
          "src": "570:8:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 18,
          "end_col_offset": 43,
          "end_lineno": 31,
          "lineno": 31,
          "node_id": 97,
          "slice": {
            "ast_type": "Index",
            "col_offset": 18,
            "end_col_offset": 43,
            "end_lineno": 31,
            "lineno": 31,
            "node_id": 107,
            "src": "961:25:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 26,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 33,
                  "end_lineno": 31,
                  "id": "address",
                  "lineno": 31,
                  "node_id": 101,
                  "src": "969:7:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 42,
                  "end_lineno": 31,
                  "id": "uint256",
                  "lineno": 31,
                  "node_id": 103,
                  "src": "978:7:0"
                }
              ],
              "end_col_offset": 42,
              "end_lineno": 31,
              "lineno": 31,
              "node_id": 100,
              "src": "969:16:0"
            }
          },
          "src": "961:25:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 18,
            "end_col_offset": 25,
            "end_lineno": 31,
            "id": "HashMap",
            "lineno": 31,
            "node_id": 98,
            "src": "961:7:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 44,
        "end_lineno": 31,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 31,
        "node_id": 91,
        "src": "943:44:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 31,
          "id": "balanceOf",
          "lineno": 31,
          "node_id": 92,
          "src": "943:9:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 18,
          "end_col_offset": 61,
          "end_lineno": 33,
          "lineno": 33,
          "node_id": 114,
          "slice": {
            "ast_type": "Index",
            "col_offset": 18,
            "end_col_offset": 61,
            "end_lineno": 33,
            "lineno": 33,
            "node_id": 133,
            "src": "1099:43:0",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 26,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 33,
                  "end_lineno": 33,
                  "id": "address",
                  "lineno": 33,
                  "node_id": 118,
                  "src": "1107:7:0"
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 35,
                  "end_col_offset": 60,
                  "end_lineno": 33,
                  "lineno": 33,
                  "node_id": 120,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 35,
                    "end_col_offset": 60,
                    "end_lineno": 33,
                    "lineno": 33,
                    "node_id": 130,
                    "src": "1116:25:0",
                    "value": {
                      "ast_type": "Tuple",
                      "col_offset": 43,
                      "elements": [
                        {
                          "ast_type": "Name",
                          "col_offset": 43,
                          "end_col_offset": 50,
                          "end_lineno": 33,
                          "id": "address",
                          "lineno": 33,
                          "node_id": 124,
                          "src": "1124:7:0"
                        },
                        {
                          "ast_type": "Name",
                          "col_offset": 52,
                          "end_col_offset": 59,
                          "end_lineno": 33,
                          "id": "uint256",
                          "lineno": 33,
                          "node_id": 126,
                          "src": "1133:7:0"
                        }
                      ],
                      "end_col_offset": 59,
                      "end_lineno": 33,
                      "lineno": 33,
                      "node_id": 123,
                      "src": "1124:16:0"
                    }
                  },
                  "src": "1116:25:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 35,
                    "end_col_offset": 42,
                    "end_lineno": 33,
                    "id": "HashMap",
                    "lineno": 33,
                    "node_id": 121,
                    "src": "1116:7:0"
                  }
                }
              ],
              "end_col_offset": 60,
              "end_lineno": 33,
              "lineno": 33,
              "node_id": 117,
              "src": "1107:34:0"
            }
          },
          "src": "1099:43:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 18,
            "end_col_offset": 25,
            "end_lineno": 33,
            "id": "HashMap",
            "lineno": 33,
            "node_id": 115,
            "src": "1099:7:0"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 62,
        "end_lineno": 33,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 33,
        "node_id": 108,
        "src": "1081:62:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 9,
          "end_lineno": 33,
          "id": "allowance",
          "lineno": 33,
          "node_id": 109,
          "src": "1081:9:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 20,
          "end_col_offset": 27,
          "end_lineno": 35,
          "id": "uint256",
          "lineno": 35,
          "node_id": 140,
          "src": "1255:7:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 28,
        "end_lineno": 35,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 35,
        "node_id": 134,
        "src": "1235:28:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 11,
          "end_lineno": 35,
          "id": "totalSupply",
          "lineno": 35,
          "node_id": 135,
          "src": "1235:11:0"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 8,
          "end_col_offset": 15,
          "end_lineno": 36,
          "id": "address",
          "lineno": 36,
          "node_id": 145,
          "src": "1272:7:0"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 15,
        "end_lineno": 36,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 36,
        "node_id": 142,
        "src": "1264:15:0",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 6,
          "end_lineno": 36,
          "id": "minter",
          "lineno": 36,
          "node_id": 143,
          "src": "1264:6:0"
        },
        "value": null
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 19,
                "end_col_offset": 29,
                "end_lineno": 40,
                "lineno": 40,
                "node_id": 150,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 19,
                  "end_col_offset": 29,
                  "end_lineno": 40,
                  "lineno": 40,
                  "node_id": 155,
                  "src": "1311:10:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 26,
                    "end_col_offset": 28,
                    "end_lineno": 40,
                    "lineno": 40,
                    "node_id": 153,
                    "src": "1318:2:0",
                    "value": 32
                  }
                },
                "src": "1311:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 25,
                  "end_lineno": 40,
                  "id": "String",
                  "lineno": 40,
                  "node_id": 151,
                  "src": "1311:6:0"
                }
              },
              "arg": "name",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 29,
              "end_lineno": 40,
              "lineno": 40,
              "node_id": 149,
              "src": "1305:16:0"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 39,
                "end_col_offset": 49,
                "end_lineno": 40,
                "lineno": 40,
                "node_id": 157,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 39,
                  "end_col_offset": 49,
                  "end_lineno": 40,
                  "lineno": 40,
                  "node_id": 162,
                  "src": "1331:10:0",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 46,
                    "end_col_offset": 48,
                    "end_lineno": 40,
                    "lineno": 40,
                    "node_id": 160,
                    "src": "1338:2:0",
                    "value": 32
                  }
                },
                "src": "1331:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 45,
                  "end_lineno": 40,
                  "id": "String",
                  "lineno": 40,
                  "node_id": 158,
                  "src": "1331:6:0"
                }
              },
              "arg": "symbol",
              "ast_type": "arg",
              "col_offset": 31,
              "end_col_offset": 49,
              "end_lineno": 40,
              "lineno": 40,
              "node_id": 156,
              "src": "1323:18:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 61,
                "end_col_offset": 66,
                "end_lineno": 40,
                "id": "uint8",
                "lineno": 40,
                "node_id": 164,
                "src": "1353:5:0"
              },
              "arg": "decimals",
              "ast_type": "arg",
              "col_offset": 51,
              "end_col_offset": 66,
              "end_lineno": 40,
              "lineno": 40,
              "node_id": 163,
              "src": "1343:15:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 76,
                "end_col_offset": 83,
                "end_lineno": 40,
                "id": "uint256",
                "lineno": 40,
                "node_id": 167,
                "src": "1368:7:0"
              },
              "arg": "supply",
              "ast_type": "arg",
              "col_offset": 68,
              "end_col_offset": 83,
              "end_lineno": 40,
              "lineno": 40,
              "node_id": 166,
              "src": "1360:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 83,
          "end_lineno": 40,
          "lineno": 40,
          "node_id": 148,
          "src": "1305:70:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 17,
              "end_col_offset": 24,
              "end_lineno": 41,
              "id": "uint256",
              "lineno": 41,
              "node_id": 172,
              "src": "1395:7:0"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 68,
            "end_lineno": 41,
            "lineno": 41,
            "node_id": 169,
            "simple": 1,
            "src": "1382:64:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 41,
              "id": "init_supply",
              "lineno": 41,
              "node_id": 170,
              "src": "1382:11:0"
            },
            "value": {
              "ast_type": "BinOp",
              "col_offset": 27,
              "end_col_offset": 68,
              "end_lineno": 41,
              "left": {
                "ast_type": "Name",
                "col_offset": 27,
                "end_col_offset": 33,
                "end_lineno": 41,
                "id": "supply",
                "lineno": 41,
                "node_id": 175,
                "src": "1405:6:0"
              },
              "lineno": 41,
              "node_id": 174,
              "op": {
                "ast_type": "Mult",
                "col_offset": 27,
                "end_col_offset": 68,
                "end_lineno": 41,
                "lineno": 41,
                "node_id": 177,
                "src": "1405:41:0"
              },
              "right": {
                "ast_type": "BinOp",
                "col_offset": 36,
                "end_col_offset": 68,
                "end_lineno": 41,
                "left": {
                  "ast_type": "Int",
                  "col_offset": 36,
                  "end_col_offset": 38,
                  "end_lineno": 41,
                  "lineno": 41,
                  "node_id": 179,
                  "src": "1414:2:0",
                  "value": 10
                },
                "lineno": 41,
                "node_id": 178,
                "op": {
                  "ast_type": "Pow",
                  "col_offset": 36,
                  "end_col_offset": 68,
                  "end_lineno": 41,
                  "lineno": 41,
                  "node_id": 180,
                  "src": "1414:32:0"
                },
                "right": {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 50,
                      "end_col_offset": 58,
                      "end_lineno": 41,
                      "id": "decimals",
                      "lineno": 41,
                      "node_id": 184,
                      "src": "1428:8:0"
                    },
                    {
                      "ast_type": "Name",
                      "col_offset": 60,
                      "end_col_offset": 67,
                      "end_lineno": 41,
                      "id": "uint256",
                      "lineno": 41,
                      "node_id": 186,
                      "src": "1438:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 42,
                  "end_col_offset": 68,
                  "end_lineno": 41,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 42,
                    "end_col_offset": 49,
                    "end_lineno": 41,
                    "id": "convert",
                    "lineno": 41,
                    "node_id": 182,
                    "src": "1420:7:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 41,
                  "node_id": 181,
                  "src": "1420:26:0"
                },
                "src": "1414:32:0"
              },
              "src": "1405:41:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 42,
            "lineno": 42,
            "node_id": 188,
            "src": "1451:11:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 8,
              "end_lineno": 42,
              "id": "NAME",
              "lineno": 42,
              "node_id": 189,
              "src": "1451:4:0"
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 42,
              "id": "name",
              "lineno": 42,
              "node_id": 191,
              "src": "1458:4:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 19,
            "end_lineno": 43,
            "lineno": 43,
            "node_id": 193,
            "src": "1467:15:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 43,
              "id": "SYMBOL",
              "lineno": 43,
              "node_id": 194,
              "src": "1467:6:0"
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 13,
              "end_col_offset": 19,
              "end_lineno": 43,
              "id": "symbol",
              "lineno": 43,
              "node_id": 196,
              "src": "1476:6:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 23,
            "end_lineno": 44,
            "lineno": 44,
            "node_id": 198,
            "src": "1487:19:0",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 44,
              "id": "DECIMALS",
              "lineno": 44,
              "node_id": 199,
              "src": "1487:8:0"
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 15,
              "end_col_offset": 23,
              "end_lineno": 44,
              "id": "decimals",
              "lineno": 44,
              "node_id": 201,
              "src": "1498:8:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 45,
            "lineno": 45,
            "node_id": 203,
            "src": "1511:40:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 45,
              "lineno": 45,
              "node_id": 204,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 30,
                "end_lineno": 45,
                "lineno": 45,
                "node_id": 214,
                "src": "1511:26:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 19,
                  "end_col_offset": 29,
                  "end_lineno": 45,
                  "lineno": 45,
                  "node_id": 209,
                  "src": "1526:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 45,
                    "id": "msg",
                    "lineno": 45,
                    "node_id": 210,
                    "src": "1526:3:0"
                  }
                }
              },
              "src": "1511:26:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 45,
                "lineno": 45,
                "node_id": 205,
                "src": "1511:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 45,
                  "id": "self",
                  "lineno": 45,
                  "node_id": 206,
                  "src": "1511:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 33,
              "end_col_offset": 44,
              "end_lineno": 45,
              "id": "init_supply",
              "lineno": 45,
              "node_id": 215,
              "src": "1540:11:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 46,
            "lineno": 46,
            "node_id": 217,
            "src": "1556:30:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "totalSupply",
              "col_offset": 4,
              "end_col_offset": 20,
              "end_lineno": 46,
              "lineno": 46,
              "node_id": 218,
              "src": "1556:16:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 46,
                "id": "self",
                "lineno": 46,
                "node_id": 219,
                "src": "1556:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 23,
              "end_col_offset": 34,
              "end_lineno": 46,
              "id": "init_supply",
              "lineno": 46,
              "node_id": 222,
              "src": "1575:11:0"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 47,
            "lineno": 47,
            "node_id": 224,
            "src": "1591:24:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "minter",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 47,
              "lineno": 47,
              "node_id": 225,
              "src": "1591:11:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 47,
                "id": "self",
                "lineno": 47,
                "node_id": 226,
                "src": "1591:4:0"
              }
            },
            "value": {
              "ast_type": "Attribute",
              "attr": "sender",
              "col_offset": 18,
              "end_col_offset": 28,
              "end_lineno": 47,
              "lineno": 47,
              "node_id": 229,
              "src": "1605:10:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 21,
                "end_lineno": 47,
                "id": "msg",
                "lineno": 47,
                "node_id": 230,
                "src": "1605:3:0"
              }
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 57,
            "end_lineno": 48,
            "lineno": 48,
            "node_id": 234,
            "src": "1620:53:0",
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 23,
                      "end_col_offset": 30,
                      "end_lineno": 48,
                      "id": "address",
                      "lineno": 48,
                      "node_id": 241,
                      "src": "1639:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 17,
                  "end_col_offset": 31,
                  "end_lineno": 48,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 22,
                    "end_lineno": 48,
                    "id": "empty",
                    "lineno": 48,
                    "node_id": 239,
                    "src": "1633:5:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 48,
                  "node_id": 238,
                  "src": "1633:14:0"
                },
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 33,
                  "end_col_offset": 43,
                  "end_lineno": 48,
                  "lineno": 48,
                  "node_id": 243,
                  "src": "1649:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 33,
                    "end_col_offset": 36,
                    "end_lineno": 48,
                    "id": "msg",
                    "lineno": 48,
                    "node_id": 244,
                    "src": "1649:3:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 45,
                  "end_col_offset": 56,
                  "end_lineno": 48,
                  "id": "init_supply",
                  "lineno": 48,
                  "node_id": 247,
                  "src": "1661:11:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 57,
              "end_lineno": 48,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 48,
                "id": "Transfer",
                "lineno": 48,
                "node_id": 236,
                "src": "1624:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 48,
              "node_id": 235,
              "src": "1624:49:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 39,
            "id": "external",
            "lineno": 39,
            "node_id": 249,
            "src": "1283:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 57,
        "end_lineno": 48,
        "lineno": 40,
        "name": "__init__",
        "node_id": 147,
        "pos": null,
        "returns": null,
        "src": "1292:381:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 19,
                "end_col_offset": 26,
                "end_lineno": 52,
                "id": "address",
                "lineno": 52,
                "node_id": 254,
                "src": "1705:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 26,
              "end_lineno": 52,
              "lineno": 52,
              "node_id": 253,
              "src": "1699:13:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 37,
                "end_col_offset": 44,
                "end_lineno": 52,
                "id": "uint256",
                "lineno": 52,
                "node_id": 257,
                "src": "1723:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 28,
              "end_col_offset": 44,
              "end_lineno": 52,
              "lineno": 52,
              "node_id": 256,
              "src": "1714:16:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 44,
          "end_lineno": 52,
          "lineno": 52,
          "node_id": 252,
          "src": "1699:31:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 40,
            "end_lineno": 60,
            "lineno": 60,
            "node_id": 261,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 40,
              "end_lineno": 60,
              "lineno": 60,
              "node_id": 648,
              "src": "2022:36:0"
            },
            "src": "2022:36:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 60,
              "lineno": 60,
              "node_id": 262,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 30,
                "end_lineno": 60,
                "lineno": 60,
                "node_id": 272,
                "src": "2022:26:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 19,
                  "end_col_offset": 29,
                  "end_lineno": 60,
                  "lineno": 60,
                  "node_id": 267,
                  "src": "2037:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 60,
                    "id": "msg",
                    "lineno": 60,
                    "node_id": 268,
                    "src": "2037:3:0"
                  }
                }
              },
              "src": "2022:26:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 60,
                "lineno": 60,
                "node_id": 263,
                "src": "2022:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 60,
                  "id": "self",
                  "lineno": 60,
                  "node_id": 264,
                  "src": "2022:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 34,
              "end_col_offset": 40,
              "end_lineno": 60,
              "id": "_value",
              "lineno": 60,
              "node_id": 274,
              "src": "2052:6:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 61,
            "lineno": 61,
            "node_id": 276,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 61,
              "lineno": 61,
              "node_id": 521,
              "src": "2063:29:0"
            },
            "src": "2063:29:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 61,
              "lineno": 61,
              "node_id": 277,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 61,
                "lineno": 61,
                "node_id": 285,
                "src": "2063:19:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 61,
                  "id": "_to",
                  "lineno": 61,
                  "node_id": 282,
                  "src": "2078:3:0"
                }
              },
              "src": "2063:19:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 61,
                "lineno": 61,
                "node_id": 278,
                "src": "2063:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 61,
                  "id": "self",
                  "lineno": 61,
                  "node_id": 279,
                  "src": "2063:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 27,
              "end_col_offset": 33,
              "end_lineno": 61,
              "id": "_value",
              "lineno": 61,
              "node_id": 287,
              "src": "2086:6:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 41,
            "end_lineno": 62,
            "lineno": 62,
            "node_id": 290,
            "src": "2097:37:0",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 17,
                  "end_col_offset": 27,
                  "end_lineno": 62,
                  "lineno": 62,
                  "node_id": 294,
                  "src": "2110:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 20,
                    "end_lineno": 62,
                    "id": "msg",
                    "lineno": 62,
                    "node_id": 295,
                    "src": "2110:3:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 32,
                  "end_lineno": 62,
                  "id": "_to",
                  "lineno": 62,
                  "node_id": 298,
                  "src": "2122:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 34,
                  "end_col_offset": 40,
                  "end_lineno": 62,
                  "id": "_value",
                  "lineno": 62,
                  "node_id": 300,
                  "src": "2127:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 41,
              "end_lineno": 62,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 62,
                "id": "Transfer",
                "lineno": 62,
                "node_id": 292,
                "src": "2101:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 62,
              "node_id": 291,
              "src": "2101:33:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 63,
            "lineno": 63,
            "node_id": 302,
            "src": "2139:11:0",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 63,
              "lineno": 63,
              "node_id": 303,
              "src": "2146:4:0",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 51,
            "id": "external",
            "lineno": 51,
            "node_id": 304,
            "src": "1677:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 57,
          "lineno": 53,
          "node_id": 308,
          "src": "1745:150:0",
          "value": "\n    @dev Transfer token for a specified address\n    @param _to The address to transfer to.\n    @param _value The amount to be transferred.\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 63,
        "lineno": 52,
        "name": "transfer",
        "node_id": 251,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 49,
          "end_col_offset": 53,
          "end_lineno": 52,
          "id": "bool",
          "lineno": 52,
          "node_id": 306,
          "src": "1735:4:0"
        },
        "src": "1686:464:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 32,
                "end_lineno": 67,
                "id": "address",
                "lineno": 67,
                "node_id": 312,
                "src": "2188:7:0"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 17,
              "end_col_offset": 32,
              "end_lineno": 67,
              "lineno": 67,
              "node_id": 311,
              "src": "2180:15:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 40,
                "end_col_offset": 47,
                "end_lineno": 67,
                "id": "address",
                "lineno": 67,
                "node_id": 315,
                "src": "2203:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 34,
              "end_col_offset": 47,
              "end_lineno": 67,
              "lineno": 67,
              "node_id": 314,
              "src": "2197:13:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 58,
                "end_col_offset": 65,
                "end_lineno": 67,
                "id": "uint256",
                "lineno": 67,
                "node_id": 318,
                "src": "2221:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 49,
              "end_col_offset": 65,
              "end_lineno": 67,
              "lineno": 67,
              "node_id": 317,
              "src": "2212:16:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 17,
          "default": null,
          "defaults": [],
          "end_col_offset": 65,
          "end_lineno": 67,
          "lineno": 67,
          "node_id": 310,
          "src": "2180:48:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 65,
            "end_lineno": 76,
            "lineno": 76,
            "msg": {
              "ast_type": "Str",
              "col_offset": 44,
              "end_col_offset": 65,
              "end_lineno": 76,
              "lineno": 76,
              "node_id": 336,
              "src": "2681:21:0",
              "value": "balanceOf underflow"
            },
            "node_id": 322,
            "src": "2641:61:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 42,
              "end_lineno": 76,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 32,
                "end_lineno": 76,
                "lineno": 76,
                "node_id": 324,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 32,
                  "end_lineno": 76,
                  "lineno": 76,
                  "node_id": 332,
                  "src": "2648:21:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 31,
                    "end_lineno": 76,
                    "id": "_from",
                    "lineno": 76,
                    "node_id": 329,
                    "src": "2663:5:0"
                  }
                },
                "src": "2648:21:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "balanceOf",
                  "col_offset": 11,
                  "end_col_offset": 25,
                  "end_lineno": 76,
                  "lineno": 76,
                  "node_id": 325,
                  "src": "2648:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 76,
                    "id": "self",
                    "lineno": 76,
                    "node_id": 326,
                    "src": "2648:4:0"
                  }
                }
              },
              "lineno": 76,
              "node_id": 323,
              "op": {
                "ast_type": "GtE",
                "col_offset": 11,
                "end_col_offset": 42,
                "end_lineno": 76,
                "lineno": 76,
                "node_id": 381,
                "src": "2648:31:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 36,
                "end_col_offset": 42,
                "end_lineno": 76,
                "id": "_value",
                "lineno": 76,
                "node_id": 334,
                "src": "2673:6:0"
              },
              "src": "2648:31:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 77,
            "lineno": 77,
            "node_id": 337,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 35,
              "end_lineno": 77,
              "lineno": 77,
              "node_id": 648,
              "src": "2707:31:0"
            },
            "src": "2707:31:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 25,
              "end_lineno": 77,
              "lineno": 77,
              "node_id": 338,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 25,
                "end_lineno": 77,
                "lineno": 77,
                "node_id": 346,
                "src": "2707:21:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 24,
                  "end_lineno": 77,
                  "id": "_from",
                  "lineno": 77,
                  "node_id": 343,
                  "src": "2722:5:0"
                }
              },
              "src": "2707:21:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 77,
                "lineno": 77,
                "node_id": 339,
                "src": "2707:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 77,
                  "id": "self",
                  "lineno": 77,
                  "node_id": 340,
                  "src": "2707:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 29,
              "end_col_offset": 35,
              "end_lineno": 77,
              "id": "_value",
              "lineno": 77,
              "node_id": 348,
              "src": "2732:6:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 78,
            "lineno": 78,
            "node_id": 350,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 78,
              "lineno": 78,
              "node_id": 521,
              "src": "2743:29:0"
            },
            "src": "2743:29:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 78,
              "lineno": 78,
              "node_id": 351,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 78,
                "lineno": 78,
                "node_id": 359,
                "src": "2743:19:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 78,
                  "id": "_to",
                  "lineno": 78,
                  "node_id": 356,
                  "src": "2758:3:0"
                }
              },
              "src": "2743:19:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 78,
                "lineno": 78,
                "node_id": 352,
                "src": "2743:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 78,
                  "id": "self",
                  "lineno": 78,
                  "node_id": 353,
                  "src": "2743:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 27,
              "end_col_offset": 33,
              "end_lineno": 78,
              "id": "_value",
              "lineno": 78,
              "node_id": 361,
              "src": "2766:6:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 77,
            "end_lineno": 81,
            "lineno": 81,
            "msg": {
              "ast_type": "Str",
              "col_offset": 56,
              "end_col_offset": 77,
              "end_lineno": 81,
              "lineno": 81,
              "node_id": 384,
              "src": "2952:21:0",
              "value": "allowance underflow"
            },
            "node_id": 363,
            "src": "2900:73:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 54,
              "end_lineno": 81,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 44,
                "end_lineno": 81,
                "lineno": 81,
                "node_id": 365,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 44,
                  "end_lineno": 81,
                  "lineno": 81,
                  "node_id": 380,
                  "src": "2907:33:0",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "sender",
                    "col_offset": 33,
                    "end_col_offset": 43,
                    "end_lineno": 81,
                    "lineno": 81,
                    "node_id": 375,
                    "src": "2929:10:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 33,
                      "end_col_offset": 36,
                      "end_lineno": 81,
                      "id": "msg",
                      "lineno": 81,
                      "node_id": 376,
                      "src": "2929:3:0"
                    }
                  }
                },
                "src": "2907:33:0",
                "value": {
                  "ast_type": "Subscript",
                  "col_offset": 11,
                  "end_col_offset": 32,
                  "end_lineno": 81,
                  "lineno": 81,
                  "node_id": 366,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 11,
                    "end_col_offset": 32,
                    "end_lineno": 81,
                    "lineno": 81,
                    "node_id": 374,
                    "src": "2907:21:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 26,
                      "end_col_offset": 31,
                      "end_lineno": 81,
                      "id": "_from",
                      "lineno": 81,
                      "node_id": 371,
                      "src": "2922:5:0"
                    }
                  },
                  "src": "2907:21:0",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "allowance",
                    "col_offset": 11,
                    "end_col_offset": 25,
                    "end_lineno": 81,
                    "lineno": 81,
                    "node_id": 367,
                    "src": "2907:14:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 11,
                      "end_col_offset": 15,
                      "end_lineno": 81,
                      "id": "self",
                      "lineno": 81,
                      "node_id": 368,
                      "src": "2907:4:0"
                    }
                  }
                }
              },
              "lineno": 81,
              "node_id": 364,
              "op": {
                "ast_type": "GtE",
                "col_offset": 11,
                "end_col_offset": 54,
                "end_lineno": 81,
                "lineno": 81,
                "node_id": 381,
                "src": "2907:43:0"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 48,
                "end_col_offset": 54,
                "end_lineno": 81,
                "id": "_value",
                "lineno": 81,
                "node_id": 382,
                "src": "2944:6:0"
              },
              "src": "2907:43:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 47,
            "end_lineno": 82,
            "lineno": 82,
            "node_id": 385,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 47,
              "end_lineno": 82,
              "lineno": 82,
              "node_id": 648,
              "src": "2978:43:0"
            },
            "src": "2978:43:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 37,
              "end_lineno": 82,
              "lineno": 82,
              "node_id": 386,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 37,
                "end_lineno": 82,
                "lineno": 82,
                "node_id": 401,
                "src": "2978:33:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 26,
                  "end_col_offset": 36,
                  "end_lineno": 82,
                  "lineno": 82,
                  "node_id": 396,
                  "src": "3000:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 26,
                    "end_col_offset": 29,
                    "end_lineno": 82,
                    "id": "msg",
                    "lineno": 82,
                    "node_id": 397,
                    "src": "3000:3:0"
                  }
                }
              },
              "src": "2978:33:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 25,
                "end_lineno": 82,
                "lineno": 82,
                "node_id": 387,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 4,
                  "end_col_offset": 25,
                  "end_lineno": 82,
                  "lineno": 82,
                  "node_id": 395,
                  "src": "2978:21:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 24,
                    "end_lineno": 82,
                    "id": "_from",
                    "lineno": 82,
                    "node_id": 392,
                    "src": "2993:5:0"
                  }
                },
                "src": "2978:21:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowance",
                  "col_offset": 4,
                  "end_col_offset": 18,
                  "end_lineno": 82,
                  "lineno": 82,
                  "node_id": 388,
                  "src": "2978:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 82,
                    "id": "self",
                    "lineno": 82,
                    "node_id": 389,
                    "src": "2978:4:0"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 41,
              "end_col_offset": 47,
              "end_lineno": 82,
              "id": "_value",
              "lineno": 82,
              "node_id": 403,
              "src": "3015:6:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 83,
            "lineno": 83,
            "node_id": 406,
            "src": "3026:32:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 22,
                  "end_lineno": 83,
                  "id": "_from",
                  "lineno": 83,
                  "node_id": 410,
                  "src": "3039:5:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 27,
                  "end_lineno": 83,
                  "id": "_to",
                  "lineno": 83,
                  "node_id": 412,
                  "src": "3046:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 35,
                  "end_lineno": 83,
                  "id": "_value",
                  "lineno": 83,
                  "node_id": 414,
                  "src": "3051:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 36,
              "end_lineno": 83,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 83,
                "id": "Transfer",
                "lineno": 83,
                "node_id": 408,
                "src": "3030:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 83,
              "node_id": 407,
              "src": "3030:28:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 84,
            "lineno": 84,
            "node_id": 416,
            "src": "3063:11:0",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 84,
              "lineno": 84,
              "node_id": 417,
              "src": "3070:4:0",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 66,
            "id": "external",
            "lineno": 66,
            "node_id": 418,
            "src": "2154:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 73,
          "lineno": 68,
          "node_id": 422,
          "src": "2243:271:0",
          "value": "\n     @dev Transfer tokens from one address to another.\n     @param _from address The address which you want to send tokens from\n     @param _to address The address which you want to transfer to\n     @param _value uint256 the amount of tokens to be transferred\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 84,
        "lineno": 67,
        "name": "transferFrom",
        "node_id": 309,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 70,
          "end_col_offset": 74,
          "end_lineno": 67,
          "id": "bool",
          "lineno": 67,
          "node_id": 420,
          "src": "2233:4:0"
        },
        "src": "2163:911:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 88,
                "id": "address",
                "lineno": 88,
                "node_id": 426,
                "src": "3110:7:0"
              },
              "arg": "_spender",
              "ast_type": "arg",
              "col_offset": 12,
              "end_col_offset": 30,
              "end_lineno": 88,
              "lineno": 88,
              "node_id": 425,
              "src": "3099:18:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 41,
                "end_col_offset": 48,
                "end_lineno": 88,
                "id": "uint256",
                "lineno": 88,
                "node_id": 429,
                "src": "3128:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 48,
              "end_lineno": 88,
              "lineno": 88,
              "node_id": 428,
              "src": "3119:16:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 12,
          "default": null,
          "defaults": [],
          "end_col_offset": 48,
          "end_lineno": 88,
          "lineno": 88,
          "node_id": 424,
          "src": "3099:36:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 49,
            "end_lineno": 98,
            "lineno": 98,
            "node_id": 433,
            "src": "3781:45:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 40,
              "end_lineno": 98,
              "lineno": 98,
              "node_id": 434,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 40,
                "end_lineno": 98,
                "lineno": 98,
                "node_id": 449,
                "src": "3781:36:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 39,
                  "end_lineno": 98,
                  "id": "_spender",
                  "lineno": 98,
                  "node_id": 446,
                  "src": "3808:8:0"
                }
              },
              "src": "3781:36:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 30,
                "end_lineno": 98,
                "lineno": 98,
                "node_id": 435,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 4,
                  "end_col_offset": 30,
                  "end_lineno": 98,
                  "lineno": 98,
                  "node_id": 445,
                  "src": "3781:26:0",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "sender",
                    "col_offset": 19,
                    "end_col_offset": 29,
                    "end_lineno": 98,
                    "lineno": 98,
                    "node_id": 440,
                    "src": "3796:10:0",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 19,
                      "end_col_offset": 22,
                      "end_lineno": 98,
                      "id": "msg",
                      "lineno": 98,
                      "node_id": 441,
                      "src": "3796:3:0"
                    }
                  }
                },
                "src": "3781:26:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowance",
                  "col_offset": 4,
                  "end_col_offset": 18,
                  "end_lineno": 98,
                  "lineno": 98,
                  "node_id": 436,
                  "src": "3781:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 98,
                    "id": "self",
                    "lineno": 98,
                    "node_id": 437,
                    "src": "3781:4:0"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 43,
              "end_col_offset": 49,
              "end_lineno": 98,
              "id": "_value",
              "lineno": 98,
              "node_id": 450,
              "src": "3820:6:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 46,
            "end_lineno": 99,
            "lineno": 99,
            "node_id": 453,
            "src": "3831:42:0",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 17,
                  "end_col_offset": 27,
                  "end_lineno": 99,
                  "lineno": 99,
                  "node_id": 457,
                  "src": "3844:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 20,
                    "end_lineno": 99,
                    "id": "msg",
                    "lineno": 99,
                    "node_id": 458,
                    "src": "3844:3:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 37,
                  "end_lineno": 99,
                  "id": "_spender",
                  "lineno": 99,
                  "node_id": 461,
                  "src": "3856:8:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 45,
                  "end_lineno": 99,
                  "id": "_value",
                  "lineno": 99,
                  "node_id": 463,
                  "src": "3866:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 46,
              "end_lineno": 99,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 99,
                "id": "Approval",
                "lineno": 99,
                "node_id": 455,
                "src": "3835:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 99,
              "node_id": 454,
              "src": "3835:38:0"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 100,
            "lineno": 100,
            "node_id": 465,
            "src": "3878:11:0",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 100,
              "lineno": 100,
              "node_id": 466,
              "src": "3885:4:0",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 87,
            "id": "external",
            "lineno": 87,
            "node_id": 467,
            "src": "3078:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 97,
          "lineno": 89,
          "node_id": 471,
          "src": "3150:626:0",
          "value": "\n    @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n         Beware that changing an allowance with this method brings the risk that someone may use both the old\n         and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n         race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n         https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param _spender The address which will spend the funds.\n    @param _value The amount of tokens to be spent.\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 100,
        "lineno": 88,
        "name": "approve",
        "node_id": 423,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 53,
          "end_col_offset": 57,
          "end_lineno": 88,
          "id": "bool",
          "lineno": 88,
          "node_id": 469,
          "src": "3140:4:0"
        },
        "src": "3087:802:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 104,
                "id": "address",
                "lineno": 104,
                "node_id": 475,
                "src": "3916:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 9,
              "end_col_offset": 21,
              "end_lineno": 104,
              "lineno": 104,
              "node_id": 474,
              "src": "3911:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 31,
                "end_col_offset": 38,
                "end_lineno": 104,
                "id": "uint256",
                "lineno": 104,
                "node_id": 478,
                "src": "3933:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 23,
              "end_col_offset": 38,
              "end_lineno": 104,
              "lineno": 104,
              "node_id": 477,
              "src": "3925:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 9,
          "default": null,
          "defaults": [],
          "end_col_offset": 38,
          "end_lineno": 104,
          "lineno": 104,
          "node_id": 473,
          "src": "3911:29:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 112,
            "lineno": 112,
            "msg": null,
            "node_id": 482,
            "src": "4252:32:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 36,
              "end_lineno": 112,
              "left": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 112,
                "lineno": 112,
                "node_id": 484,
                "src": "4259:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 112,
                  "id": "msg",
                  "lineno": 112,
                  "node_id": 485,
                  "src": "4259:3:0"
                }
              },
              "lineno": 112,
              "node_id": 483,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 36,
                "end_lineno": 112,
                "lineno": 112,
                "node_id": 488,
                "src": "4259:25:0"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "minter",
                "col_offset": 25,
                "end_col_offset": 36,
                "end_lineno": 112,
                "lineno": 112,
                "node_id": 489,
                "src": "4273:11:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 29,
                  "end_lineno": 112,
                  "id": "self",
                  "lineno": 112,
                  "node_id": 490,
                  "src": "4273:4:0"
                }
              },
              "src": "4259:25:0"
            }
          },
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 113,
            "lineno": 113,
            "msg": null,
            "node_id": 493,
            "src": "4323:28:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 32,
              "end_lineno": 113,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 14,
                "end_lineno": 113,
                "id": "_to",
                "lineno": 113,
                "node_id": 495,
                "src": "4330:3:0"
              },
              "lineno": 113,
              "node_id": 494,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 32,
                "end_lineno": 113,
                "lineno": 113,
                "node_id": 555,
                "src": "4330:21:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 24,
                    "end_col_offset": 31,
                    "end_lineno": 113,
                    "id": "address",
                    "lineno": 113,
                    "node_id": 501,
                    "src": "4343:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 18,
                "end_col_offset": 32,
                "end_lineno": 113,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 23,
                  "end_lineno": 113,
                  "id": "empty",
                  "lineno": 113,
                  "node_id": 499,
                  "src": "4337:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 113,
                "node_id": 498,
                "src": "4337:14:0"
              },
              "src": "4330:21:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 114,
            "lineno": 114,
            "node_id": 503,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 114,
              "lineno": 114,
              "node_id": 521,
              "src": "4356:26:0"
            },
            "src": "4356:26:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "totalSupply",
              "col_offset": 4,
              "end_col_offset": 20,
              "end_lineno": 114,
              "lineno": 114,
              "node_id": 504,
              "src": "4356:16:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 114,
                "id": "self",
                "lineno": 114,
                "node_id": 505,
                "src": "4356:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 30,
              "end_lineno": 114,
              "id": "_value",
              "lineno": 114,
              "node_id": 509,
              "src": "4376:6:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 115,
            "lineno": 115,
            "node_id": 511,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 115,
              "lineno": 115,
              "node_id": 521,
              "src": "4387:29:0"
            },
            "src": "4387:29:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 115,
              "lineno": 115,
              "node_id": 512,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 115,
                "lineno": 115,
                "node_id": 520,
                "src": "4387:19:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 115,
                  "id": "_to",
                  "lineno": 115,
                  "node_id": 517,
                  "src": "4402:3:0"
                }
              },
              "src": "4387:19:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 115,
                "lineno": 115,
                "node_id": 513,
                "src": "4387:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 115,
                  "id": "self",
                  "lineno": 115,
                  "node_id": 514,
                  "src": "4387:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 27,
              "end_col_offset": 33,
              "end_lineno": 115,
              "id": "_value",
              "lineno": 115,
              "node_id": 522,
              "src": "4410:6:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 116,
            "lineno": 116,
            "node_id": 525,
            "src": "4421:41:0",
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 23,
                      "end_col_offset": 30,
                      "end_lineno": 116,
                      "id": "address",
                      "lineno": 116,
                      "node_id": 532,
                      "src": "4440:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 17,
                  "end_col_offset": 31,
                  "end_lineno": 116,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 22,
                    "end_lineno": 116,
                    "id": "empty",
                    "lineno": 116,
                    "node_id": 530,
                    "src": "4434:5:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 116,
                  "node_id": 529,
                  "src": "4434:14:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 36,
                  "end_lineno": 116,
                  "id": "_to",
                  "lineno": 116,
                  "node_id": 534,
                  "src": "4450:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 44,
                  "end_lineno": 116,
                  "id": "_value",
                  "lineno": 116,
                  "node_id": 536,
                  "src": "4455:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 45,
              "end_lineno": 116,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 116,
                "id": "Transfer",
                "lineno": 116,
                "node_id": 527,
                "src": "4425:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 116,
              "node_id": 526,
              "src": "4425:37:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 103,
            "id": "external",
            "lineno": 103,
            "node_id": 538,
            "src": "3893:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 111,
          "lineno": 105,
          "node_id": 540,
          "src": "3947:300:0",
          "value": "\n    @dev Mint an amount of the token and assigns it to an account.\n         This encapsulates the modification of balances such that the\n         proper events are emitted.\n    @param _to The account that will receive the created tokens.\n    @param _value The amount that will be created.\n    "
        },
        "end_col_offset": 45,
        "end_lineno": 116,
        "lineno": 104,
        "name": "mint",
        "node_id": 472,
        "pos": null,
        "returns": null,
        "src": "3902:560:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 15,
                "end_col_offset": 22,
                "end_lineno": 120,
                "id": "address",
                "lineno": 120,
                "node_id": 544,
                "src": "4490:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 10,
              "end_col_offset": 22,
              "end_lineno": 120,
              "lineno": 120,
              "node_id": 543,
              "src": "4485:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 32,
                "end_col_offset": 39,
                "end_lineno": 120,
                "id": "uint256",
                "lineno": 120,
                "node_id": 547,
                "src": "4507:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 24,
              "end_col_offset": 39,
              "end_lineno": 120,
              "lineno": 120,
              "node_id": 546,
              "src": "4499:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 10,
          "default": null,
          "defaults": [],
          "end_col_offset": 39,
          "end_lineno": 120,
          "lineno": 120,
          "node_id": 542,
          "src": "4485:29:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 127,
            "lineno": 127,
            "msg": null,
            "node_id": 551,
            "src": "4733:28:0",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 32,
              "end_lineno": 127,
              "left": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 14,
                "end_lineno": 127,
                "id": "_to",
                "lineno": 127,
                "node_id": 553,
                "src": "4740:3:0"
              },
              "lineno": 127,
              "node_id": 552,
              "op": {
                "ast_type": "NotEq",
                "col_offset": 11,
                "end_col_offset": 32,
                "end_lineno": 127,
                "lineno": 127,
                "node_id": 555,
                "src": "4740:21:0"
              },
              "right": {
                "args": [
                  {
                    "ast_type": "Name",
                    "col_offset": 24,
                    "end_col_offset": 31,
                    "end_lineno": 127,
                    "id": "address",
                    "lineno": 127,
                    "node_id": 559,
                    "src": "4753:7:0"
                  }
                ],
                "ast_type": "Call",
                "col_offset": 18,
                "end_col_offset": 32,
                "end_lineno": 127,
                "func": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 23,
                  "end_lineno": 127,
                  "id": "empty",
                  "lineno": 127,
                  "node_id": 557,
                  "src": "4747:5:0"
                },
                "keyword": null,
                "keywords": [],
                "lineno": 127,
                "node_id": 556,
                "src": "4747:14:0"
              },
              "src": "4740:21:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 128,
            "lineno": 128,
            "node_id": 561,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 128,
              "lineno": 128,
              "node_id": 648,
              "src": "4766:26:0"
            },
            "src": "4766:26:0",
            "target": {
              "ast_type": "Attribute",
              "attr": "totalSupply",
              "col_offset": 4,
              "end_col_offset": 20,
              "end_lineno": 128,
              "lineno": 128,
              "node_id": 562,
              "src": "4766:16:0",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 128,
                "id": "self",
                "lineno": 128,
                "node_id": 563,
                "src": "4766:4:0"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 30,
              "end_lineno": 128,
              "id": "_value",
              "lineno": 128,
              "node_id": 567,
              "src": "4786:6:0"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 33,
            "end_lineno": 129,
            "lineno": 129,
            "node_id": 569,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 33,
              "end_lineno": 129,
              "lineno": 129,
              "node_id": 648,
              "src": "4797:29:0"
            },
            "src": "4797:29:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 23,
              "end_lineno": 129,
              "lineno": 129,
              "node_id": 570,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 129,
                "lineno": 129,
                "node_id": 578,
                "src": "4797:19:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 22,
                  "end_lineno": 129,
                  "id": "_to",
                  "lineno": 129,
                  "node_id": 575,
                  "src": "4812:3:0"
                }
              },
              "src": "4797:19:0",
              "value": {
                "ast_type": "Attribute",
                "attr": "balanceOf",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 129,
                "lineno": 129,
                "node_id": 571,
                "src": "4797:14:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 129,
                  "id": "self",
                  "lineno": 129,
                  "node_id": 572,
                  "src": "4797:4:0"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 27,
              "end_col_offset": 33,
              "end_lineno": 129,
              "id": "_value",
              "lineno": 129,
              "node_id": 580,
              "src": "4820:6:0"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 130,
            "lineno": 130,
            "node_id": 583,
            "src": "4831:41:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 20,
                  "end_lineno": 130,
                  "id": "_to",
                  "lineno": 130,
                  "node_id": 587,
                  "src": "4844:3:0"
                },
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 28,
                      "end_col_offset": 35,
                      "end_lineno": 130,
                      "id": "address",
                      "lineno": 130,
                      "node_id": 592,
                      "src": "4855:7:0"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 22,
                  "end_col_offset": 36,
                  "end_lineno": 130,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 22,
                    "end_col_offset": 27,
                    "end_lineno": 130,
                    "id": "empty",
                    "lineno": 130,
                    "node_id": 590,
                    "src": "4849:5:0"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 130,
                  "node_id": 589,
                  "src": "4849:14:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 44,
                  "end_lineno": 130,
                  "id": "_value",
                  "lineno": 130,
                  "node_id": 594,
                  "src": "4865:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 45,
              "end_lineno": 130,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 130,
                "id": "Transfer",
                "lineno": 130,
                "node_id": 585,
                "src": "4835:8:0"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 130,
              "node_id": 584,
              "src": "4835:37:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 119,
            "id": "internal",
            "lineno": 119,
            "node_id": 596,
            "src": "4466:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 126,
          "lineno": 121,
          "node_id": 598,
          "src": "4521:207:0",
          "value": "\n    @dev Internal function that burns an amount of the token of a given\n         account.\n    @param _to The account whose tokens will be burned.\n    @param _value The amount that will be burned.\n    "
        },
        "end_col_offset": 45,
        "end_lineno": 130,
        "lineno": 120,
        "name": "_burn",
        "node_id": 541,
        "pos": null,
        "returns": null,
        "src": "4475:397:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 17,
                "end_col_offset": 24,
                "end_lineno": 134,
                "id": "uint256",
                "lineno": 134,
                "node_id": 602,
                "src": "4902:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 9,
              "end_col_offset": 24,
              "end_lineno": 134,
              "lineno": 134,
              "node_id": 601,
              "src": "4894:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 9,
          "default": null,
          "defaults": [],
          "end_col_offset": 24,
          "end_lineno": 134,
          "lineno": 134,
          "node_id": 600,
          "src": "4894:15:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 139,
            "lineno": 139,
            "node_id": 606,
            "src": "5034:30:0",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 15,
                  "end_col_offset": 25,
                  "end_lineno": 139,
                  "lineno": 139,
                  "node_id": 612,
                  "src": "5045:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 15,
                    "end_col_offset": 18,
                    "end_lineno": 139,
                    "id": "msg",
                    "lineno": 139,
                    "node_id": 613,
                    "src": "5045:3:0"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 27,
                  "end_col_offset": 33,
                  "end_lineno": 139,
                  "id": "_value",
                  "lineno": 139,
                  "node_id": 616,
                  "src": "5057:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 34,
              "end_lineno": 139,
              "func": {
                "ast_type": "Attribute",
                "attr": "_burn",
                "col_offset": 4,
                "end_col_offset": 14,
                "end_lineno": 139,
                "lineno": 139,
                "node_id": 608,
                "src": "5034:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 139,
                  "id": "self",
                  "lineno": 139,
                  "node_id": 609,
                  "src": "5034:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 139,
              "node_id": 607,
              "src": "5034:30:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 133,
            "id": "external",
            "lineno": 133,
            "node_id": 618,
            "src": "4876:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 138,
          "lineno": 135,
          "node_id": 620,
          "src": "4916:113:0",
          "value": "\n    @dev Burn an amount of the token of msg.sender.\n    @param _value The amount that will be burned.\n    "
        },
        "end_col_offset": 34,
        "end_lineno": 139,
        "lineno": 134,
        "name": "burn",
        "node_id": 599,
        "pos": null,
        "returns": null,
        "src": "4885:179:0"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 18,
                "end_col_offset": 25,
                "end_lineno": 143,
                "id": "address",
                "lineno": 143,
                "node_id": 624,
                "src": "5095:7:0"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 25,
              "end_lineno": 143,
              "lineno": 143,
              "node_id": 623,
              "src": "5090:12:0"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 35,
                "end_col_offset": 42,
                "end_lineno": 143,
                "id": "uint256",
                "lineno": 143,
                "node_id": 627,
                "src": "5112:7:0"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 27,
              "end_col_offset": 42,
              "end_lineno": 143,
              "lineno": 143,
              "node_id": 626,
              "src": "5104:15:0"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 42,
          "end_lineno": 143,
          "lineno": 143,
          "node_id": 622,
          "src": "5090:29:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 149,
            "lineno": 149,
            "node_id": 631,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 45,
              "end_lineno": 149,
              "lineno": 149,
              "node_id": 648,
              "src": "5307:41:0"
            },
            "src": "5307:41:0",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 35,
              "end_lineno": 149,
              "lineno": 149,
              "node_id": 632,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 35,
                "end_lineno": 149,
                "lineno": 149,
                "node_id": 647,
                "src": "5307:31:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 24,
                  "end_col_offset": 34,
                  "end_lineno": 149,
                  "lineno": 149,
                  "node_id": 642,
                  "src": "5327:10:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 24,
                    "end_col_offset": 27,
                    "end_lineno": 149,
                    "id": "msg",
                    "lineno": 149,
                    "node_id": 643,
                    "src": "5327:3:0"
                  }
                }
              },
              "src": "5307:31:0",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 23,
                "end_lineno": 149,
                "lineno": 149,
                "node_id": 633,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 4,
                  "end_col_offset": 23,
                  "end_lineno": 149,
                  "lineno": 149,
                  "node_id": 641,
                  "src": "5307:19:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 149,
                    "id": "_to",
                    "lineno": 149,
                    "node_id": 638,
                    "src": "5322:3:0"
                  }
                },
                "src": "5307:19:0",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowance",
                  "col_offset": 4,
                  "end_col_offset": 18,
                  "end_lineno": 149,
                  "lineno": 149,
                  "node_id": 634,
                  "src": "5307:14:0",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 149,
                    "id": "self",
                    "lineno": 149,
                    "node_id": 635,
                    "src": "5307:4:0"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 39,
              "end_col_offset": 45,
              "end_lineno": 149,
              "id": "_value",
              "lineno": 149,
              "node_id": 649,
              "src": "5342:6:0"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 150,
            "lineno": 150,
            "node_id": 651,
            "src": "5353:23:0",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 15,
                  "end_col_offset": 18,
                  "end_lineno": 150,
                  "id": "_to",
                  "lineno": 150,
                  "node_id": 657,
                  "src": "5364:3:0"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 26,
                  "end_lineno": 150,
                  "id": "_value",
                  "lineno": 150,
                  "node_id": 659,
                  "src": "5369:6:0"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 27,
              "end_lineno": 150,
              "func": {
                "ast_type": "Attribute",
                "attr": "_burn",
                "col_offset": 4,
                "end_col_offset": 14,
                "end_lineno": 150,
                "lineno": 150,
                "node_id": 653,
                "src": "5353:10:0",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 150,
                  "id": "self",
                  "lineno": 150,
                  "node_id": 654,
                  "src": "5353:4:0"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 150,
              "node_id": 652,
              "src": "5353:23:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 142,
            "id": "external",
            "lineno": 142,
            "node_id": 661,
            "src": "5068:8:0"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 148,
          "lineno": 144,
          "node_id": 663,
          "src": "5126:176:0",
          "value": "\n    @dev Burn an amount of the token from a given account.\n    @param _to The account whose tokens will be burned.\n    @param _value The amount that will be burned.\n    "
        },
        "end_col_offset": 27,
        "end_lineno": 150,
        "lineno": 143,
        "name": "burnFrom",
        "node_id": 621,
        "pos": null,
        "returns": null,
        "src": "5077:299:0"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 155,
          "lineno": 155,
          "node_id": 665,
          "src": "5438:3:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 156,
            "lineno": 156,
            "node_id": 666,
            "src": "5468:11:0",
            "value": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 156,
              "id": "NAME",
              "lineno": 156,
              "node_id": 667,
              "src": "5475:4:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 154,
            "id": "external",
            "lineno": 154,
            "node_id": 669,
            "src": "5429:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 15,
        "end_lineno": 156,
        "lineno": 155,
        "name": "name",
        "node_id": 664,
        "pos": null,
        "returns": {
          "ast_type": "Subscript",
          "col_offset": 14,
          "end_col_offset": 24,
          "end_lineno": 155,
          "lineno": 155,
          "node_id": 671,
          "slice": {
            "ast_type": "Index",
            "col_offset": 14,
            "end_col_offset": 24,
            "end_lineno": 155,
            "lineno": 155,
            "node_id": 676,
            "src": "5452:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 21,
              "end_col_offset": 23,
              "end_lineno": 155,
              "lineno": 155,
              "node_id": 674,
              "src": "5459:2:0",
              "value": 33
            }
          },
          "src": "5452:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 14,
            "end_col_offset": 20,
            "end_lineno": 155,
            "id": "String",
            "lineno": 155,
            "node_id": 672,
            "src": "5452:6:0"
          }
        },
        "src": "5438:41:0"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 160,
          "lineno": 160,
          "node_id": 678,
          "src": "5492:3:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 17,
            "end_lineno": 161,
            "lineno": 161,
            "node_id": 679,
            "src": "5524:13:0",
            "value": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 17,
              "end_lineno": 161,
              "id": "SYMBOL",
              "lineno": 161,
              "node_id": 680,
              "src": "5531:6:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 159,
            "id": "external",
            "lineno": 159,
            "node_id": 682,
            "src": "5483:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 17,
        "end_lineno": 161,
        "lineno": 160,
        "name": "symbol",
        "node_id": 677,
        "pos": null,
        "returns": {
          "ast_type": "Subscript",
          "col_offset": 16,
          "end_col_offset": 26,
          "end_lineno": 160,
          "lineno": 160,
          "node_id": 684,
          "slice": {
            "ast_type": "Index",
            "col_offset": 16,
            "end_col_offset": 26,
            "end_lineno": 160,
            "lineno": 160,
            "node_id": 689,
            "src": "5508:10:0",
            "value": {
              "ast_type": "Int",
              "col_offset": 23,
              "end_col_offset": 25,
              "end_lineno": 160,
              "lineno": 160,
              "node_id": 687,
              "src": "5515:2:0",
              "value": 32
            }
          },
          "src": "5508:10:0",
          "value": {
            "ast_type": "Name",
            "col_offset": 16,
            "end_col_offset": 22,
            "end_lineno": 160,
            "id": "String",
            "lineno": 160,
            "node_id": 685,
            "src": "5508:6:0"
          }
        },
        "src": "5492:45:0"
      },
      {
        "args": {
          "args": [],
          "ast_type": "arguments",
          "col_offset": 0,
          "default": null,
          "defaults": [],
          "end_col_offset": 3,
          "end_lineno": 165,
          "lineno": 165,
          "node_id": 691,
          "src": "5550:3:0"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 19,
            "end_lineno": 166,
            "lineno": 166,
            "node_id": 692,
            "src": "5579:15:0",
            "value": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 19,
              "end_lineno": 166,
              "id": "DECIMALS",
              "lineno": 166,
              "node_id": 693,
              "src": "5586:8:0"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 164,
            "id": "external",
            "lineno": 164,
            "node_id": 695,
            "src": "5541:8:0"
          }
        ],
        "doc_string": null,
        "end_col_offset": 19,
        "end_lineno": 166,
        "lineno": 165,
        "name": "decimals",
        "node_id": 690,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 18,
          "end_col_offset": 23,
          "end_lineno": 165,
          "id": "uint8",
          "lineno": 165,
          "node_id": 697,
          "src": "5568:5:0"
        },
        "src": "5550:44:0"
      }
    ],
    "col_offset": 0,
    "doc_string": null,
    "end_col_offset": 19,
    "end_lineno": 166,
    "lineno": 1,
    "name": "contracts/tests/ERC20.vy",
    "node_id": 0,
    "src": "0:5594:0"
  },
  "bytecode": "0x60206107f860003960005160206020826107f801600039600051116107f3576020816107f80160003960005180604052602082016020816107f801600039600051606052505050602061081860003960005160206020826107f801600039600051116107f3576020816107f80160003960005180608052602082016020816107f80160003960005160a05250505060206108386000396000518060081c6107f35760c052346107f357602061085860003960005160c051604d81116107f35780600a0a90508082028115838383041417156107f3579050905060e05260405180610691526060516106b15250608051806106f15260a051610711525060c0516107315260e05160003360205260005260406000205560e051600255336003553360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60e051610100526020610100a361069161016161000039610751610000f36003361161000c57610601565b60003560e01c3461067f5763a9059cbb81186100bd576044361061067f576004358060a01c61067f576040526000336020526000526040600020805460243580820382811161067f579050905081555060006040516020526000526040600020805460243580820182811061067f5790509050815550604051337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b6323b872dd81186102a7576064361061067f576004358060a01c61067f576040526024358060a01c61067f57606052604435600060405160205260005260406000205410156101635760136080527f62616c616e63654f6620756e646572666c6f770000000000000000000000000060a0526080506080518060a001601f826000031636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b60006040516020526000526040600020805460443580820382811161067f579050905081555060006060516020526000526040600020805460443580820182811061067f5790509050815550604435600160405160205260005260406000208033602052600052604060002090505410156102355760136080527f616c6c6f77616e636520756e646572666c6f770000000000000000000000000060a0526080506080518060a001601f826000031636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b60016040516020526000526040600020803360205260005260406000209050805460443580820382811161067f57905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60443560805260206080a3600160805260206080f35b63095ea7b38118610326576044361061067f576004358060a01c61067f576040526024356001336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b6340c10f1981186103c8576044361061067f576004358060a01c61067f57604052600354331861067f576040511561067f5760025460243580820182811061067f579050905060025560006040516020526000526040600020805460243580820182811061067f579050905081555060405160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3005b6342966c6881186103ef576024361061067f57336040526004356060526103ed610607565b005b6379cc6790811861045b576044361061067f576004358060a01c61067f5760a052600160a0516020526000526040600020803360205260005260406000209050805460243580820382811161067f579050905081555060a051604052602435606052610459610607565b005b6306fdde0381186104bc576004361061067f5760208060405280604001602061069160003960005180825260208201816106b1823950508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6395d89b418118610524576004361061067f576020806040528060400160206106f1600039600051808252602082016020610711600039600051815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b63313ce567811861054b576004361061067f57602061073160003960005160405260206040f35b6370a082318118610586576024361061067f576004358060a01c61067f57604052600060405160205260005260406000205460605260206060f35b63dd62ed3e81186105e0576044361061067f576004358060a01c61067f576040526024358060a01c61067f576060526001604051602052600052604060002080606051602052600052604060002090505460805260206080f35b6318160ddd81186105ff576004361061067f5760025460405260206040f35b505b60006000fd5b6040511561067f5760025460605180820382811161067f579050905060025560006040516020526000526040600020805460605180820382811161067f579050905081555060006040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60605160805260206080a3565b600080fda165767970657283000307000b005b600080fd",
  "bytecodeSha1": "48492490ecf3fbdd27e9af8883acb12409737a2c",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.3.7"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20.mint": {
          "17": [
            4252,
            4284,
            true
          ],
          "19": [
            4323,
            4351,
            true
          ]
        },
        "ERC20.transferFrom": {
          "6": [
            2641,
            2702,
            true
          ],
          "10": [
            2900,
            2973,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "ERC20._burn": {
          "26": [
            4733,
            4761
          ],
          "27": [
            4766,
            4792
          ],
          "28": [
            4797,
            4826
          ],
          "29": [
            4831,
            4872
          ]
        },
        "ERC20.approve": {
          "13": [
            3831,
            3873
          ],
          "14": [
            3781,
            3826
          ],
          "15": [
            3878,
            3889
          ]
        },
        "ERC20.burn": {
          "23": [
            5034,
            5064
          ]
        },
        "ERC20.burnFrom": {
          "24": [
            5307,
            5348
          ],
          "25": [
            5353,
            5376
          ]
        },
        "ERC20.mint": {
          "16": [
            4252,
            4284
          ],
          "18": [
            4323,
            4351
          ],
          "20": [
            4356,
            4382
          ],
          "21": [
            4421,
            4462
          ],
          "22": [
            4387,
            4416
          ]
        },
        "ERC20.transfer": {
          "0": [
            2022,
            2058
          ],
          "1": [
            2097,
            2134
          ],
          "2": [
            2063,
            2092
          ],
          "3": [
            2139,
            2150
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            3026,
            3058
          ],
          "5": [
            2641,
            2702
          ],
          "7": [
            2707,
            2738
          ],
          "8": [
            2743,
            2772
          ],
          "9": [
            2900,
            2973
          ],
          "11": [
            2978,
            3021
          ],
          "12": [
            3063,
            3074
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x6003361161000c57610601565b60003560e01c3461067f5763a9059cbb81186100bd576044361061067f576004358060a01c61067f576040526000336020526000526040600020805460243580820382811161067f579050905081555060006040516020526000526040600020805460243580820182811061067f5790509050815550604051337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b6323b872dd81186102a7576064361061067f576004358060a01c61067f576040526024358060a01c61067f57606052604435600060405160205260005260406000205410156101635760136080527f62616c616e63654f6620756e646572666c6f770000000000000000000000000060a0526080506080518060a001601f826000031636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b60006040516020526000526040600020805460443580820382811161067f579050905081555060006060516020526000526040600020805460443580820182811061067f5790509050815550604435600160405160205260005260406000208033602052600052604060002090505410156102355760136080527f616c6c6f77616e636520756e646572666c6f770000000000000000000000000060a0526080506080518060a001601f826000031636823750506308c379a06040526020606052601f19601f6080510116604401605cfd5b60016040516020526000526040600020803360205260005260406000209050805460443580820382811161067f57905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60443560805260206080a3600160805260206080f35b63095ea7b38118610326576044361061067f576004358060a01c61067f576040526024356001336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b6340c10f1981186103c8576044361061067f576004358060a01c61067f57604052600354331861067f576040511561067f5760025460243580820182811061067f579050905060025560006040516020526000526040600020805460243580820182811061067f579050905081555060405160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3005b6342966c6881186103ef576024361061067f57336040526004356060526103ed610607565b005b6379cc6790811861045b576044361061067f576004358060a01c61067f5760a052600160a0516020526000526040600020803360205260005260406000209050805460243580820382811161067f579050905081555060a051604052602435606052610459610607565b005b6306fdde0381186104bc576004361061067f5760208060405280604001602061069160003960005180825260208201816106b1823950508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6395d89b418118610524576004361061067f576020806040528060400160206106f1600039600051808252602082016020610711600039600051815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b63313ce567811861054b576004361061067f57602061073160003960005160405260206040f35b6370a082318118610586576024361061067f576004358060a01c61067f57604052600060405160205260005260406000205460605260206060f35b63dd62ed3e81186105e0576044361061067f576004358060a01c61067f576040526024358060a01c61067f576060526001604051602052600052604060002080606051602052600052604060002090505460805260206080f35b6318160ddd81186105ff576004361061067f5760025460405260206040f35b505b60006000fd5b6040511561067f5760025460605180820382811161067f579050905060025560006040516020526000526040600020805460605180820382811161067f579050905081555060006040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60605160805260206080a3565b600080fda165767970657283000307000b",
  "deployedSourceMap": "-1:-1:0:-;;;;:::-;;:::-;:::-;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;1699:13;;2022:14;2037:10;2022:26;;;;;;;:36;;2127:6;-1:-1;;2022:36;-1:-1;2022:36;-1:-1;;;:::-;2022:36;;;;;-1:-1;2022:36;2063:14;2078:3;-1:-1;2063:19;;;;;;;:29;;2127:6;-1:-1;;2063:29;-1:-1;2063:29;-1:-1;;;:::-;2063:29;;;;;-1:-1;2063:29;2122:3;2097:37;2110:10;2097:37;2127:6;-1:-1;;;;2097:37;;2146:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;2180:15;;-1:-1;;;;;;:::-;2197:13;;3051:6;2648:31;:14;2663:5;-1:-1;2648:21;;;;;;;:31;-1:-1;2641:61;;:::-;-1:-1;;2681:21;-1:-1;;2681:21;;2641:61;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2641:61::-;2707:14;2722:5;-1:-1;2707:21;;;;;;;:31;;3051:6;-1:-1;;2707:31;-1:-1;2707:31;-1:-1;;;:::-;2707:31;;;;;-1:-1;2707:31;2743:14;2758:3;-1:-1;2743:19;;;;;;;:29;;3051:6;-1:-1;;2743:29;-1:-1;2743:29;-1:-1;;;:::-;2743:29;;;;;-1:-1;2743:29;3051:6;2907:43;:14;2922:5;-1:-1;2907:21;;;;;;;-1:-1;2929:10;-1:-1;;;;;;;2907:33;;:43;-1:-1;2900:73;;:::-;-1:-1;;2952:21;-1:-1;;2952:21;;2900:73;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2900:73::-;2978:14;2993:5;-1:-1;2978:21;;;;;;;-1:-1;3000:10;-1:-1;;;;;;;2978:33;;:43;;3051:6;-1:-1;;2978:43;-1:-1;2978:43;-1:-1;;;:::-;2978:43;;;;;-1:-1;2978:43;3046:3;3026:32;3039:5;3026:32;;3051:6;-1:-1;;;;3026:32;;3070:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;3099:18;;3866:6;-1:-1;3781:14;3796:10;3781:26;;;;;;;-1:-1;3808:8;-1:-1;;;;;;;;3781:36;;:45;3856:8;3831:42;3844:10;3831:42;3866:6;-1:-1;;;;3831:42;;3885:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;3911:12;;4273:11;4259:25;:10;:25;4252:32;:::-;4330:3;:21;;4323:28;:::-;4356:16;:26;4455:6;-1:-1;;4356:26;-1:-1;4356:26;-1:-1;;;:::-;4356:26;;;;:16;:26;4387:14;4402:3;-1:-1;4387:19;;;;;;;:29;;4455:6;-1:-1;;4387:29;-1:-1;4387:29;-1:-1;;;:::-;4387:29;;;;;-1:-1;4387:29;4450:3;4421:41;;;4455:6;-1:-1;;;;4421:41;;-1:-1;:::-;;;;;:::-;;;;;:::-;5045:10;-1:-1;;5057:6;-1:-1;;;;5034:30;:::i;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;5090:12;;5307:14;5322:3;-1:-1;5307:19;;;;;;;-1:-1;5327:10;-1:-1;;;;;;;5307:31;;:41;;5369:6;-1:-1;;5307:41;-1:-1;5307:41;-1:-1;;;:::-;5307:41;;;;;-1:-1;5307:41;5364:3;-1:-1;;;5369:6;-1:-1;;;;5353:23;:::i;-1:-1::-;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;:::-;;;;4475:397::-;4740:3;:21;;4733:28;:::-;4766:16;-1:-1;4786:6;-1:-1;;;;;;;;:::-;;;4766:26;;:16;-1:-1;4797:14;4812:3;-1:-1;4797:19;;;;;;;-1:-1;;4820:6;-1:-1;;;;;;;;:::-;;;4797:29;;-1:-1;;4797:29;4831:41;4844:3;4831:41;;4865:6;-1:-1;;;;4831:41;;-1:-1::-;:::-;;;",
  "language": "Vyper",
  "natspec": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "burn(uint256)": {
        "details": "Burn an amount of the token of msg.sender.",
        "params": {
          "_value": "The amount that will be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burn an amount of the token from a given account.",
        "params": {
          "_to": "The account whose tokens will be burned.",
          "_value": "The amount that will be burned."
        }
      },
      "mint(address,uint256)": {
        "details": "Mint an amount of the token and assigns it to an account. This encapsulates the modification of balances such that the proper events are emitted.",
        "params": {
          "_to": "The account that will receive the created tokens.",
          "_value": "The amount that will be created."
        }
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another.",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "offset": [
    0,
    5594
  ],
  "opcodes": "PUSH1 0x3 CALLDATASIZE GT PUSH2 0x0C JUMPI PUSH2 0x61 JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR CALLVALUE PUSH2 0x67F JUMPI PUSH4 0xA959CBB DUP2 XOR PUSH2 0x0BD JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x67F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x67F JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x67F JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 ADD DUP3 DUP2 LT PUSH2 0x67F JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x40 MLOAD CALLER PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 LOG3 PUSH1 0x1 PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0x23B872DD DUP2 XOR PUSH2 0x2A7 JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x67F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x67F JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x67F JUMPI PUSH1 0x60 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD LT ISZERO PUSH2 0x163 JUMPI PUSH1 0x13 PUSH1 0x80 MSTORE PUSH32 0x62616C616E63654F6620756E646572666C6F770000000000000 PUSH1 0xA0 MSTORE PUSH1 0x80 POP PUSH1 0x80 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH4 0x8C379A0 PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x60 MSTORE PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x80 MLOAD ADD AND PUSH1 0x44 ADD PUSH1 0x5C REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x44 CALLDATALOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x67F JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x0 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x44 CALLDATALOAD DUP1 DUP3 ADD DUP3 DUP2 LT PUSH2 0x67F JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD LT ISZERO PUSH2 0x235 JUMPI PUSH1 0x13 PUSH1 0x80 MSTORE PUSH32 0x616C6C6F77616E636520756E646572666C6F770000000000000 PUSH1 0xA0 MSTORE PUSH1 0x80 POP PUSH1 0x80 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH4 0x8C379A0 PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x60 MSTORE PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x80 MLOAD ADD AND PUSH1 0x44 ADD PUSH1 0x5C REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP DUP1 SLOAD PUSH1 0x44 CALLDATALOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x67F JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x60 MLOAD PUSH1 0x40 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x44 CALLDATALOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 LOG3 PUSH1 0x1 PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 RETURN JUMPDEST PUSH4 0x95EA7B3 DUP2 XOR PUSH2 0x326 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x67F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x67F JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SSTORE PUSH1 0x40 MLOAD CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 LOG3 PUSH1 0x1 PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0x40C1F19 DUP2 XOR PUSH2 0x3C8 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x67F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x67F JUMPI PUSH1 0x40 MSTORE PUSH1 0x3 SLOAD CALLER XOR PUSH2 0x67F JUMPI PUSH1 0x40 MLOAD ISZERO PUSH2 0x67F JUMPI PUSH1 0x2 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 ADD DUP3 DUP2 LT PUSH2 0x67F JUMPI SWAP1 POP SWAP1 POP PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 ADD DUP3 DUP2 LT PUSH2 0x67F JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 LOG3 STOP JUMPDEST PUSH4 0x42966C68 DUP2 XOR PUSH2 0x3EF JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x67F JUMPI CALLER PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x60 MSTORE PUSH2 0x3ED PUSH2 0x67 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x79CC6790 DUP2 XOR PUSH2 0x45B JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x67F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x67F JUMPI PUSH1 0xA0 MSTORE PUSH1 0x1 PUSH1 0xA0 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x67F JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0xA0 MLOAD PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH2 0x459 PUSH2 0x67 JUMP JUMPDEST STOP JUMPDEST PUSH4 0x6FDDE3 DUP2 XOR PUSH2 0x4BC JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67F JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 ADD PUSH1 0x20 PUSH2 0x691 PUSH1 0x0 CODECOPY PUSH1 0x0 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 PUSH2 0x6B1 DUP3 CODECOPY POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST PUSH4 0x95D89B41 DUP2 XOR PUSH2 0x524 JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67F JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 ADD PUSH1 0x20 PUSH2 0x6F1 PUSH1 0x0 CODECOPY PUSH1 0x0 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x20 PUSH2 0x711 PUSH1 0x0 CODECOPY PUSH1 0x0 MLOAD DUP2 MSTORE POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST PUSH4 0x313CE567 DUP2 XOR PUSH2 0x54B JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67F JUMPI PUSH1 0x20 PUSH2 0x731 PUSH1 0x0 CODECOPY PUSH1 0x0 MLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x70A08231 DUP2 XOR PUSH2 0x586 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x67F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x67F JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0xDD62ED3E DUP2 XOR PUSH2 0x5E0 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x67F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x67F JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x67F JUMPI PUSH1 0x60 MSTORE PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 RETURN JUMPDEST PUSH4 0x1816DDD DUP2 XOR PUSH2 0x5FF JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x67F JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD ISZERO PUSH2 0x67F JUMPI PUSH1 0x2 SLOAD PUSH1 0x60 MLOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x67F JUMPI SWAP1 POP SWAP1 POP PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x60 MLOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x67F JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x60 MLOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 LOG3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT LOG1 PUSH6 0x767970657283 STOP SUB SMOD STOP SIGNEXTEND",
  "pcMap": {
    "0": {
      "offset": [
        0,
        5594
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "GT"
    },
    "4": {
      "op": "PUSH2",
      "value": "0x0C"
    },
    "7": {
      "op": "JUMPI"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x61"
    },
    "11": {
      "op": "JUMP"
    },
    "12": {
      "op": "JUMPDEST"
    },
    "13": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15": {
      "op": "CALLDATALOAD"
    },
    "16": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18": {
      "op": "SHR"
    },
    "19": {
      "op": "CALLVALUE"
    },
    "20": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "23": {
      "op": "JUMPI"
    },
    "24": {
      "op": "PUSH4",
      "value": "0xA959CBB"
    },
    "29": {
      "op": "DUP2"
    },
    "30": {
      "op": "XOR"
    },
    "31": {
      "op": "PUSH2",
      "value": "0x0BD"
    },
    "34": {
      "op": "JUMPI"
    },
    "35": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "37": {
      "op": "CALLDATASIZE"
    },
    "38": {
      "op": "LT"
    },
    "39": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "42": {
      "op": "JUMPI"
    },
    "43": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "45": {
      "op": "CALLDATALOAD"
    },
    "46": {
      "op": "DUP1"
    },
    "47": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "49": {
      "op": "SHR"
    },
    "50": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "53": {
      "op": "JUMPI"
    },
    "54": {
      "fn": "ERC20.transfer",
      "offset": [
        1699,
        1712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "56": {
      "fn": "ERC20.transfer",
      "offset": [
        1699,
        1712
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "57": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2036
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "59": {
      "fn": "ERC20.transfer",
      "offset": [
        2037,
        2047
      ],
      "op": "CALLER",
      "path": "0"
    },
    "60": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "62": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2048
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "63": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "65": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2048
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "66": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "68": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2048
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "70": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2048
      ],
      "op": "SHA3",
      "path": "0"
    },
    "71": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "72": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2058
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "73": {
      "fn": "ERC20.transfer",
      "offset": [
        2127,
        2133
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x24"
    },
    "75": {
      "op": "CALLDATALOAD"
    },
    "76": {
      "op": "DUP1"
    },
    "77": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2058
      ],
      "op": "DUP3",
      "path": "0"
    },
    "78": {
      "op": "SUB"
    },
    "79": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2058
      ],
      "op": "DUP3",
      "path": "0"
    },
    "80": {
      "op": "DUP2"
    },
    "81": {
      "op": "GT"
    },
    "82": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "85": {
      "op": "JUMPI"
    },
    "86": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "87": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2058
      ],
      "op": "POP",
      "path": "0"
    },
    "88": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2058
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "89": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2058
      ],
      "op": "POP",
      "path": "0"
    },
    "90": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2058
      ],
      "op": "DUP2",
      "path": "0"
    },
    "91": {
      "op": "SSTORE"
    },
    "92": {
      "fn": "ERC20.transfer",
      "offset": [
        2022,
        2058
      ],
      "op": "POP",
      "path": "0"
    },
    "93": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2077
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x0"
    },
    "95": {
      "fn": "ERC20.transfer",
      "offset": [
        2078,
        2081
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "97": {
      "op": "MLOAD"
    },
    "98": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "100": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2082
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "101": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "103": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2082
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "104": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "106": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2082
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "108": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2082
      ],
      "op": "SHA3",
      "path": "0"
    },
    "109": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2092
      ],
      "op": "DUP1",
      "path": "0"
    },
    "110": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2092
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "111": {
      "fn": "ERC20.transfer",
      "offset": [
        2127,
        2133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "113": {
      "op": "CALLDATALOAD"
    },
    "114": {
      "op": "DUP1"
    },
    "115": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2092
      ],
      "op": "DUP3",
      "path": "0"
    },
    "116": {
      "op": "ADD"
    },
    "117": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2092
      ],
      "op": "DUP3",
      "path": "0"
    },
    "118": {
      "op": "DUP2"
    },
    "119": {
      "op": "LT"
    },
    "120": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "123": {
      "op": "JUMPI"
    },
    "124": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "125": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2092
      ],
      "op": "POP",
      "path": "0"
    },
    "126": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "127": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2092
      ],
      "op": "POP",
      "path": "0"
    },
    "128": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2092
      ],
      "op": "DUP2",
      "path": "0"
    },
    "129": {
      "op": "SSTORE"
    },
    "130": {
      "fn": "ERC20.transfer",
      "offset": [
        2063,
        2092
      ],
      "op": "POP",
      "path": "0"
    },
    "131": {
      "fn": "ERC20.transfer",
      "offset": [
        2122,
        2125
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "133": {
      "fn": "ERC20.transfer",
      "offset": [
        2097,
        2134
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "134": {
      "fn": "ERC20.transfer",
      "offset": [
        2110,
        2120
      ],
      "op": "CALLER",
      "path": "0"
    },
    "135": {
      "fn": "ERC20.transfer",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "168": {
      "fn": "ERC20.transfer",
      "offset": [
        2127,
        2133
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "170": {
      "op": "CALLDATALOAD"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "173": {
      "op": "MSTORE"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "176": {
      "fn": "ERC20.transfer",
      "offset": [
        2097,
        2134
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "178": {
      "fn": "ERC20.transfer",
      "offset": [
        2097,
        2134
      ],
      "op": "LOG3",
      "path": "0"
    },
    "179": {
      "fn": "ERC20.transfer",
      "offset": [
        2146,
        2150
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "181": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "183": {
      "op": "MSTORE"
    },
    "184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "186": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "188": {
      "op": "RETURN"
    },
    "189": {
      "op": "JUMPDEST"
    },
    "190": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "195": {
      "op": "DUP2"
    },
    "196": {
      "op": "XOR"
    },
    "197": {
      "op": "PUSH2",
      "value": "0x2A7"
    },
    "200": {
      "op": "JUMPI"
    },
    "201": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "203": {
      "op": "CALLDATASIZE"
    },
    "204": {
      "op": "LT"
    },
    "205": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "208": {
      "op": "JUMPI"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "211": {
      "op": "CALLDATALOAD"
    },
    "212": {
      "op": "DUP1"
    },
    "213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "215": {
      "op": "SHR"
    },
    "216": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "219": {
      "op": "JUMPI"
    },
    "220": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2180,
        2195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "222": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2180,
        2195
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "223": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "225": {
      "op": "CALLDATALOAD"
    },
    "226": {
      "op": "DUP1"
    },
    "227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "229": {
      "op": "SHR"
    },
    "230": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "233": {
      "op": "JUMPI"
    },
    "234": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2197,
        2210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "236": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2197,
        2210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "237": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3051,
        3057
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x44"
    },
    "239": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2648,
        2679
      ],
      "op": "CALLDATALOAD",
      "path": "0",
      "statement": 5
    },
    "240": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2648,
        2662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "242": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2663,
        2668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "244": {
      "op": "MLOAD"
    },
    "245": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2648,
        2669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "247": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2648,
        2669
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "248": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2648,
        2669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "250": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2648,
        2669
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "251": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2648,
        2669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "253": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2648,
        2669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "255": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2648,
        2669
      ],
      "op": "SHA3",
      "path": "0"
    },
    "256": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2648,
        2679
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "257": {
      "op": "LT"
    },
    "258": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2641,
        2702
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "259": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2641,
        2702
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163"
    },
    "262": {
      "branch": 6,
      "fn": "ERC20.transferFrom",
      "offset": [
        2641,
        2702
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "265": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "267": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2681,
        2702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "268": {
      "op": "PUSH32",
      "value": "0x62616C616E63654F6620756E646572666C6F770000000000000"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "303": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2681,
        2702
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "304": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2681,
        2702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "306": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2641,
        2702
      ],
      "op": "POP",
      "path": "0"
    },
    "307": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "309": {
      "op": "MLOAD"
    },
    "310": {
      "op": "DUP1"
    },
    "311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "313": {
      "op": "ADD"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "316": {
      "op": "DUP3"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "319": {
      "op": "SUB"
    },
    "320": {
      "op": "AND"
    },
    "321": {
      "op": "CALLDATASIZE"
    },
    "322": {
      "op": "DUP3"
    },
    "323": {
      "op": "CALLDATACOPY"
    },
    "324": {
      "op": "POP"
    },
    "325": {
      "op": "POP"
    },
    "326": {
      "op": "PUSH4",
      "value": "0x8C379A0"
    },
    "331": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "333": {
      "op": "MSTORE"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "336": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "338": {
      "op": "MSTORE"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "341": {
      "op": "NOT"
    },
    "342": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "344": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "346": {
      "op": "MLOAD"
    },
    "347": {
      "op": "ADD"
    },
    "348": {
      "op": "AND"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "354": {
      "op": "REVERT"
    },
    "355": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2641,
        2702
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "356": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2721
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x0"
    },
    "358": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2722,
        2727
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "360": {
      "op": "MLOAD"
    },
    "361": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "363": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2728
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "364": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "366": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2728
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "367": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "369": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "371": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2728
      ],
      "op": "SHA3",
      "path": "0"
    },
    "372": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2738
      ],
      "op": "DUP1",
      "path": "0"
    },
    "373": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2738
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "374": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3051,
        3057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "376": {
      "op": "CALLDATALOAD"
    },
    "377": {
      "op": "DUP1"
    },
    "378": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2738
      ],
      "op": "DUP3",
      "path": "0"
    },
    "379": {
      "op": "SUB"
    },
    "380": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2738
      ],
      "op": "DUP3",
      "path": "0"
    },
    "381": {
      "op": "DUP2"
    },
    "382": {
      "op": "GT"
    },
    "383": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "386": {
      "op": "JUMPI"
    },
    "387": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "388": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2738
      ],
      "op": "POP",
      "path": "0"
    },
    "389": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2738
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "390": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2738
      ],
      "op": "POP",
      "path": "0"
    },
    "391": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2738
      ],
      "op": "DUP2",
      "path": "0"
    },
    "392": {
      "op": "SSTORE"
    },
    "393": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2707,
        2738
      ],
      "op": "POP",
      "path": "0"
    },
    "394": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2757
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x0"
    },
    "396": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2758,
        2761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "398": {
      "op": "MLOAD"
    },
    "399": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "401": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2762
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "402": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "404": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2762
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "405": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "407": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "409": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2762
      ],
      "op": "SHA3",
      "path": "0"
    },
    "410": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2772
      ],
      "op": "DUP1",
      "path": "0"
    },
    "411": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2772
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "412": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3051,
        3057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "414": {
      "op": "CALLDATALOAD"
    },
    "415": {
      "op": "DUP1"
    },
    "416": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2772
      ],
      "op": "DUP3",
      "path": "0"
    },
    "417": {
      "op": "ADD"
    },
    "418": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2772
      ],
      "op": "DUP3",
      "path": "0"
    },
    "419": {
      "op": "DUP2"
    },
    "420": {
      "op": "LT"
    },
    "421": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "424": {
      "op": "JUMPI"
    },
    "425": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "426": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2772
      ],
      "op": "POP",
      "path": "0"
    },
    "427": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "428": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2772
      ],
      "op": "POP",
      "path": "0"
    },
    "429": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2772
      ],
      "op": "DUP2",
      "path": "0"
    },
    "430": {
      "op": "SSTORE"
    },
    "431": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2743,
        2772
      ],
      "op": "POP",
      "path": "0"
    },
    "432": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3051,
        3057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "434": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2950
      ],
      "op": "CALLDATALOAD",
      "path": "0",
      "statement": 9
    },
    "435": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "437": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2922,
        2927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "439": {
      "op": "MLOAD"
    },
    "440": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "442": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2928
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "443": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "445": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2928
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "446": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "448": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "450": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2928
      ],
      "op": "SHA3",
      "path": "0"
    },
    "451": {
      "op": "DUP1"
    },
    "452": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2929,
        2939
      ],
      "op": "CALLER",
      "path": "0"
    },
    "453": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "455": {
      "op": "MSTORE"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "458": {
      "op": "MSTORE"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "463": {
      "op": "SHA3"
    },
    "464": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2940
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "465": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2940
      ],
      "op": "POP",
      "path": "0"
    },
    "466": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2907,
        2950
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "467": {
      "op": "LT"
    },
    "468": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2900,
        2973
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "469": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2900,
        2973
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x235"
    },
    "472": {
      "branch": 10,
      "fn": "ERC20.transferFrom",
      "offset": [
        2900,
        2973
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "477": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2952,
        2973
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "478": {
      "op": "PUSH32",
      "value": "0x616C6C6F77616E636520756E646572666C6F770000000000000"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2952,
        2973
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "514": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2952,
        2973
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "516": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2900,
        2973
      ],
      "op": "POP",
      "path": "0"
    },
    "517": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "519": {
      "op": "MLOAD"
    },
    "520": {
      "op": "DUP1"
    },
    "521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "523": {
      "op": "ADD"
    },
    "524": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "526": {
      "op": "DUP3"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "529": {
      "op": "SUB"
    },
    "530": {
      "op": "AND"
    },
    "531": {
      "op": "CALLDATASIZE"
    },
    "532": {
      "op": "DUP3"
    },
    "533": {
      "op": "CALLDATACOPY"
    },
    "534": {
      "op": "POP"
    },
    "535": {
      "op": "POP"
    },
    "536": {
      "op": "PUSH4",
      "value": "0x8C379A0"
    },
    "541": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "543": {
      "op": "MSTORE"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "548": {
      "op": "MSTORE"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "551": {
      "op": "NOT"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "554": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "556": {
      "op": "MLOAD"
    },
    "557": {
      "op": "ADD"
    },
    "558": {
      "op": "AND"
    },
    "559": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "561": {
      "op": "ADD"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x5C"
    },
    "564": {
      "op": "REVERT"
    },
    "565": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2900,
        2973
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "566": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        2992
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "568": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2993,
        2998
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "570": {
      "op": "MLOAD"
    },
    "571": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        2999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "573": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        2999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "574": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        2999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "576": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        2999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "577": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        2999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "579": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        2999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "581": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        2999
      ],
      "op": "SHA3",
      "path": "0"
    },
    "582": {
      "op": "DUP1"
    },
    "583": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3000,
        3010
      ],
      "op": "CALLER",
      "path": "0"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "589": {
      "op": "MSTORE"
    },
    "590": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "594": {
      "op": "SHA3"
    },
    "595": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "596": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3011
      ],
      "op": "POP",
      "path": "0"
    },
    "597": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3021
      ],
      "op": "DUP1",
      "path": "0"
    },
    "598": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3021
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "599": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3051,
        3057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "601": {
      "op": "CALLDATALOAD"
    },
    "602": {
      "op": "DUP1"
    },
    "603": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3021
      ],
      "op": "DUP3",
      "path": "0"
    },
    "604": {
      "op": "SUB"
    },
    "605": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3021
      ],
      "op": "DUP3",
      "path": "0"
    },
    "606": {
      "op": "DUP2"
    },
    "607": {
      "op": "GT"
    },
    "608": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "611": {
      "op": "JUMPI"
    },
    "612": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "613": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3021
      ],
      "op": "POP",
      "path": "0"
    },
    "614": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3021
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "615": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3021
      ],
      "op": "POP",
      "path": "0"
    },
    "616": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "617": {
      "op": "SSTORE"
    },
    "618": {
      "fn": "ERC20.transferFrom",
      "offset": [
        2978,
        3021
      ],
      "op": "POP",
      "path": "0"
    },
    "619": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3046,
        3049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "621": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3026,
        3058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "622": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3039,
        3044
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "624": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3026,
        3058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "625": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3026,
        3058
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "658": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3051,
        3057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "660": {
      "op": "CALLDATALOAD"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "663": {
      "op": "MSTORE"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3026,
        3058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3026,
        3058
      ],
      "op": "LOG3",
      "path": "0"
    },
    "669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3070,
        3074
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x1"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "673": {
      "op": "MSTORE"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "678": {
      "op": "RETURN"
    },
    "679": {
      "op": "JUMPDEST"
    },
    "680": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "685": {
      "op": "DUP2"
    },
    "686": {
      "op": "XOR"
    },
    "687": {
      "op": "PUSH2",
      "value": "0x326"
    },
    "690": {
      "op": "JUMPI"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "693": {
      "op": "CALLDATASIZE"
    },
    "694": {
      "op": "LT"
    },
    "695": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "698": {
      "op": "JUMPI"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "701": {
      "op": "CALLDATALOAD"
    },
    "702": {
      "op": "DUP1"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "705": {
      "op": "SHR"
    },
    "706": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "709": {
      "op": "JUMPI"
    },
    "710": {
      "fn": "ERC20.approve",
      "offset": [
        3099,
        3117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "712": {
      "fn": "ERC20.approve",
      "offset": [
        3099,
        3117
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "713": {
      "fn": "ERC20.approve",
      "offset": [
        3866,
        3872
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x24"
    },
    "715": {
      "op": "CALLDATALOAD"
    },
    "716": {
      "fn": "ERC20.approve",
      "offset": [
        3781,
        3795
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x1"
    },
    "718": {
      "fn": "ERC20.approve",
      "offset": [
        3796,
        3806
      ],
      "op": "CALLER",
      "path": "0"
    },
    "719": {
      "fn": "ERC20.approve",
      "offset": [
        3781,
        3807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC20.approve",
      "offset": [
        3781,
        3807
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "722": {
      "fn": "ERC20.approve",
      "offset": [
        3781,
        3807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "724": {
      "fn": "ERC20.approve",
      "offset": [
        3781,
        3807
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "725": {
      "fn": "ERC20.approve",
      "offset": [
        3781,
        3807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "727": {
      "fn": "ERC20.approve",
      "offset": [
        3781,
        3807
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "729": {
      "fn": "ERC20.approve",
      "offset": [
        3781,
        3807
      ],
      "op": "SHA3",
      "path": "0"
    },
    "730": {
      "op": "DUP1"
    },
    "731": {
      "fn": "ERC20.approve",
      "offset": [
        3808,
        3816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "733": {
      "op": "MLOAD"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "736": {
      "op": "MSTORE"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "739": {
      "op": "MSTORE"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "744": {
      "op": "SHA3"
    },
    "745": {
      "fn": "ERC20.approve",
      "offset": [
        3781,
        3817
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "746": {
      "fn": "ERC20.approve",
      "offset": [
        3781,
        3817
      ],
      "op": "POP",
      "path": "0"
    },
    "747": {
      "fn": "ERC20.approve",
      "offset": [
        3781,
        3826
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "748": {
      "fn": "ERC20.approve",
      "offset": [
        3856,
        3864
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "750": {
      "fn": "ERC20.approve",
      "offset": [
        3831,
        3873
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "751": {
      "fn": "ERC20.approve",
      "offset": [
        3844,
        3854
      ],
      "op": "CALLER",
      "path": "0"
    },
    "752": {
      "fn": "ERC20.approve",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925"
    },
    "785": {
      "fn": "ERC20.approve",
      "offset": [
        3866,
        3872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "787": {
      "op": "CALLDATALOAD"
    },
    "788": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "790": {
      "op": "MSTORE"
    },
    "791": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "793": {
      "fn": "ERC20.approve",
      "offset": [
        3831,
        3873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "795": {
      "fn": "ERC20.approve",
      "offset": [
        3831,
        3873
      ],
      "op": "LOG3",
      "path": "0"
    },
    "796": {
      "fn": "ERC20.approve",
      "offset": [
        3885,
        3889
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "800": {
      "op": "MSTORE"
    },
    "801": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "805": {
      "op": "RETURN"
    },
    "806": {
      "op": "JUMPDEST"
    },
    "807": {
      "op": "PUSH4",
      "value": "0x40C1F19"
    },
    "812": {
      "op": "DUP2"
    },
    "813": {
      "op": "XOR"
    },
    "814": {
      "op": "PUSH2",
      "value": "0x3C8"
    },
    "817": {
      "op": "JUMPI"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "820": {
      "op": "CALLDATASIZE"
    },
    "821": {
      "op": "LT"
    },
    "822": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "825": {
      "op": "JUMPI"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "828": {
      "op": "CALLDATALOAD"
    },
    "829": {
      "op": "DUP1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "832": {
      "op": "SHR"
    },
    "833": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "836": {
      "op": "JUMPI"
    },
    "837": {
      "fn": "ERC20.mint",
      "offset": [
        3911,
        3923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "839": {
      "fn": "ERC20.mint",
      "offset": [
        3911,
        3923
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "840": {
      "fn": "ERC20.mint",
      "offset": [
        4273,
        4284
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x3"
    },
    "842": {
      "fn": "ERC20.mint",
      "offset": [
        4259,
        4284
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "843": {
      "fn": "ERC20.mint",
      "offset": [
        4259,
        4269
      ],
      "op": "CALLER",
      "path": "0"
    },
    "844": {
      "fn": "ERC20.mint",
      "offset": [
        4259,
        4284
      ],
      "op": "XOR",
      "path": "0"
    },
    "845": {
      "fn": "ERC20.mint",
      "offset": [
        4252,
        4284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67F"
    },
    "848": {
      "branch": 17,
      "fn": "ERC20.mint",
      "offset": [
        4252,
        4284
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "849": {
      "fn": "ERC20.mint",
      "offset": [
        4330,
        4333
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x40"
    },
    "851": {
      "fn": "ERC20.mint",
      "offset": [
        4330,
        4351
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "852": {
      "fn": "ERC20.mint",
      "offset": [
        4330,
        4351
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "853": {
      "fn": "ERC20.mint",
      "offset": [
        4323,
        4351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67F"
    },
    "856": {
      "branch": 19,
      "fn": "ERC20.mint",
      "offset": [
        4323,
        4351
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "857": {
      "fn": "ERC20.mint",
      "offset": [
        4356,
        4372
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x2"
    },
    "859": {
      "fn": "ERC20.mint",
      "offset": [
        4356,
        4382
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "860": {
      "fn": "ERC20.mint",
      "offset": [
        4455,
        4461
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x24"
    },
    "862": {
      "op": "CALLDATALOAD"
    },
    "863": {
      "op": "DUP1"
    },
    "864": {
      "fn": "ERC20.mint",
      "offset": [
        4356,
        4382
      ],
      "op": "DUP3",
      "path": "0"
    },
    "865": {
      "op": "ADD"
    },
    "866": {
      "fn": "ERC20.mint",
      "offset": [
        4356,
        4382
      ],
      "op": "DUP3",
      "path": "0"
    },
    "867": {
      "op": "DUP2"
    },
    "868": {
      "op": "LT"
    },
    "869": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "872": {
      "op": "JUMPI"
    },
    "873": {
      "fn": "ERC20.mint",
      "offset": [
        4356,
        4382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "874": {
      "fn": "ERC20.mint",
      "offset": [
        4356,
        4382
      ],
      "op": "POP",
      "path": "0"
    },
    "875": {
      "fn": "ERC20.mint",
      "offset": [
        4356,
        4382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "876": {
      "fn": "ERC20.mint",
      "offset": [
        4356,
        4382
      ],
      "op": "POP",
      "path": "0"
    },
    "877": {
      "fn": "ERC20.mint",
      "offset": [
        4356,
        4372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "879": {
      "fn": "ERC20.mint",
      "offset": [
        4356,
        4382
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "880": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4401
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x0"
    },
    "882": {
      "fn": "ERC20.mint",
      "offset": [
        4402,
        4405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "884": {
      "op": "MLOAD"
    },
    "885": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "887": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4406
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "888": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "890": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4406
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "891": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "893": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4406
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "895": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4406
      ],
      "op": "SHA3",
      "path": "0"
    },
    "896": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4416
      ],
      "op": "DUP1",
      "path": "0"
    },
    "897": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4416
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "898": {
      "fn": "ERC20.mint",
      "offset": [
        4455,
        4461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "900": {
      "op": "CALLDATALOAD"
    },
    "901": {
      "op": "DUP1"
    },
    "902": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4416
      ],
      "op": "DUP3",
      "path": "0"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4416
      ],
      "op": "DUP3",
      "path": "0"
    },
    "905": {
      "op": "DUP2"
    },
    "906": {
      "op": "LT"
    },
    "907": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "910": {
      "op": "JUMPI"
    },
    "911": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4416
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "912": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4416
      ],
      "op": "POP",
      "path": "0"
    },
    "913": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4416
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "914": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4416
      ],
      "op": "POP",
      "path": "0"
    },
    "915": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4416
      ],
      "op": "DUP2",
      "path": "0"
    },
    "916": {
      "op": "SSTORE"
    },
    "917": {
      "fn": "ERC20.mint",
      "offset": [
        4387,
        4416
      ],
      "op": "POP",
      "path": "0"
    },
    "918": {
      "fn": "ERC20.mint",
      "offset": [
        4450,
        4453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC20.mint",
      "offset": [
        4421,
        4462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "921": {
      "fn": "ERC20.mint",
      "offset": [
        4421,
        4462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "923": {
      "fn": "ERC20.mint",
      "offset": [
        4421,
        4462
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "956": {
      "fn": "ERC20.mint",
      "offset": [
        4455,
        4461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "958": {
      "op": "CALLDATALOAD"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "961": {
      "op": "MSTORE"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "964": {
      "fn": "ERC20.mint",
      "offset": [
        4421,
        4462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "966": {
      "fn": "ERC20.mint",
      "offset": [
        4421,
        4462
      ],
      "op": "LOG3",
      "path": "0"
    },
    "967": {
      "op": "STOP"
    },
    "968": {
      "op": "JUMPDEST"
    },
    "969": {
      "op": "PUSH4",
      "value": "0x42966C68"
    },
    "974": {
      "op": "DUP2"
    },
    "975": {
      "op": "XOR"
    },
    "976": {
      "op": "PUSH2",
      "value": "0x3EF"
    },
    "979": {
      "op": "JUMPI"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "982": {
      "op": "CALLDATASIZE"
    },
    "983": {
      "op": "LT"
    },
    "984": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "987": {
      "op": "JUMPI"
    },
    "988": {
      "fn": "ERC20.burn",
      "offset": [
        5045,
        5055
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 23
    },
    "989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "fn": "ERC20.burn",
      "offset": [
        5057,
        5063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "994": {
      "op": "CALLDATALOAD"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "997": {
      "op": "MSTORE"
    },
    "998": {
      "op": "PUSH2",
      "value": "0x3ED"
    },
    "1001": {
      "fn": "ERC20.burn",
      "offset": [
        5034,
        5064
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67"
    },
    "1004": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [
        5034,
        5064
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1005": {
      "op": "JUMPDEST"
    },
    "1006": {
      "op": "STOP"
    },
    "1007": {
      "op": "JUMPDEST"
    },
    "1008": {
      "op": "PUSH4",
      "value": "0x79CC6790"
    },
    "1013": {
      "op": "DUP2"
    },
    "1014": {
      "op": "XOR"
    },
    "1015": {
      "op": "PUSH2",
      "value": "0x45B"
    },
    "1018": {
      "op": "JUMPI"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1021": {
      "op": "CALLDATASIZE"
    },
    "1022": {
      "op": "LT"
    },
    "1023": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1026": {
      "op": "JUMPI"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1029": {
      "op": "CALLDATALOAD"
    },
    "1030": {
      "op": "DUP1"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1033": {
      "op": "SHR"
    },
    "1034": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1037": {
      "op": "JUMPI"
    },
    "1038": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5090,
        5102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1040": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5090,
        5102
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1041": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5321
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x1"
    },
    "1043": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5322,
        5325
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1045": {
      "op": "MLOAD"
    },
    "1046": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1048": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5326
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1049": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1051": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5326
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1052": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1054": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5326
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1056": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5326
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1057": {
      "op": "DUP1"
    },
    "1058": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5327,
        5337
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1061": {
      "op": "MSTORE"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1064": {
      "op": "MSTORE"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1069": {
      "op": "SHA3"
    },
    "1070": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5338
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1071": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5338
      ],
      "op": "POP",
      "path": "0"
    },
    "1072": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5348
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1073": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5348
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1074": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5369,
        5375
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x24"
    },
    "1076": {
      "op": "CALLDATALOAD"
    },
    "1077": {
      "op": "DUP1"
    },
    "1078": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5348
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1079": {
      "op": "SUB"
    },
    "1080": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5348
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1081": {
      "op": "DUP2"
    },
    "1082": {
      "op": "GT"
    },
    "1083": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1086": {
      "op": "JUMPI"
    },
    "1087": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1088": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5348
      ],
      "op": "POP",
      "path": "0"
    },
    "1089": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5348
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1090": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5348
      ],
      "op": "POP",
      "path": "0"
    },
    "1091": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1092": {
      "op": "SSTORE"
    },
    "1093": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5307,
        5348
      ],
      "op": "POP",
      "path": "0"
    },
    "1094": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5364,
        5367
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1096": {
      "op": "MLOAD"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1099": {
      "op": "MSTORE"
    },
    "1100": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5369,
        5375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1102": {
      "op": "CALLDATALOAD"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH2",
      "value": "0x459"
    },
    "1109": {
      "fn": "ERC20.burnFrom",
      "offset": [
        5353,
        5376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67"
    },
    "1112": {
      "fn": "ERC20.burnFrom",
      "jump": "i",
      "offset": [
        5353,
        5376
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1113": {
      "op": "JUMPDEST"
    },
    "1114": {
      "op": "STOP"
    },
    "1115": {
      "op": "JUMPDEST"
    },
    "1116": {
      "op": "PUSH4",
      "value": "0x6FDDE3"
    },
    "1121": {
      "op": "DUP2"
    },
    "1122": {
      "op": "XOR"
    },
    "1123": {
      "op": "PUSH2",
      "value": "0x4BC"
    },
    "1126": {
      "op": "JUMPI"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1129": {
      "op": "CALLDATASIZE"
    },
    "1130": {
      "op": "LT"
    },
    "1131": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1134": {
      "op": "JUMPI"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1137": {
      "op": "DUP1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1140": {
      "op": "MSTORE"
    },
    "1141": {
      "op": "DUP1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1144": {
      "op": "ADD"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1147": {
      "op": "PUSH2",
      "value": "0x691"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1152": {
      "op": "CODECOPY"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1155": {
      "op": "MLOAD"
    },
    "1156": {
      "op": "DUP1"
    },
    "1157": {
      "op": "DUP3"
    },
    "1158": {
      "op": "MSTORE"
    },
    "1159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1161": {
      "op": "DUP3"
    },
    "1162": {
      "op": "ADD"
    },
    "1163": {
      "op": "DUP2"
    },
    "1164": {
      "op": "PUSH2",
      "value": "0x6B1"
    },
    "1167": {
      "op": "DUP3"
    },
    "1168": {
      "op": "CODECOPY"
    },
    "1169": {
      "op": "POP"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "op": "DUP1"
    },
    "1172": {
      "op": "MLOAD"
    },
    "1173": {
      "op": "DUP1"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1176": {
      "op": "DUP4"
    },
    "1177": {
      "op": "ADD"
    },
    "1178": {
      "op": "ADD"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1181": {
      "op": "DUP3"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1184": {
      "op": "SUB"
    },
    "1185": {
      "op": "AND"
    },
    "1186": {
      "op": "CALLDATASIZE"
    },
    "1187": {
      "op": "DUP3"
    },
    "1188": {
      "op": "CALLDATACOPY"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "op": "POP"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1193": {
      "op": "NOT"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1196": {
      "op": "DUP3"
    },
    "1197": {
      "op": "MLOAD"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1200": {
      "op": "ADD"
    },
    "1201": {
      "op": "ADD"
    },
    "1202": {
      "op": "AND"
    },
    "1203": {
      "op": "SWAP1"
    },
    "1204": {
      "op": "POP"
    },
    "1205": {
      "op": "DUP2"
    },
    "1206": {
      "op": "ADD"
    },
    "1207": {
      "op": "SWAP1"
    },
    "1208": {
      "op": "POP"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1211": {
      "op": "RETURN"
    },
    "1212": {
      "op": "JUMPDEST"
    },
    "1213": {
      "op": "PUSH4",
      "value": "0x95D89B41"
    },
    "1218": {
      "op": "DUP2"
    },
    "1219": {
      "op": "XOR"
    },
    "1220": {
      "op": "PUSH2",
      "value": "0x524"
    },
    "1223": {
      "op": "JUMPI"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1226": {
      "op": "CALLDATASIZE"
    },
    "1227": {
      "op": "LT"
    },
    "1228": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1231": {
      "op": "JUMPI"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1234": {
      "op": "DUP1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1237": {
      "op": "MSTORE"
    },
    "1238": {
      "op": "DUP1"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1241": {
      "op": "ADD"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1244": {
      "op": "PUSH2",
      "value": "0x6F1"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1249": {
      "op": "CODECOPY"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1252": {
      "op": "MLOAD"
    },
    "1253": {
      "op": "DUP1"
    },
    "1254": {
      "op": "DUP3"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1258": {
      "op": "DUP3"
    },
    "1259": {
      "op": "ADD"
    },
    "1260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1262": {
      "op": "PUSH2",
      "value": "0x711"
    },
    "1265": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1267": {
      "op": "CODECOPY"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1270": {
      "op": "MLOAD"
    },
    "1271": {
      "op": "DUP2"
    },
    "1272": {
      "op": "MSTORE"
    },
    "1273": {
      "op": "POP"
    },
    "1274": {
      "op": "POP"
    },
    "1275": {
      "op": "DUP1"
    },
    "1276": {
      "op": "MLOAD"
    },
    "1277": {
      "op": "DUP1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1280": {
      "op": "DUP4"
    },
    "1281": {
      "op": "ADD"
    },
    "1282": {
      "op": "ADD"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1285": {
      "op": "DUP3"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1288": {
      "op": "SUB"
    },
    "1289": {
      "op": "AND"
    },
    "1290": {
      "op": "CALLDATASIZE"
    },
    "1291": {
      "op": "DUP3"
    },
    "1292": {
      "op": "CALLDATACOPY"
    },
    "1293": {
      "op": "POP"
    },
    "1294": {
      "op": "POP"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1297": {
      "op": "NOT"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1300": {
      "op": "DUP3"
    },
    "1301": {
      "op": "MLOAD"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1304": {
      "op": "ADD"
    },
    "1305": {
      "op": "ADD"
    },
    "1306": {
      "op": "AND"
    },
    "1307": {
      "op": "SWAP1"
    },
    "1308": {
      "op": "POP"
    },
    "1309": {
      "op": "DUP2"
    },
    "1310": {
      "op": "ADD"
    },
    "1311": {
      "op": "SWAP1"
    },
    "1312": {
      "op": "POP"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1315": {
      "op": "RETURN"
    },
    "1316": {
      "op": "JUMPDEST"
    },
    "1317": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "1322": {
      "op": "DUP2"
    },
    "1323": {
      "op": "XOR"
    },
    "1324": {
      "op": "PUSH2",
      "value": "0x54B"
    },
    "1327": {
      "op": "JUMPI"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1330": {
      "op": "CALLDATASIZE"
    },
    "1331": {
      "op": "LT"
    },
    "1332": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1335": {
      "op": "JUMPI"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1338": {
      "op": "PUSH2",
      "value": "0x731"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1343": {
      "op": "CODECOPY"
    },
    "1344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1346": {
      "op": "MLOAD"
    },
    "1347": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1349": {
      "op": "MSTORE"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1354": {
      "op": "RETURN"
    },
    "1355": {
      "op": "JUMPDEST"
    },
    "1356": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1361": {
      "op": "DUP2"
    },
    "1362": {
      "op": "XOR"
    },
    "1363": {
      "op": "PUSH2",
      "value": "0x586"
    },
    "1366": {
      "op": "JUMPI"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1369": {
      "op": "CALLDATASIZE"
    },
    "1370": {
      "op": "LT"
    },
    "1371": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1374": {
      "op": "JUMPI"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1377": {
      "op": "CALLDATALOAD"
    },
    "1378": {
      "op": "DUP1"
    },
    "1379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1381": {
      "op": "SHR"
    },
    "1382": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1385": {
      "op": "JUMPI"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1388": {
      "op": "MSTORE"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1393": {
      "op": "MLOAD"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1396": {
      "op": "MSTORE"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1404": {
      "op": "SHA3"
    },
    "1405": {
      "op": "SLOAD"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1413": {
      "op": "RETURN"
    },
    "1414": {
      "op": "JUMPDEST"
    },
    "1415": {
      "op": "PUSH4",
      "value": "0xDD62ED3E"
    },
    "1420": {
      "op": "DUP2"
    },
    "1421": {
      "op": "XOR"
    },
    "1422": {
      "op": "PUSH2",
      "value": "0x5E0"
    },
    "1425": {
      "op": "JUMPI"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1428": {
      "op": "CALLDATASIZE"
    },
    "1429": {
      "op": "LT"
    },
    "1430": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1433": {
      "op": "JUMPI"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1436": {
      "op": "CALLDATALOAD"
    },
    "1437": {
      "op": "DUP1"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1440": {
      "op": "SHR"
    },
    "1441": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1444": {
      "op": "JUMPI"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1447": {
      "op": "MSTORE"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1450": {
      "op": "CALLDATALOAD"
    },
    "1451": {
      "op": "DUP1"
    },
    "1452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1454": {
      "op": "SHR"
    },
    "1455": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1458": {
      "op": "JUMPI"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1461": {
      "op": "MSTORE"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1466": {
      "op": "MLOAD"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1469": {
      "op": "MSTORE"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1472": {
      "op": "MSTORE"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1477": {
      "op": "SHA3"
    },
    "1478": {
      "op": "DUP1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1481": {
      "op": "MLOAD"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1484": {
      "op": "MSTORE"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1487": {
      "op": "MSTORE"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1492": {
      "op": "SHA3"
    },
    "1493": {
      "op": "SWAP1"
    },
    "1494": {
      "op": "POP"
    },
    "1495": {
      "op": "SLOAD"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1498": {
      "op": "MSTORE"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1503": {
      "op": "RETURN"
    },
    "1504": {
      "op": "JUMPDEST"
    },
    "1505": {
      "op": "PUSH4",
      "value": "0x1816DDD"
    },
    "1510": {
      "op": "DUP2"
    },
    "1511": {
      "op": "XOR"
    },
    "1512": {
      "op": "PUSH2",
      "value": "0x5FF"
    },
    "1515": {
      "op": "JUMPI"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1518": {
      "op": "CALLDATASIZE"
    },
    "1519": {
      "op": "LT"
    },
    "1520": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1523": {
      "op": "JUMPI"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1526": {
      "op": "SLOAD"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1529": {
      "op": "MSTORE"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1534": {
      "op": "RETURN"
    },
    "1535": {
      "op": "JUMPDEST"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "op": "JUMPDEST"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1542": {
      "op": "REVERT"
    },
    "1543": {
      "op": "JUMPDEST"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1546": {
      "op": "MLOAD"
    },
    "1547": {
      "op": "ISZERO"
    },
    "1548": {
      "fn": "ERC20._burn",
      "offset": [
        4475,
        4872
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67F"
    },
    "1551": {
      "fn": "ERC20._burn",
      "offset": [
        4740,
        4743
      ],
      "op": "JUMPI",
      "path": "0",
      "statement": 26
    },
    "1552": {
      "fn": "ERC20._burn",
      "offset": [
        4740,
        4761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1554": {
      "fn": "ERC20._burn",
      "offset": [
        4740,
        4761
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1555": {
      "fn": "ERC20._burn",
      "offset": [
        4733,
        4761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1557": {
      "fn": "ERC20._burn",
      "offset": [
        4733,
        4761
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1558": {
      "fn": "ERC20._burn",
      "offset": [
        4766,
        4782
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 27
    },
    "1559": {
      "op": "DUP3"
    },
    "1560": {
      "fn": "ERC20._burn",
      "offset": [
        4786,
        4792
      ],
      "op": "SUB",
      "path": "0"
    },
    "1561": {
      "op": "DUP3"
    },
    "1562": {
      "op": "DUP2"
    },
    "1563": {
      "op": "GT"
    },
    "1564": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1567": {
      "op": "JUMPI"
    },
    "1568": {
      "op": "SWAP1"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "op": "SWAP1"
    },
    "1571": {
      "op": "POP"
    },
    "1572": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1574": {
      "op": "SSTORE"
    },
    "1575": {
      "fn": "ERC20._burn",
      "offset": [
        4766,
        4792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1577": {
      "fn": "ERC20._burn",
      "offset": [
        4766,
        4792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1579": {
      "fn": "ERC20._burn",
      "offset": [
        4766,
        4782
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1582": {
      "fn": "ERC20._burn",
      "offset": [
        4797,
        4811
      ],
      "op": "MSTORE",
      "path": "0",
      "statement": 28
    },
    "1583": {
      "fn": "ERC20._burn",
      "offset": [
        4812,
        4815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1585": {
      "op": "MSTORE"
    },
    "1586": {
      "fn": "ERC20._burn",
      "offset": [
        4797,
        4816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1588": {
      "fn": "ERC20._burn",
      "offset": [
        4797,
        4816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1590": {
      "fn": "ERC20._burn",
      "offset": [
        4797,
        4816
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1591": {
      "fn": "ERC20._burn",
      "offset": [
        4797,
        4816
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1592": {
      "fn": "ERC20._burn",
      "offset": [
        4797,
        4816
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1593": {
      "fn": "ERC20._burn",
      "offset": [
        4797,
        4816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1595": {
      "fn": "ERC20._burn",
      "offset": [
        4797,
        4816
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1596": {
      "op": "DUP1"
    },
    "1597": {
      "op": "DUP3"
    },
    "1598": {
      "fn": "ERC20._burn",
      "offset": [
        4820,
        4826
      ],
      "op": "SUB",
      "path": "0"
    },
    "1599": {
      "op": "DUP3"
    },
    "1600": {
      "op": "DUP2"
    },
    "1601": {
      "op": "GT"
    },
    "1602": {
      "op": "PUSH2",
      "value": "0x67F"
    },
    "1605": {
      "op": "JUMPI"
    },
    "1606": {
      "op": "SWAP1"
    },
    "1607": {
      "op": "POP"
    },
    "1608": {
      "op": "SWAP1"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "op": "DUP2"
    },
    "1611": {
      "op": "SSTORE"
    },
    "1612": {
      "fn": "ERC20._burn",
      "offset": [
        4797,
        4826
      ],
      "op": "POP",
      "path": "0"
    },
    "1613": {
      "fn": "ERC20._burn",
      "offset": [
        4797,
        4826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1617": {
      "op": "MLOAD"
    },
    "1618": {
      "fn": "ERC20._burn",
      "offset": [
        4797,
        4826
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1651": {
      "fn": "ERC20._burn",
      "offset": [
        4831,
        4872
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x60"
    },
    "1653": {
      "fn": "ERC20._burn",
      "offset": [
        4844,
        4847
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1654": {
      "fn": "ERC20._burn",
      "offset": [
        4831,
        4872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1656": {
      "fn": "ERC20._burn",
      "offset": [
        4831,
        4872
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1657": {
      "fn": "ERC20._burn",
      "offset": [
        4865,
        4871
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1661": {
      "op": "LOG3"
    },
    "1662": {
      "op": "JUMP"
    },
    "1663": {
      "op": "JUMPDEST"
    },
    "1664": {
      "fn": "ERC20._burn",
      "offset": [
        4831,
        4872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1666": {
      "fn": "ERC20._burn",
      "offset": [
        4831,
        4872
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1667": {
      "op": "REVERT"
    },
    "1668": {
      "op": "LOG1"
    },
    "1669": {
      "op": "PUSH6",
      "value": "0x767970657283"
    },
    "1676": {
      "op": "STOP"
    },
    "1677": {
      "op": "SUB"
    }
  },
  "sha1": "40b9b193d672ae97359ac5207bbeaf11468c04dc",
  "source": "# @version ^0.3.7\n\n# @dev Implementation of ERC-20 token standard.\n# @author Takayuki Jimba (@yudetamago)\n# https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\n\nfrom vyper.interfaces import ERC20\nfrom vyper.interfaces import ERC20Detailed\n\nimplements: ERC20\nimplements: ERC20Detailed\n\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    value: uint256\n\nevent Approval:\n    owner: indexed(address)\n    spender: indexed(address)\n    value: uint256\n\nNAME: immutable(String[33])  # trigger different codegen\nSYMBOL: immutable(String[32])\nDECIMALS: immutable(uint8)\n\n# NOTE: By declaring `balanceOf` as public, vyper automatically generates a 'balanceOf()' getter\n#       method to allow access to account balances.\n#       The _KeyType will become a required parameter for the getter and it will return _ValueType.\n#       See: https://vyper.readthedocs.io/en/v0.1.0-beta.8/types.html?highlight=getter#mappings\nbalanceOf: public(HashMap[address, uint256])\n# By declaring `allowance` as public, vyper automatically generates the `allowance()` getter\nallowance: public(HashMap[address, HashMap[address, uint256]])\n# By declaring `totalSupply` as public, we automatically create the `totalSupply()` getter\ntotalSupply: public(uint256)\nminter: address\n\n\n@external\ndef __init__(name: String[32], symbol: String[32], decimals: uint8, supply: uint256):\n    init_supply: uint256 = supply * 10 ** convert(decimals, uint256)\n    NAME = name\n    SYMBOL = symbol\n    DECIMALS = decimals\n    self.balanceOf[msg.sender] = init_supply\n    self.totalSupply = init_supply\n    self.minter = msg.sender\n    log Transfer(empty(address), msg.sender, init_supply)\n\n\n@external\ndef transfer(_to : address, _value : uint256) -> bool:\n    \"\"\"\n    @dev Transfer token for a specified address\n    @param _to The address to transfer to.\n    @param _value The amount to be transferred.\n    \"\"\"\n    # NOTE: vyper does not allow underflows\n    #       so the following subtraction would revert on insufficient balance\n    self.balanceOf[msg.sender] -= _value\n    self.balanceOf[_to] += _value\n    log Transfer(msg.sender, _to, _value)\n    return True\n\n\n@external\ndef transferFrom(_from : address, _to : address, _value : uint256) -> bool:\n    \"\"\"\n     @dev Transfer tokens from one address to another.\n     @param _from address The address which you want to send tokens from\n     @param _to address The address which you want to transfer to\n     @param _value uint256 the amount of tokens to be transferred\n    \"\"\"\n    # NOTE: vyper does not allow underflows\n    #       so the following subtraction would revert on insufficient balance\n    assert self.balanceOf[_from] >= _value, \"balanceOf underflow\"\n    self.balanceOf[_from] -= _value\n    self.balanceOf[_to] += _value\n    # NOTE: vyper does not allow underflows\n    #      so the following subtraction would revert on insufficient allowance\n    assert self.allowance[_from][msg.sender] >= _value, \"allowance underflow\"\n    self.allowance[_from][msg.sender] -= _value\n    log Transfer(_from, _to, _value)\n    return True\n\n\n@external\ndef approve(_spender : address, _value : uint256) -> bool:\n    \"\"\"\n    @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n         Beware that changing an allowance with this method brings the risk that someone may use both the old\n         and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n         race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n         https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param _spender The address which will spend the funds.\n    @param _value The amount of tokens to be spent.\n    \"\"\"\n    self.allowance[msg.sender][_spender] = _value\n    log Approval(msg.sender, _spender, _value)\n    return True\n\n\n@external\ndef mint(_to: address, _value: uint256):\n    \"\"\"\n    @dev Mint an amount of the token and assigns it to an account.\n         This encapsulates the modification of balances such that the\n         proper events are emitted.\n    @param _to The account that will receive the created tokens.\n    @param _value The amount that will be created.\n    \"\"\"\n    assert msg.sender == self.minter  # rekt: non-minter tried to mint\n    assert _to != empty(address)\n    self.totalSupply += _value\n    self.balanceOf[_to] += _value\n    log Transfer(empty(address), _to, _value)\n\n\n@internal\ndef _burn(_to: address, _value: uint256):\n    \"\"\"\n    @dev Internal function that burns an amount of the token of a given\n         account.\n    @param _to The account whose tokens will be burned.\n    @param _value The amount that will be burned.\n    \"\"\"\n    assert _to != empty(address)\n    self.totalSupply -= _value\n    self.balanceOf[_to] -= _value\n    log Transfer(_to, empty(address), _value)\n\n\n@external\ndef burn(_value: uint256):\n    \"\"\"\n    @dev Burn an amount of the token of msg.sender.\n    @param _value The amount that will be burned.\n    \"\"\"\n    self._burn(msg.sender, _value)\n\n\n@external\ndef burnFrom(_to: address, _value: uint256):\n    \"\"\"\n    @dev Burn an amount of the token from a given account.\n    @param _to The account whose tokens will be burned.\n    @param _value The amount that will be burned.\n    \"\"\"\n    self.allowance[_to][msg.sender] -= _value\n    self._burn(_to, _value)\n\n\n# manually write getters for now; cf. vyper#2903\n@external\ndef name() -> String[33]:\n    return NAME\n\n\n@external\ndef symbol() -> String[32]:\n    return SYMBOL\n\n\n@external\ndef decimals() -> uint8:\n    return DECIMALS",
  "sourceMap": "",
  "sourcePath": "contracts/tests/ERC20.vy",
  "type": "contract"
}