{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint256"
        },
        {
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "convertToAssets",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deployer",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "arg0",
          "type": "uint256"
        }
      ],
      "name": "allMinters",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "arg0",
          "type": "uint256"
        }
      ],
      "name": "activeMinters",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "arg0",
          "type": "address"
        }
      ],
      "name": "activeMintersIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "arg0",
          "type": "address"
        }
      ],
      "name": "activeMintersActive",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/tests/TestYearnToken.vy"
  },
  "ast": {
    "ast_type": "Module",
    "body": [
      {
        "alias": null,
        "ast_type": "ImportFrom",
        "col_offset": 0,
        "end_col_offset": 34,
        "end_lineno": 9,
        "level": 0,
        "lineno": 9,
        "module": "vyper.interfaces",
        "name": "ERC20",
        "node_id": 3,
        "src": "168:34:6"
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 12,
          "end_col_offset": 17,
          "end_lineno": 11,
          "id": "ERC20",
          "lineno": 11,
          "node_id": 8,
          "src": "216:5:6"
        },
        "ast_type": "AnnAssign",
        "col_offset": 0,
        "end_col_offset": 17,
        "end_lineno": 11,
        "lineno": 11,
        "node_id": 5,
        "simple": 1,
        "src": "204:17:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 11,
          "id": "implements",
          "lineno": 11,
          "node_id": 6,
          "src": "204:10:6"
        },
        "value": null
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 26,
                  "end_lineno": 15,
                  "id": "address",
                  "lineno": 15,
                  "node_id": 17,
                  "src": "259:7:6"
                }
              ],
              "ast_type": "Call",
              "col_offset": 11,
              "end_col_offset": 27,
              "end_lineno": 15,
              "func": {
                "ast_type": "Name",
                "col_offset": 11,
                "end_col_offset": 18,
                "end_lineno": 15,
                "id": "indexed",
                "lineno": 15,
                "node_id": 15,
                "src": "251:7:6"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 15,
              "node_id": 14,
              "src": "251:16:6"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 27,
            "end_lineno": 15,
            "lineno": 15,
            "node_id": 11,
            "simple": 1,
            "src": "244:23:6",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 15,
              "id": "owner",
              "lineno": 15,
              "node_id": 12,
              "src": "244:5:6"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 21,
                  "end_col_offset": 28,
                  "end_lineno": 16,
                  "id": "address",
                  "lineno": 16,
                  "node_id": 25,
                  "src": "289:7:6"
                }
              ],
              "ast_type": "Call",
              "col_offset": 13,
              "end_col_offset": 29,
              "end_lineno": 16,
              "func": {
                "ast_type": "Name",
                "col_offset": 13,
                "end_col_offset": 20,
                "end_lineno": 16,
                "id": "indexed",
                "lineno": 16,
                "node_id": 23,
                "src": "281:7:6"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 16,
              "node_id": 22,
              "src": "281:16:6"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 16,
            "lineno": 16,
            "node_id": 19,
            "simple": 1,
            "src": "272:25:6",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 11,
              "end_lineno": 16,
              "id": "spender",
              "lineno": 16,
              "node_id": 20,
              "src": "272:7:6"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 17,
              "id": "uint256",
              "lineno": 17,
              "node_id": 30,
              "src": "309:7:6"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 18,
            "end_lineno": 17,
            "lineno": 17,
            "node_id": 27,
            "simple": 1,
            "src": "302:14:6",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 17,
              "id": "value",
              "lineno": 17,
              "node_id": 28,
              "src": "302:5:6"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 17,
        "lineno": 14,
        "name": "Approval",
        "node_id": 10,
        "src": "224:92:6"
      },
      {
        "ast_type": "EventDef",
        "body": [
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 27,
                  "end_lineno": 20,
                  "id": "address",
                  "lineno": 20,
                  "node_id": 39,
                  "src": "354:7:6"
                }
              ],
              "ast_type": "Call",
              "col_offset": 12,
              "end_col_offset": 28,
              "end_lineno": 20,
              "func": {
                "ast_type": "Name",
                "col_offset": 12,
                "end_col_offset": 19,
                "end_lineno": 20,
                "id": "indexed",
                "lineno": 20,
                "node_id": 37,
                "src": "346:7:6"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 20,
              "node_id": 36,
              "src": "346:16:6"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 28,
            "end_lineno": 20,
            "lineno": 20,
            "node_id": 33,
            "simple": 1,
            "src": "338:24:6",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 10,
              "end_lineno": 20,
              "id": "sender",
              "lineno": 20,
              "node_id": 34,
              "src": "338:6:6"
            },
            "value": null
          },
          {
            "annotation": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 22,
                  "end_col_offset": 29,
                  "end_lineno": 21,
                  "id": "address",
                  "lineno": 21,
                  "node_id": 47,
                  "src": "385:7:6"
                }
              ],
              "ast_type": "Call",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 21,
              "func": {
                "ast_type": "Name",
                "col_offset": 14,
                "end_col_offset": 21,
                "end_lineno": 21,
                "id": "indexed",
                "lineno": 21,
                "node_id": 45,
                "src": "377:7:6"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 21,
              "node_id": 44,
              "src": "377:16:6"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 21,
            "lineno": 21,
            "node_id": 41,
            "simple": 1,
            "src": "367:26:6",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 12,
              "end_lineno": 21,
              "id": "receiver",
              "lineno": 21,
              "node_id": 42,
              "src": "367:8:6"
            },
            "value": null
          },
          {
            "annotation": {
              "ast_type": "Name",
              "col_offset": 11,
              "end_col_offset": 18,
              "end_lineno": 22,
              "id": "uint256",
              "lineno": 22,
              "node_id": 52,
              "src": "405:7:6"
            },
            "ast_type": "AnnAssign",
            "col_offset": 4,
            "end_col_offset": 18,
            "end_lineno": 22,
            "lineno": 22,
            "node_id": 49,
            "simple": 1,
            "src": "398:14:6",
            "target": {
              "ast_type": "Name",
              "col_offset": 4,
              "end_col_offset": 9,
              "end_lineno": 22,
              "id": "value",
              "lineno": 22,
              "node_id": 50,
              "src": "398:5:6"
            },
            "value": null
          }
        ],
        "col_offset": 0,
        "end_col_offset": 18,
        "end_lineno": 22,
        "lineno": 19,
        "name": "Transfer",
        "node_id": 32,
        "src": "318:94:6"
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 13,
          "end_col_offset": 23,
          "end_lineno": 25,
          "lineno": 25,
          "node_id": 60,
          "slice": {
            "ast_type": "Index",
            "col_offset": 13,
            "end_col_offset": 23,
            "end_lineno": 25,
            "lineno": 25,
            "node_id": 65,
            "src": "428:10:6",
            "value": {
              "ast_type": "Int",
              "col_offset": 20,
              "end_col_offset": 22,
              "end_lineno": 25,
              "lineno": 25,
              "node_id": 63,
              "src": "435:2:6",
              "value": 64
            }
          },
          "src": "428:10:6",
          "value": {
            "ast_type": "Name",
            "col_offset": 13,
            "end_col_offset": 19,
            "end_lineno": 25,
            "id": "String",
            "lineno": 25,
            "node_id": 61,
            "src": "428:6:6"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 24,
        "end_lineno": 25,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 25,
        "node_id": 54,
        "src": "415:24:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 4,
          "end_lineno": 25,
          "id": "name",
          "lineno": 25,
          "node_id": 55,
          "src": "415:4:6"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 15,
          "end_col_offset": 25,
          "end_lineno": 26,
          "lineno": 26,
          "node_id": 72,
          "slice": {
            "ast_type": "Index",
            "col_offset": 15,
            "end_col_offset": 25,
            "end_lineno": 26,
            "lineno": 26,
            "node_id": 77,
            "src": "455:10:6",
            "value": {
              "ast_type": "Int",
              "col_offset": 22,
              "end_col_offset": 24,
              "end_lineno": 26,
              "lineno": 26,
              "node_id": 75,
              "src": "462:2:6",
              "value": 32
            }
          },
          "src": "455:10:6",
          "value": {
            "ast_type": "Name",
            "col_offset": 15,
            "end_col_offset": 21,
            "end_lineno": 26,
            "id": "String",
            "lineno": 26,
            "node_id": 73,
            "src": "455:6:6"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 26,
        "end_lineno": 26,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 26,
        "node_id": 66,
        "src": "440:26:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 6,
          "end_lineno": 26,
          "id": "symbol",
          "lineno": 26,
          "node_id": 67,
          "src": "440:6:6"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 14,
          "end_col_offset": 21,
          "end_lineno": 28,
          "id": "uint256",
          "lineno": 28,
          "node_id": 84,
          "src": "482:7:6"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 22,
        "end_lineno": 28,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 28,
        "node_id": 78,
        "src": "468:22:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 5,
          "end_lineno": 28,
          "id": "price",
          "lineno": 28,
          "node_id": 79,
          "src": "468:5:6"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 17,
          "end_col_offset": 24,
          "end_lineno": 29,
          "id": "uint256",
          "lineno": 29,
          "node_id": 92,
          "src": "508:7:6"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 25,
        "end_lineno": 29,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 29,
        "node_id": 86,
        "src": "491:25:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 8,
          "end_lineno": 29,
          "id": "decimals",
          "lineno": 29,
          "node_id": 87,
          "src": "491:8:6"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 20,
          "end_col_offset": 27,
          "end_lineno": 30,
          "id": "uint256",
          "lineno": 30,
          "node_id": 100,
          "src": "537:7:6"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 28,
        "end_lineno": 30,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 30,
        "node_id": 94,
        "src": "517:28:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 11,
          "end_lineno": 30,
          "id": "totalSupply",
          "lineno": 30,
          "node_id": 95,
          "src": "517:11:6"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Name",
          "col_offset": 17,
          "end_col_offset": 24,
          "end_lineno": 32,
          "id": "address",
          "lineno": 32,
          "node_id": 108,
          "src": "564:7:6"
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 25,
        "end_lineno": 32,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 32,
        "node_id": 102,
        "src": "547:25:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 8,
          "end_lineno": 32,
          "id": "deployer",
          "lineno": 32,
          "node_id": 103,
          "src": "547:8:6"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 10,
          "end_col_offset": 35,
          "end_lineno": 34,
          "lineno": 34,
          "node_id": 113,
          "slice": {
            "ast_type": "Index",
            "col_offset": 10,
            "end_col_offset": 35,
            "end_lineno": 34,
            "lineno": 34,
            "node_id": 123,
            "src": "584:25:6",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 18,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 25,
                  "end_lineno": 34,
                  "id": "address",
                  "lineno": 34,
                  "node_id": 117,
                  "src": "592:7:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 27,
                  "end_col_offset": 34,
                  "end_lineno": 34,
                  "id": "uint256",
                  "lineno": 34,
                  "node_id": 119,
                  "src": "601:7:6"
                }
              ],
              "end_col_offset": 34,
              "end_lineno": 34,
              "lineno": 34,
              "node_id": 116,
              "src": "592:16:6"
            }
          },
          "src": "584:25:6",
          "value": {
            "ast_type": "Name",
            "col_offset": 10,
            "end_col_offset": 17,
            "end_lineno": 34,
            "id": "HashMap",
            "lineno": 34,
            "node_id": 114,
            "src": "584:7:6"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 35,
        "end_lineno": 34,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 34,
        "node_id": 110,
        "src": "574:35:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 8,
          "end_lineno": 34,
          "id": "balances",
          "lineno": 34,
          "node_id": 111,
          "src": "574:8:6"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 19,
          "end_col_offset": 57,
          "end_lineno": 35,
          "lineno": 35,
          "node_id": 130,
          "slice": {
            "ast_type": "Index",
            "col_offset": 19,
            "end_col_offset": 57,
            "end_lineno": 35,
            "lineno": 35,
            "node_id": 139,
            "src": "629:38:6",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 28,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 28,
                  "end_col_offset": 35,
                  "end_lineno": 35,
                  "id": "address",
                  "lineno": 35,
                  "node_id": 134,
                  "src": "638:7:6"
                },
                {
                  "ast_type": "Int",
                  "col_offset": 37,
                  "end_col_offset": 56,
                  "end_lineno": 35,
                  "lineno": 35,
                  "node_id": 136,
                  "src": "647:19:6",
                  "value": 1000000000000000000
                }
              ],
              "end_col_offset": 56,
              "end_lineno": 35,
              "lineno": 35,
              "node_id": 133,
              "src": "638:28:6"
            }
          },
          "src": "629:38:6",
          "value": {
            "ast_type": "Name",
            "col_offset": 19,
            "end_col_offset": 27,
            "end_lineno": 35,
            "id": "DynArray",
            "lineno": 35,
            "node_id": 131,
            "src": "629:8:6"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 58,
        "end_lineno": 35,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 35,
        "node_id": 124,
        "src": "610:58:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 35,
          "id": "allMinters",
          "lineno": 35,
          "node_id": 125,
          "src": "610:10:6"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 22,
          "end_col_offset": 45,
          "end_lineno": 36,
          "lineno": 36,
          "node_id": 146,
          "slice": {
            "ast_type": "Index",
            "col_offset": 22,
            "end_col_offset": 45,
            "end_lineno": 36,
            "lineno": 36,
            "node_id": 155,
            "src": "691:23:6",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 31,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 38,
                  "end_lineno": 36,
                  "id": "address",
                  "lineno": 36,
                  "node_id": 150,
                  "src": "700:7:6"
                },
                {
                  "ast_type": "Int",
                  "col_offset": 40,
                  "end_col_offset": 44,
                  "end_lineno": 36,
                  "lineno": 36,
                  "node_id": 152,
                  "src": "709:4:6",
                  "value": 1000
                }
              ],
              "end_col_offset": 44,
              "end_lineno": 36,
              "lineno": 36,
              "node_id": 149,
              "src": "700:13:6"
            }
          },
          "src": "691:23:6",
          "value": {
            "ast_type": "Name",
            "col_offset": 22,
            "end_col_offset": 30,
            "end_lineno": 36,
            "id": "DynArray",
            "lineno": 36,
            "node_id": 147,
            "src": "691:8:6"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 46,
        "end_lineno": 36,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 36,
        "node_id": 140,
        "src": "669:46:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 13,
          "end_lineno": 36,
          "id": "activeMinters",
          "lineno": 36,
          "node_id": 141,
          "src": "669:13:6"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 27,
          "end_col_offset": 52,
          "end_lineno": 37,
          "lineno": 37,
          "node_id": 162,
          "slice": {
            "ast_type": "Index",
            "col_offset": 27,
            "end_col_offset": 52,
            "end_lineno": 37,
            "lineno": 37,
            "node_id": 172,
            "src": "743:25:6",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 35,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 42,
                  "end_lineno": 37,
                  "id": "address",
                  "lineno": 37,
                  "node_id": 166,
                  "src": "751:7:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 44,
                  "end_col_offset": 51,
                  "end_lineno": 37,
                  "id": "uint256",
                  "lineno": 37,
                  "node_id": 168,
                  "src": "760:7:6"
                }
              ],
              "end_col_offset": 51,
              "end_lineno": 37,
              "lineno": 37,
              "node_id": 165,
              "src": "751:16:6"
            }
          },
          "src": "743:25:6",
          "value": {
            "ast_type": "Name",
            "col_offset": 27,
            "end_col_offset": 34,
            "end_lineno": 37,
            "id": "HashMap",
            "lineno": 37,
            "node_id": 163,
            "src": "743:7:6"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 53,
        "end_lineno": 37,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 37,
        "node_id": 156,
        "src": "716:53:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 18,
          "end_lineno": 37,
          "id": "activeMintersIndex",
          "lineno": 37,
          "node_id": 157,
          "src": "716:18:6"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 28,
          "end_col_offset": 50,
          "end_lineno": 38,
          "lineno": 38,
          "node_id": 179,
          "slice": {
            "ast_type": "Index",
            "col_offset": 28,
            "end_col_offset": 50,
            "end_lineno": 38,
            "lineno": 38,
            "node_id": 189,
            "src": "798:22:6",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 36,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 43,
                  "end_lineno": 38,
                  "id": "address",
                  "lineno": 38,
                  "node_id": 183,
                  "src": "806:7:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 45,
                  "end_col_offset": 49,
                  "end_lineno": 38,
                  "id": "bool",
                  "lineno": 38,
                  "node_id": 185,
                  "src": "815:4:6"
                }
              ],
              "end_col_offset": 49,
              "end_lineno": 38,
              "lineno": 38,
              "node_id": 182,
              "src": "806:13:6"
            }
          },
          "src": "798:22:6",
          "value": {
            "ast_type": "Name",
            "col_offset": 28,
            "end_col_offset": 35,
            "end_lineno": 38,
            "id": "HashMap",
            "lineno": 38,
            "node_id": 180,
            "src": "798:7:6"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 51,
        "end_lineno": 38,
        "is_constant": false,
        "is_immutable": false,
        "is_public": true,
        "lineno": 38,
        "node_id": 173,
        "src": "770:51:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 19,
          "end_lineno": 38,
          "id": "activeMintersActive",
          "lineno": 38,
          "node_id": 174,
          "src": "770:19:6"
        },
        "value": null
      },
      {
        "annotation": {
          "ast_type": "Subscript",
          "col_offset": 12,
          "end_col_offset": 55,
          "end_lineno": 39,
          "lineno": 39,
          "node_id": 193,
          "slice": {
            "ast_type": "Index",
            "col_offset": 12,
            "end_col_offset": 55,
            "end_lineno": 39,
            "lineno": 39,
            "node_id": 212,
            "src": "834:43:6",
            "value": {
              "ast_type": "Tuple",
              "col_offset": 20,
              "elements": [
                {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 27,
                  "end_lineno": 39,
                  "id": "address",
                  "lineno": 39,
                  "node_id": 197,
                  "src": "842:7:6"
                },
                {
                  "ast_type": "Subscript",
                  "col_offset": 29,
                  "end_col_offset": 54,
                  "end_lineno": 39,
                  "lineno": 39,
                  "node_id": 199,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 29,
                    "end_col_offset": 54,
                    "end_lineno": 39,
                    "lineno": 39,
                    "node_id": 209,
                    "src": "851:25:6",
                    "value": {
                      "ast_type": "Tuple",
                      "col_offset": 37,
                      "elements": [
                        {
                          "ast_type": "Name",
                          "col_offset": 37,
                          "end_col_offset": 44,
                          "end_lineno": 39,
                          "id": "address",
                          "lineno": 39,
                          "node_id": 203,
                          "src": "859:7:6"
                        },
                        {
                          "ast_type": "Name",
                          "col_offset": 46,
                          "end_col_offset": 53,
                          "end_lineno": 39,
                          "id": "uint256",
                          "lineno": 39,
                          "node_id": 205,
                          "src": "868:7:6"
                        }
                      ],
                      "end_col_offset": 53,
                      "end_lineno": 39,
                      "lineno": 39,
                      "node_id": 202,
                      "src": "859:16:6"
                    }
                  },
                  "src": "851:25:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 29,
                    "end_col_offset": 36,
                    "end_lineno": 39,
                    "id": "HashMap",
                    "lineno": 39,
                    "node_id": 200,
                    "src": "851:7:6"
                  }
                }
              ],
              "end_col_offset": 54,
              "end_lineno": 39,
              "lineno": 39,
              "node_id": 196,
              "src": "842:34:6"
            }
          },
          "src": "834:43:6",
          "value": {
            "ast_type": "Name",
            "col_offset": 12,
            "end_col_offset": 19,
            "end_lineno": 39,
            "id": "HashMap",
            "lineno": 39,
            "node_id": 194,
            "src": "834:7:6"
          }
        },
        "ast_type": "VariableDecl",
        "col_offset": 0,
        "end_col_offset": 55,
        "end_lineno": 39,
        "is_constant": false,
        "is_immutable": false,
        "is_public": false,
        "lineno": 39,
        "node_id": 190,
        "src": "822:55:6",
        "target": {
          "ast_type": "Name",
          "col_offset": 0,
          "end_col_offset": 10,
          "end_lineno": 39,
          "id": "allowances",
          "lineno": 39,
          "node_id": 191,
          "src": "822:10:6"
        },
        "value": null
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 20,
                "end_col_offset": 30,
                "end_lineno": 43,
                "lineno": 43,
                "node_id": 216,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 20,
                  "end_col_offset": 30,
                  "end_lineno": 43,
                  "lineno": 43,
                  "node_id": 221,
                  "src": "910:10:6",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 27,
                    "end_col_offset": 29,
                    "end_lineno": 43,
                    "lineno": 43,
                    "node_id": 219,
                    "src": "917:2:6",
                    "value": 64
                  }
                },
                "src": "910:10:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 20,
                  "end_col_offset": 26,
                  "end_lineno": 43,
                  "id": "String",
                  "lineno": 43,
                  "node_id": 217,
                  "src": "910:6:6"
                }
              },
              "arg": "_name",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 30,
              "end_lineno": 43,
              "lineno": 43,
              "node_id": 215,
              "src": "903:17:6"
            },
            {
              "annotation": {
                "ast_type": "Subscript",
                "col_offset": 41,
                "end_col_offset": 51,
                "end_lineno": 43,
                "lineno": 43,
                "node_id": 223,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 41,
                  "end_col_offset": 51,
                  "end_lineno": 43,
                  "lineno": 43,
                  "node_id": 228,
                  "src": "931:10:6",
                  "value": {
                    "ast_type": "Int",
                    "col_offset": 48,
                    "end_col_offset": 50,
                    "end_lineno": 43,
                    "lineno": 43,
                    "node_id": 226,
                    "src": "938:2:6",
                    "value": 32
                  }
                },
                "src": "931:10:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 41,
                  "end_col_offset": 47,
                  "end_lineno": 43,
                  "id": "String",
                  "lineno": 43,
                  "node_id": 224,
                  "src": "931:6:6"
                }
              },
              "arg": "_symbol",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 51,
              "end_lineno": 43,
              "lineno": 43,
              "node_id": 222,
              "src": "922:19:6"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 64,
                "end_col_offset": 71,
                "end_lineno": 43,
                "id": "uint256",
                "lineno": 43,
                "node_id": 230,
                "src": "954:7:6"
              },
              "arg": "_decimals",
              "ast_type": "arg",
              "col_offset": 53,
              "end_col_offset": 71,
              "end_lineno": 43,
              "lineno": 43,
              "node_id": 229,
              "src": "943:18:6"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 87,
                "end_col_offset": 94,
                "end_lineno": 43,
                "id": "uint256",
                "lineno": 43,
                "node_id": 233,
                "src": "977:7:6"
              },
              "arg": "_totalSupply",
              "ast_type": "arg",
              "col_offset": 73,
              "end_col_offset": 94,
              "end_lineno": 43,
              "lineno": 43,
              "node_id": 232,
              "src": "963:21:6"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 94,
          "end_lineno": 43,
          "lineno": 43,
          "node_id": 214,
          "src": "903:81:6"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 21,
            "end_lineno": 44,
            "lineno": 44,
            "node_id": 235,
            "src": "991:17:6",
            "target": {
              "ast_type": "Attribute",
              "attr": "name",
              "col_offset": 4,
              "end_col_offset": 13,
              "end_lineno": 44,
              "lineno": 44,
              "node_id": 236,
              "src": "991:9:6",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 44,
                "id": "self",
                "lineno": 44,
                "node_id": 237,
                "src": "991:4:6"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 16,
              "end_col_offset": 21,
              "end_lineno": 44,
              "id": "_name",
              "lineno": 44,
              "node_id": 240,
              "src": "1003:5:6"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 25,
            "end_lineno": 45,
            "lineno": 45,
            "node_id": 242,
            "src": "1013:21:6",
            "target": {
              "ast_type": "Attribute",
              "attr": "symbol",
              "col_offset": 4,
              "end_col_offset": 15,
              "end_lineno": 45,
              "lineno": 45,
              "node_id": 243,
              "src": "1013:11:6",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 45,
                "id": "self",
                "lineno": 45,
                "node_id": 244,
                "src": "1013:4:6"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 18,
              "end_col_offset": 25,
              "end_lineno": 45,
              "id": "_symbol",
              "lineno": 45,
              "node_id": 247,
              "src": "1027:7:6"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 25,
            "end_lineno": 46,
            "lineno": 46,
            "node_id": 249,
            "src": "1039:21:6",
            "target": {
              "ast_type": "Attribute",
              "attr": "price",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 46,
              "lineno": 46,
              "node_id": 250,
              "src": "1039:10:6",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 46,
                "id": "self",
                "lineno": 46,
                "node_id": 251,
                "src": "1039:4:6"
              }
            },
            "value": {
              "ast_type": "BinOp",
              "col_offset": 17,
              "end_col_offset": 25,
              "end_lineno": 46,
              "left": {
                "ast_type": "Int",
                "col_offset": 17,
                "end_col_offset": 19,
                "end_lineno": 46,
                "lineno": 46,
                "node_id": 255,
                "src": "1052:2:6",
                "value": 10
              },
              "lineno": 46,
              "node_id": 254,
              "op": {
                "ast_type": "Pow",
                "col_offset": 17,
                "end_col_offset": 25,
                "end_lineno": 46,
                "lineno": 46,
                "node_id": 735,
                "src": "1052:8:6"
              },
              "right": {
                "ast_type": "Int",
                "col_offset": 23,
                "end_col_offset": 25,
                "end_lineno": 46,
                "lineno": 46,
                "node_id": 257,
                "src": "1058:2:6",
                "value": 18
              },
              "src": "1052:8:6"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 29,
            "end_lineno": 47,
            "lineno": 47,
            "node_id": 258,
            "src": "1065:25:6",
            "target": {
              "ast_type": "Attribute",
              "attr": "decimals",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 47,
              "lineno": 47,
              "node_id": 259,
              "src": "1065:13:6",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 47,
                "id": "self",
                "lineno": 47,
                "node_id": 260,
                "src": "1065:4:6"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 20,
              "end_col_offset": 29,
              "end_lineno": 47,
              "id": "_decimals",
              "lineno": 47,
              "node_id": 263,
              "src": "1081:9:6"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 48,
            "lineno": 48,
            "node_id": 265,
            "src": "1095:40:6",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 29,
              "end_lineno": 48,
              "lineno": 48,
              "node_id": 266,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 29,
                "end_lineno": 48,
                "lineno": 48,
                "node_id": 276,
                "src": "1095:25:6",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 18,
                  "end_col_offset": 28,
                  "end_lineno": 48,
                  "lineno": 48,
                  "node_id": 271,
                  "src": "1109:10:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 18,
                    "end_col_offset": 21,
                    "end_lineno": 48,
                    "id": "msg",
                    "lineno": 48,
                    "node_id": 272,
                    "src": "1109:3:6"
                  }
                }
              },
              "src": "1095:25:6",
              "value": {
                "ast_type": "Attribute",
                "attr": "balances",
                "col_offset": 4,
                "end_col_offset": 17,
                "end_lineno": 48,
                "lineno": 48,
                "node_id": 267,
                "src": "1095:13:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 48,
                  "id": "self",
                  "lineno": 48,
                  "node_id": 268,
                  "src": "1095:4:6"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 32,
              "end_col_offset": 44,
              "end_lineno": 48,
              "id": "_totalSupply",
              "lineno": 48,
              "node_id": 277,
              "src": "1123:12:6"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 35,
            "end_lineno": 49,
            "lineno": 49,
            "node_id": 279,
            "src": "1140:31:6",
            "target": {
              "ast_type": "Attribute",
              "attr": "totalSupply",
              "col_offset": 4,
              "end_col_offset": 20,
              "end_lineno": 49,
              "lineno": 49,
              "node_id": 280,
              "src": "1140:16:6",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 49,
                "id": "self",
                "lineno": 49,
                "node_id": 281,
                "src": "1140:4:6"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 23,
              "end_col_offset": 35,
              "end_lineno": 49,
              "id": "_totalSupply",
              "lineno": 49,
              "node_id": 284,
              "src": "1159:12:6"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 50,
            "lineno": 50,
            "node_id": 286,
            "src": "1176:26:6",
            "target": {
              "ast_type": "Attribute",
              "attr": "deployer",
              "col_offset": 4,
              "end_col_offset": 17,
              "end_lineno": 50,
              "lineno": 50,
              "node_id": 287,
              "src": "1176:13:6",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 50,
                "id": "self",
                "lineno": 50,
                "node_id": 288,
                "src": "1176:4:6"
              }
            },
            "value": {
              "ast_type": "Attribute",
              "attr": "sender",
              "col_offset": 20,
              "end_col_offset": 30,
              "end_lineno": 50,
              "lineno": 50,
              "node_id": 291,
              "src": "1192:10:6",
              "value": {
                "ast_type": "Name",
                "col_offset": 20,
                "end_col_offset": 23,
                "end_lineno": 50,
                "id": "msg",
                "lineno": 50,
                "node_id": 292,
                "src": "1192:3:6"
              }
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 58,
            "end_lineno": 51,
            "lineno": 51,
            "node_id": 296,
            "src": "1207:54:6",
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 23,
                      "end_col_offset": 30,
                      "end_lineno": 51,
                      "id": "address",
                      "lineno": 51,
                      "node_id": 303,
                      "src": "1226:7:6"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 17,
                  "end_col_offset": 31,
                  "end_lineno": 51,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 22,
                    "end_lineno": 51,
                    "id": "empty",
                    "lineno": 51,
                    "node_id": 301,
                    "src": "1220:5:6"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 51,
                  "node_id": 300,
                  "src": "1220:14:6"
                },
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 33,
                  "end_col_offset": 43,
                  "end_lineno": 51,
                  "lineno": 51,
                  "node_id": 305,
                  "src": "1236:10:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 33,
                    "end_col_offset": 36,
                    "end_lineno": 51,
                    "id": "msg",
                    "lineno": 51,
                    "node_id": 306,
                    "src": "1236:3:6"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 45,
                  "end_col_offset": 57,
                  "end_lineno": 51,
                  "id": "_totalSupply",
                  "lineno": 51,
                  "node_id": 309,
                  "src": "1248:12:6"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 58,
              "end_lineno": 51,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 51,
                "id": "Transfer",
                "lineno": 51,
                "node_id": 298,
                "src": "1211:8:6"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 51,
              "node_id": 297,
              "src": "1211:50:6"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 42,
            "id": "external",
            "lineno": 42,
            "node_id": 311,
            "src": "881:8:6"
          }
        ],
        "doc_string": null,
        "end_col_offset": 58,
        "end_lineno": 51,
        "lineno": 43,
        "name": "__init__",
        "node_id": 213,
        "pos": null,
        "returns": null,
        "src": "890:371:6"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 22,
                "end_col_offset": 29,
                "end_lineno": 56,
                "id": "address",
                "lineno": 56,
                "node_id": 316,
                "src": "1302:7:6"
              },
              "arg": "_owner",
              "ast_type": "arg",
              "col_offset": 14,
              "end_col_offset": 29,
              "end_lineno": 56,
              "lineno": 56,
              "node_id": 315,
              "src": "1294:15:6"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 14,
          "default": null,
          "defaults": [],
          "end_col_offset": 29,
          "end_lineno": 56,
          "lineno": 56,
          "node_id": 314,
          "src": "1294:15:6"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 62,
            "lineno": 62,
            "node_id": 320,
            "src": "1481:28:6",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 32,
              "end_lineno": 62,
              "lineno": 62,
              "node_id": 321,
              "slice": {
                "ast_type": "Index",
                "col_offset": 11,
                "end_col_offset": 32,
                "end_lineno": 62,
                "lineno": 62,
                "node_id": 329,
                "src": "1488:21:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 31,
                  "end_lineno": 62,
                  "id": "_owner",
                  "lineno": 62,
                  "node_id": 326,
                  "src": "1502:6:6"
                }
              },
              "src": "1488:21:6",
              "value": {
                "ast_type": "Attribute",
                "attr": "balances",
                "col_offset": 11,
                "end_col_offset": 24,
                "end_lineno": 62,
                "lineno": 62,
                "node_id": 322,
                "src": "1488:13:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 15,
                  "end_lineno": 62,
                  "id": "self",
                  "lineno": 62,
                  "node_id": 323,
                  "src": "1488:4:6"
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 54,
            "id": "view",
            "lineno": 54,
            "node_id": 330,
            "src": "1265:4:6"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 55,
            "id": "external",
            "lineno": 55,
            "node_id": 332,
            "src": "1271:8:6"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 61,
          "lineno": 57,
          "node_id": 336,
          "src": "1327:149:6",
          "value": "\n    @notice Getter to check the current balance of an address\n    @param _owner Address to query the balance of\n    @return Token balance\n    "
        },
        "end_col_offset": 32,
        "end_lineno": 62,
        "lineno": 56,
        "name": "balanceOf",
        "node_id": 313,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 34,
          "end_col_offset": 41,
          "end_lineno": 56,
          "id": "uint256",
          "lineno": 56,
          "node_id": 334,
          "src": "1314:7:6"
        },
        "src": "1280:229:6"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 67,
                "id": "address",
                "lineno": 67,
                "node_id": 340,
                "src": "1551:7:6"
              },
              "arg": "_owner",
              "ast_type": "arg",
              "col_offset": 14,
              "end_col_offset": 30,
              "end_lineno": 67,
              "lineno": 67,
              "node_id": 339,
              "src": "1542:16:6"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 43,
                "end_col_offset": 50,
                "end_lineno": 67,
                "id": "address",
                "lineno": 67,
                "node_id": 343,
                "src": "1571:7:6"
              },
              "arg": "_spender",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 50,
              "end_lineno": 67,
              "lineno": 67,
              "node_id": 342,
              "src": "1560:18:6"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 14,
          "default": null,
          "defaults": [],
          "end_col_offset": 50,
          "end_lineno": 67,
          "lineno": 67,
          "node_id": 338,
          "src": "1542:36:6"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 44,
            "end_lineno": 74,
            "lineno": 74,
            "node_id": 347,
            "src": "1871:40:6",
            "value": {
              "ast_type": "Subscript",
              "col_offset": 11,
              "end_col_offset": 44,
              "end_lineno": 74,
              "lineno": 74,
              "node_id": 348,
              "slice": {
                "ast_type": "Index",
                "col_offset": 11,
                "end_col_offset": 44,
                "end_lineno": 74,
                "lineno": 74,
                "node_id": 361,
                "src": "1878:33:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 35,
                  "end_col_offset": 43,
                  "end_lineno": 74,
                  "id": "_spender",
                  "lineno": 74,
                  "node_id": 358,
                  "src": "1902:8:6"
                }
              },
              "src": "1878:33:6",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 34,
                "end_lineno": 74,
                "lineno": 74,
                "node_id": 349,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 34,
                  "end_lineno": 74,
                  "lineno": 74,
                  "node_id": 357,
                  "src": "1878:23:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 27,
                    "end_col_offset": 33,
                    "end_lineno": 74,
                    "id": "_owner",
                    "lineno": 74,
                    "node_id": 354,
                    "src": "1894:6:6"
                  }
                },
                "src": "1878:23:6",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowances",
                  "col_offset": 11,
                  "end_col_offset": 26,
                  "end_lineno": 74,
                  "lineno": 74,
                  "node_id": 350,
                  "src": "1878:15:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 74,
                    "id": "self",
                    "lineno": 74,
                    "node_id": 351,
                    "src": "1878:4:6"
                  }
                }
              }
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 5,
            "end_lineno": 65,
            "id": "view",
            "lineno": 65,
            "node_id": 362,
            "src": "1513:4:6"
          },
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 66,
            "id": "external",
            "lineno": 66,
            "node_id": 364,
            "src": "1519:8:6"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 73,
          "lineno": 68,
          "node_id": 368,
          "src": "1596:270:6",
          "value": "\n    @notice Getter to check the amount of tokens that an owner allowed to a spender\n    @param _owner The address which owns the funds\n    @param _spender The address which will spend the funds\n    @return The amount of tokens still available for the spender\n    "
        },
        "end_col_offset": 44,
        "end_lineno": 74,
        "lineno": 67,
        "name": "allowance",
        "node_id": 337,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 55,
          "end_col_offset": 62,
          "end_lineno": 67,
          "id": "uint256",
          "lineno": 67,
          "node_id": 366,
          "src": "1583:7:6"
        },
        "src": "1528:383:6"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 23,
                "end_col_offset": 30,
                "end_lineno": 78,
                "id": "address",
                "lineno": 78,
                "node_id": 372,
                "src": "1947:7:6"
              },
              "arg": "_spender",
              "ast_type": "arg",
              "col_offset": 12,
              "end_col_offset": 30,
              "end_lineno": 78,
              "lineno": 78,
              "node_id": 371,
              "src": "1936:18:6"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 41,
                "end_col_offset": 48,
                "end_lineno": 78,
                "id": "uint256",
                "lineno": 78,
                "node_id": 375,
                "src": "1965:7:6"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 32,
              "end_col_offset": 48,
              "end_lineno": 78,
              "lineno": 78,
              "node_id": 374,
              "src": "1956:16:6"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 12,
          "default": null,
          "defaults": [],
          "end_col_offset": 48,
          "end_lineno": 78,
          "lineno": 78,
          "node_id": 370,
          "src": "1936:36:6"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 50,
            "end_lineno": 89,
            "lineno": 89,
            "node_id": 379,
            "src": "2640:46:6",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 41,
              "end_lineno": 89,
              "lineno": 89,
              "node_id": 380,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 41,
                "end_lineno": 89,
                "lineno": 89,
                "node_id": 395,
                "src": "2640:37:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 32,
                  "end_col_offset": 40,
                  "end_lineno": 89,
                  "id": "_spender",
                  "lineno": 89,
                  "node_id": 392,
                  "src": "2668:8:6"
                }
              },
              "src": "2640:37:6",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 31,
                "end_lineno": 89,
                "lineno": 89,
                "node_id": 381,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 4,
                  "end_col_offset": 31,
                  "end_lineno": 89,
                  "lineno": 89,
                  "node_id": 391,
                  "src": "2640:27:6",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "sender",
                    "col_offset": 20,
                    "end_col_offset": 30,
                    "end_lineno": 89,
                    "lineno": 89,
                    "node_id": 386,
                    "src": "2656:10:6",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 20,
                      "end_col_offset": 23,
                      "end_lineno": 89,
                      "id": "msg",
                      "lineno": 89,
                      "node_id": 387,
                      "src": "2656:3:6"
                    }
                  }
                },
                "src": "2640:27:6",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowances",
                  "col_offset": 4,
                  "end_col_offset": 19,
                  "end_lineno": 89,
                  "lineno": 89,
                  "node_id": 382,
                  "src": "2640:15:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 89,
                    "id": "self",
                    "lineno": 89,
                    "node_id": 383,
                    "src": "2640:4:6"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 44,
              "end_col_offset": 50,
              "end_lineno": 89,
              "id": "_value",
              "lineno": 89,
              "node_id": 396,
              "src": "2680:6:6"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 46,
            "end_lineno": 90,
            "lineno": 90,
            "node_id": 399,
            "src": "2691:42:6",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 17,
                  "end_col_offset": 27,
                  "end_lineno": 90,
                  "lineno": 90,
                  "node_id": 403,
                  "src": "2704:10:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 20,
                    "end_lineno": 90,
                    "id": "msg",
                    "lineno": 90,
                    "node_id": 404,
                    "src": "2704:3:6"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 37,
                  "end_lineno": 90,
                  "id": "_spender",
                  "lineno": 90,
                  "node_id": 407,
                  "src": "2716:8:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 39,
                  "end_col_offset": 45,
                  "end_lineno": 90,
                  "id": "_value",
                  "lineno": 90,
                  "node_id": 409,
                  "src": "2726:6:6"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 46,
              "end_lineno": 90,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 90,
                "id": "Approval",
                "lineno": 90,
                "node_id": 401,
                "src": "2695:8:6"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 90,
              "node_id": 400,
              "src": "2695:38:6"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 91,
            "lineno": 91,
            "node_id": 411,
            "src": "2738:11:6",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 91,
              "lineno": 91,
              "node_id": 412,
              "src": "2745:4:6",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 77,
            "id": "external",
            "lineno": 77,
            "node_id": 413,
            "src": "1915:8:6"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 88,
          "lineno": 79,
          "node_id": 417,
          "src": "1987:648:6",
          "value": "\n    @notice Approve an address to spend the specified amount of tokens on behalf of msg.sender\n    @dev Beware that changing an allowance with this method brings the risk that someone may use both the old\n         and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n         race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n         https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param _spender The address which will spend the funds.\n    @param _value The amount of tokens to be spent.\n    @return Success boolean\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 91,
        "lineno": 78,
        "name": "approve",
        "node_id": 369,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 53,
          "end_col_offset": 57,
          "end_lineno": 78,
          "id": "bool",
          "lineno": 78,
          "node_id": 415,
          "src": "1977:4:6"
        },
        "src": "1924:825:6"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 21,
                "end_col_offset": 28,
                "end_lineno": 95,
                "id": "address",
                "lineno": 95,
                "node_id": 421,
                "src": "2783:7:6"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 14,
              "end_col_offset": 28,
              "end_lineno": 95,
              "lineno": 95,
              "node_id": 420,
              "src": "2776:14:6"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 35,
                "end_col_offset": 42,
                "end_lineno": 95,
                "id": "address",
                "lineno": 95,
                "node_id": 424,
                "src": "2797:7:6"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 30,
              "end_col_offset": 42,
              "end_lineno": 95,
              "lineno": 95,
              "node_id": 423,
              "src": "2792:12:6"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 52,
                "end_col_offset": 59,
                "end_lineno": 95,
                "id": "uint256",
                "lineno": 95,
                "node_id": 427,
                "src": "2814:7:6"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 44,
              "end_col_offset": 59,
              "end_lineno": 95,
              "lineno": 95,
              "node_id": 426,
              "src": "2806:15:6"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 14,
          "default": null,
          "defaults": [],
          "end_col_offset": 59,
          "end_lineno": 95,
          "lineno": 95,
          "node_id": 419,
          "src": "2776:45:6"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 65,
            "end_lineno": 99,
            "lineno": 99,
            "msg": {
              "ast_type": "Str",
              "col_offset": 43,
              "end_col_offset": 65,
              "end_lineno": 99,
              "lineno": 99,
              "node_id": 445,
              "src": "2944:22:6",
              "value": "Insufficient balance"
            },
            "node_id": 431,
            "src": "2905:61:6",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 41,
              "end_lineno": 99,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 31,
                "end_lineno": 99,
                "lineno": 99,
                "node_id": 433,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 31,
                  "end_lineno": 99,
                  "lineno": 99,
                  "node_id": 441,
                  "src": "2912:20:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 25,
                    "end_col_offset": 30,
                    "end_lineno": 99,
                    "id": "_from",
                    "lineno": 99,
                    "node_id": 438,
                    "src": "2926:5:6"
                  }
                },
                "src": "2912:20:6",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "balances",
                  "col_offset": 11,
                  "end_col_offset": 24,
                  "end_lineno": 99,
                  "lineno": 99,
                  "node_id": 434,
                  "src": "2912:13:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 11,
                    "end_col_offset": 15,
                    "end_lineno": 99,
                    "id": "self",
                    "lineno": 99,
                    "node_id": 435,
                    "src": "2912:4:6"
                  }
                }
              },
              "lineno": 99,
              "node_id": 432,
              "op": {
                "ast_type": "GtE",
                "col_offset": 11,
                "end_col_offset": 41,
                "end_lineno": 99,
                "lineno": 99,
                "node_id": 548,
                "src": "2912:30:6"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 35,
                "end_col_offset": 41,
                "end_lineno": 99,
                "id": "_value",
                "lineno": 99,
                "node_id": 443,
                "src": "2936:6:6"
              },
              "src": "2912:30:6"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 100,
            "lineno": 100,
            "node_id": 446,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 34,
              "end_lineno": 100,
              "lineno": 100,
              "node_id": 693,
              "src": "2971:30:6"
            },
            "src": "2971:30:6",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 24,
              "end_lineno": 100,
              "lineno": 100,
              "node_id": 447,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 24,
                "end_lineno": 100,
                "lineno": 100,
                "node_id": 455,
                "src": "2971:20:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 23,
                  "end_lineno": 100,
                  "id": "_from",
                  "lineno": 100,
                  "node_id": 452,
                  "src": "2985:5:6"
                }
              },
              "src": "2971:20:6",
              "value": {
                "ast_type": "Attribute",
                "attr": "balances",
                "col_offset": 4,
                "end_col_offset": 17,
                "end_lineno": 100,
                "lineno": 100,
                "node_id": 448,
                "src": "2971:13:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 100,
                  "id": "self",
                  "lineno": 100,
                  "node_id": 449,
                  "src": "2971:4:6"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 28,
              "end_col_offset": 34,
              "end_lineno": 100,
              "id": "_value",
              "lineno": 100,
              "node_id": 457,
              "src": "2995:6:6"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 101,
            "lineno": 101,
            "node_id": 459,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 32,
              "end_lineno": 101,
              "lineno": 101,
              "node_id": 630,
              "src": "3006:28:6"
            },
            "src": "3006:28:6",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 22,
              "end_lineno": 101,
              "lineno": 101,
              "node_id": 460,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 22,
                "end_lineno": 101,
                "lineno": 101,
                "node_id": 468,
                "src": "3006:18:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 21,
                  "end_lineno": 101,
                  "id": "_to",
                  "lineno": 101,
                  "node_id": 465,
                  "src": "3020:3:6"
                }
              },
              "src": "3006:18:6",
              "value": {
                "ast_type": "Attribute",
                "attr": "balances",
                "col_offset": 4,
                "end_col_offset": 17,
                "end_lineno": 101,
                "lineno": 101,
                "node_id": 461,
                "src": "3006:13:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 101,
                  "id": "self",
                  "lineno": 101,
                  "node_id": 462,
                  "src": "3006:4:6"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 26,
              "end_col_offset": 32,
              "end_lineno": 101,
              "id": "_value",
              "lineno": 101,
              "node_id": 470,
              "src": "3028:6:6"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 36,
            "end_lineno": 102,
            "lineno": 102,
            "node_id": 473,
            "src": "3039:32:6",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 22,
                  "end_lineno": 102,
                  "id": "_from",
                  "lineno": 102,
                  "node_id": 477,
                  "src": "3052:5:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 24,
                  "end_col_offset": 27,
                  "end_lineno": 102,
                  "id": "_to",
                  "lineno": 102,
                  "node_id": 479,
                  "src": "3059:3:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 29,
                  "end_col_offset": 35,
                  "end_lineno": 102,
                  "id": "_value",
                  "lineno": 102,
                  "node_id": 481,
                  "src": "3064:6:6"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 36,
              "end_lineno": 102,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 102,
                "id": "Transfer",
                "lineno": 102,
                "node_id": 475,
                "src": "3043:8:6"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 102,
              "node_id": 474,
              "src": "3043:28:6"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 94,
            "id": "internal",
            "lineno": 94,
            "node_id": 483,
            "src": "2753:8:6"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 98,
          "lineno": 96,
          "node_id": 485,
          "src": "2828:72:6",
          "value": "\n    @dev Internal shared logic for transfer and transferFrom\n    "
        },
        "end_col_offset": 36,
        "end_lineno": 102,
        "lineno": 95,
        "name": "_transfer",
        "node_id": 418,
        "pos": null,
        "returns": null,
        "src": "2762:309:6"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 19,
                "end_col_offset": 26,
                "end_lineno": 106,
                "id": "address",
                "lineno": 106,
                "node_id": 489,
                "src": "3103:7:6"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 26,
              "end_lineno": 106,
              "lineno": 106,
              "node_id": 488,
              "src": "3097:13:6"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 37,
                "end_col_offset": 44,
                "end_lineno": 106,
                "id": "uint256",
                "lineno": 106,
                "node_id": 492,
                "src": "3121:7:6"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 28,
              "end_col_offset": 44,
              "end_lineno": 106,
              "lineno": 106,
              "node_id": 491,
              "src": "3112:16:6"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 44,
          "end_lineno": 106,
          "lineno": 106,
          "node_id": 487,
          "src": "3097:31:6"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 43,
            "end_lineno": 115,
            "lineno": 115,
            "node_id": 496,
            "src": "3448:39:6",
            "value": {
              "args": [
                {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 19,
                  "end_col_offset": 29,
                  "end_lineno": 115,
                  "lineno": 115,
                  "node_id": 502,
                  "src": "3463:10:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 19,
                    "end_col_offset": 22,
                    "end_lineno": 115,
                    "id": "msg",
                    "lineno": 115,
                    "node_id": 503,
                    "src": "3463:3:6"
                  }
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 34,
                  "end_lineno": 115,
                  "id": "_to",
                  "lineno": 115,
                  "node_id": 506,
                  "src": "3475:3:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 36,
                  "end_col_offset": 42,
                  "end_lineno": 115,
                  "id": "_value",
                  "lineno": 115,
                  "node_id": 508,
                  "src": "3480:6:6"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 43,
              "end_lineno": 115,
              "func": {
                "ast_type": "Attribute",
                "attr": "_transfer",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 115,
                "lineno": 115,
                "node_id": 498,
                "src": "3448:14:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 115,
                  "id": "self",
                  "lineno": 115,
                  "node_id": 499,
                  "src": "3448:4:6"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 115,
              "node_id": 497,
              "src": "3448:39:6"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 116,
            "lineno": 116,
            "node_id": 510,
            "src": "3492:11:6",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 116,
              "lineno": 116,
              "node_id": 511,
              "src": "3499:4:6",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 105,
            "id": "external",
            "lineno": 105,
            "node_id": 512,
            "src": "3075:8:6"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 114,
          "lineno": 107,
          "node_id": 516,
          "src": "3143:300:6",
          "value": "\n    @notice Transfer tokens to a specified address\n    @dev Vyper does not allow underflows, so attempting to transfer more\n         tokens than an account has will revert\n    @param _to The address to transfer to\n    @param _value The amount to be transferred\n    @return Success boolean\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 116,
        "lineno": 106,
        "name": "transfer",
        "node_id": 486,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 49,
          "end_col_offset": 53,
          "end_lineno": 106,
          "id": "bool",
          "lineno": 106,
          "node_id": 514,
          "src": "3133:4:6"
        },
        "src": "3084:419:6"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 25,
                "end_col_offset": 32,
                "end_lineno": 120,
                "id": "address",
                "lineno": 120,
                "node_id": 520,
                "src": "3541:7:6"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 17,
              "end_col_offset": 32,
              "end_lineno": 120,
              "lineno": 120,
              "node_id": 519,
              "src": "3533:15:6"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 40,
                "end_col_offset": 47,
                "end_lineno": 120,
                "id": "address",
                "lineno": 120,
                "node_id": 523,
                "src": "3556:7:6"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 34,
              "end_col_offset": 47,
              "end_lineno": 120,
              "lineno": 120,
              "node_id": 522,
              "src": "3550:13:6"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 58,
                "end_col_offset": 65,
                "end_lineno": 120,
                "id": "uint256",
                "lineno": 120,
                "node_id": 526,
                "src": "3574:7:6"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 49,
              "end_col_offset": 65,
              "end_lineno": 120,
              "lineno": 120,
              "node_id": 525,
              "src": "3565:16:6"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 17,
          "default": null,
          "defaults": [],
          "end_col_offset": 65,
          "end_lineno": 120,
          "lineno": 120,
          "node_id": 518,
          "src": "3533:48:6"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 81,
            "end_lineno": 130,
            "lineno": 130,
            "msg": {
              "ast_type": "Str",
              "col_offset": 57,
              "end_col_offset": 81,
              "end_lineno": 130,
              "lineno": 130,
              "node_id": 551,
              "src": "4048:24:6",
              "value": "Insufficient allowance"
            },
            "node_id": 530,
            "src": "3995:77:6",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 55,
              "end_lineno": 130,
              "left": {
                "ast_type": "Subscript",
                "col_offset": 11,
                "end_col_offset": 45,
                "end_lineno": 130,
                "lineno": 130,
                "node_id": 532,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 11,
                  "end_col_offset": 45,
                  "end_lineno": 130,
                  "lineno": 130,
                  "node_id": 547,
                  "src": "4002:34:6",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "sender",
                    "col_offset": 34,
                    "end_col_offset": 44,
                    "end_lineno": 130,
                    "lineno": 130,
                    "node_id": 542,
                    "src": "4025:10:6",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 34,
                      "end_col_offset": 37,
                      "end_lineno": 130,
                      "id": "msg",
                      "lineno": 130,
                      "node_id": 543,
                      "src": "4025:3:6"
                    }
                  }
                },
                "src": "4002:34:6",
                "value": {
                  "ast_type": "Subscript",
                  "col_offset": 11,
                  "end_col_offset": 33,
                  "end_lineno": 130,
                  "lineno": 130,
                  "node_id": 533,
                  "slice": {
                    "ast_type": "Index",
                    "col_offset": 11,
                    "end_col_offset": 33,
                    "end_lineno": 130,
                    "lineno": 130,
                    "node_id": 541,
                    "src": "4002:22:6",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 27,
                      "end_col_offset": 32,
                      "end_lineno": 130,
                      "id": "_from",
                      "lineno": 130,
                      "node_id": 538,
                      "src": "4018:5:6"
                    }
                  },
                  "src": "4002:22:6",
                  "value": {
                    "ast_type": "Attribute",
                    "attr": "allowances",
                    "col_offset": 11,
                    "end_col_offset": 26,
                    "end_lineno": 130,
                    "lineno": 130,
                    "node_id": 534,
                    "src": "4002:15:6",
                    "value": {
                      "ast_type": "Name",
                      "col_offset": 11,
                      "end_col_offset": 15,
                      "end_lineno": 130,
                      "id": "self",
                      "lineno": 130,
                      "node_id": 535,
                      "src": "4002:4:6"
                    }
                  }
                }
              },
              "lineno": 130,
              "node_id": 531,
              "op": {
                "ast_type": "GtE",
                "col_offset": 11,
                "end_col_offset": 55,
                "end_lineno": 130,
                "lineno": 130,
                "node_id": 548,
                "src": "4002:44:6"
              },
              "right": {
                "ast_type": "Name",
                "col_offset": 49,
                "end_col_offset": 55,
                "end_lineno": 130,
                "id": "_value",
                "lineno": 130,
                "node_id": 549,
                "src": "4040:6:6"
              },
              "src": "4002:44:6"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 48,
            "end_lineno": 131,
            "lineno": 131,
            "node_id": 552,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 48,
              "end_lineno": 131,
              "lineno": 131,
              "node_id": 693,
              "src": "4077:44:6"
            },
            "src": "4077:44:6",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 38,
              "end_lineno": 131,
              "lineno": 131,
              "node_id": 553,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 38,
                "end_lineno": 131,
                "lineno": 131,
                "node_id": 568,
                "src": "4077:34:6",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "sender",
                  "col_offset": 27,
                  "end_col_offset": 37,
                  "end_lineno": 131,
                  "lineno": 131,
                  "node_id": 563,
                  "src": "4100:10:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 27,
                    "end_col_offset": 30,
                    "end_lineno": 131,
                    "id": "msg",
                    "lineno": 131,
                    "node_id": 564,
                    "src": "4100:3:6"
                  }
                }
              },
              "src": "4077:34:6",
              "value": {
                "ast_type": "Subscript",
                "col_offset": 4,
                "end_col_offset": 26,
                "end_lineno": 131,
                "lineno": 131,
                "node_id": 554,
                "slice": {
                  "ast_type": "Index",
                  "col_offset": 4,
                  "end_col_offset": 26,
                  "end_lineno": 131,
                  "lineno": 131,
                  "node_id": 562,
                  "src": "4077:22:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 20,
                    "end_col_offset": 25,
                    "end_lineno": 131,
                    "id": "_from",
                    "lineno": 131,
                    "node_id": 559,
                    "src": "4093:5:6"
                  }
                },
                "src": "4077:22:6",
                "value": {
                  "ast_type": "Attribute",
                  "attr": "allowances",
                  "col_offset": 4,
                  "end_col_offset": 19,
                  "end_lineno": 131,
                  "lineno": 131,
                  "node_id": 555,
                  "src": "4077:15:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 4,
                    "end_col_offset": 8,
                    "end_lineno": 131,
                    "id": "self",
                    "lineno": 131,
                    "node_id": 556,
                    "src": "4077:4:6"
                  }
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 42,
              "end_col_offset": 48,
              "end_lineno": 131,
              "id": "_value",
              "lineno": 131,
              "node_id": 570,
              "src": "4115:6:6"
            }
          },
          {
            "ast_type": "Expr",
            "col_offset": 4,
            "end_col_offset": 38,
            "end_lineno": 132,
            "lineno": 132,
            "node_id": 572,
            "src": "4126:34:6",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 19,
                  "end_col_offset": 24,
                  "end_lineno": 132,
                  "id": "_from",
                  "lineno": 132,
                  "node_id": 578,
                  "src": "4141:5:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 26,
                  "end_col_offset": 29,
                  "end_lineno": 132,
                  "id": "_to",
                  "lineno": 132,
                  "node_id": 580,
                  "src": "4148:3:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 31,
                  "end_col_offset": 37,
                  "end_lineno": 132,
                  "id": "_value",
                  "lineno": 132,
                  "node_id": 582,
                  "src": "4153:6:6"
                }
              ],
              "ast_type": "Call",
              "col_offset": 4,
              "end_col_offset": 38,
              "end_lineno": 132,
              "func": {
                "ast_type": "Attribute",
                "attr": "_transfer",
                "col_offset": 4,
                "end_col_offset": 18,
                "end_lineno": 132,
                "lineno": 132,
                "node_id": 574,
                "src": "4126:14:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 132,
                  "id": "self",
                  "lineno": 132,
                  "node_id": 575,
                  "src": "4126:4:6"
                }
              },
              "keyword": null,
              "keywords": [],
              "lineno": 132,
              "node_id": 573,
              "src": "4126:34:6"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 133,
            "lineno": 133,
            "node_id": 584,
            "src": "4165:11:6",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 133,
              "lineno": 133,
              "node_id": 585,
              "src": "4172:4:6",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 119,
            "id": "external",
            "lineno": 119,
            "node_id": 586,
            "src": "3507:8:6"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 129,
          "lineno": 121,
          "node_id": 590,
          "src": "3596:394:6",
          "value": "\n    @notice Transfer tokens from one address to another\n    @dev Vyper does not allow underflows, so attempting to transfer more\n         tokens than an account has will revert\n    @param _from The address which you want to send tokens from\n    @param _to The address which you want to transfer to\n    @param _value The amount of tokens to be transferred\n    @return Success boolean\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 133,
        "lineno": 120,
        "name": "transferFrom",
        "node_id": 517,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 70,
          "end_col_offset": 74,
          "end_lineno": 120,
          "id": "bool",
          "lineno": 120,
          "node_id": 588,
          "src": "3586:4:6"
        },
        "src": "3516:660:6"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 16,
                "end_col_offset": 23,
                "end_lineno": 137,
                "id": "address",
                "lineno": 137,
                "node_id": 594,
                "src": "4209:7:6"
              },
              "arg": "_to",
              "ast_type": "arg",
              "col_offset": 11,
              "end_col_offset": 23,
              "end_lineno": 137,
              "lineno": 137,
              "node_id": 593,
              "src": "4204:12:6"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 33,
                "end_col_offset": 40,
                "end_lineno": 137,
                "id": "uint256",
                "lineno": 137,
                "node_id": 597,
                "src": "4226:7:6"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 25,
              "end_col_offset": 40,
              "end_lineno": 137,
              "lineno": 137,
              "node_id": 596,
              "src": "4218:15:6"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 11,
          "default": null,
          "defaults": [],
          "end_col_offset": 40,
          "end_lineno": 137,
          "lineno": 137,
          "node_id": 592,
          "src": "4204:29:6"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 38,
            "end_lineno": 145,
            "lineno": 145,
            "msg": null,
            "node_id": 601,
            "src": "4432:34:6",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 38,
              "end_lineno": 145,
              "left": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 145,
                "lineno": 145,
                "node_id": 603,
                "src": "4439:10:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 145,
                  "id": "msg",
                  "lineno": 145,
                  "node_id": 604,
                  "src": "4439:3:6"
                }
              },
              "lineno": 145,
              "node_id": 602,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 38,
                "end_lineno": 145,
                "lineno": 145,
                "node_id": 752,
                "src": "4439:27:6"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "deployer",
                "col_offset": 25,
                "end_col_offset": 38,
                "end_lineno": 145,
                "lineno": 145,
                "node_id": 608,
                "src": "4453:13:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 29,
                  "end_lineno": 145,
                  "id": "self",
                  "lineno": 145,
                  "node_id": 609,
                  "src": "4453:4:6"
                }
              },
              "src": "4439:27:6"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 147,
            "lineno": 147,
            "node_id": 612,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 147,
              "lineno": 147,
              "node_id": 630,
              "src": "4491:26:6"
            },
            "src": "4491:26:6",
            "target": {
              "ast_type": "Attribute",
              "attr": "totalSupply",
              "col_offset": 4,
              "end_col_offset": 20,
              "end_lineno": 147,
              "lineno": 147,
              "node_id": 613,
              "src": "4491:16:6",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 147,
                "id": "self",
                "lineno": 147,
                "node_id": 614,
                "src": "4491:4:6"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 30,
              "end_lineno": 147,
              "id": "_value",
              "lineno": 147,
              "node_id": 618,
              "src": "4511:6:6"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 32,
            "end_lineno": 148,
            "lineno": 148,
            "node_id": 620,
            "op": {
              "ast_type": "Add",
              "col_offset": 4,
              "end_col_offset": 32,
              "end_lineno": 148,
              "lineno": 148,
              "node_id": 630,
              "src": "4522:28:6"
            },
            "src": "4522:28:6",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 22,
              "end_lineno": 148,
              "lineno": 148,
              "node_id": 621,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 22,
                "end_lineno": 148,
                "lineno": 148,
                "node_id": 629,
                "src": "4522:18:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 21,
                  "end_lineno": 148,
                  "id": "_to",
                  "lineno": 148,
                  "node_id": 626,
                  "src": "4536:3:6"
                }
              },
              "src": "4522:18:6",
              "value": {
                "ast_type": "Attribute",
                "attr": "balances",
                "col_offset": 4,
                "end_col_offset": 17,
                "end_lineno": 148,
                "lineno": 148,
                "node_id": 622,
                "src": "4522:13:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 148,
                  "id": "self",
                  "lineno": 148,
                  "node_id": 623,
                  "src": "4522:4:6"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 26,
              "end_col_offset": 32,
              "end_lineno": 148,
              "id": "_value",
              "lineno": 148,
              "node_id": 631,
              "src": "4544:6:6"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 45,
            "end_lineno": 150,
            "lineno": 150,
            "node_id": 634,
            "src": "4574:41:6",
            "value": {
              "args": [
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 23,
                      "end_col_offset": 30,
                      "end_lineno": 150,
                      "id": "address",
                      "lineno": 150,
                      "node_id": 641,
                      "src": "4593:7:6"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 17,
                  "end_col_offset": 31,
                  "end_lineno": 150,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 17,
                    "end_col_offset": 22,
                    "end_lineno": 150,
                    "id": "empty",
                    "lineno": 150,
                    "node_id": 639,
                    "src": "4587:5:6"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 150,
                  "node_id": 638,
                  "src": "4587:14:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 33,
                  "end_col_offset": 36,
                  "end_lineno": 150,
                  "id": "_to",
                  "lineno": 150,
                  "node_id": 643,
                  "src": "4603:3:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 38,
                  "end_col_offset": 44,
                  "end_lineno": 150,
                  "id": "_value",
                  "lineno": 150,
                  "node_id": 645,
                  "src": "4608:6:6"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 45,
              "end_lineno": 150,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 150,
                "id": "Transfer",
                "lineno": 150,
                "node_id": 636,
                "src": "4578:8:6"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 150,
              "node_id": 635,
              "src": "4578:37:6"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 152,
            "lineno": 152,
            "node_id": 647,
            "src": "4641:11:6",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 152,
              "lineno": 152,
              "node_id": 648,
              "src": "4648:4:6",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 136,
            "id": "external",
            "lineno": 136,
            "node_id": 649,
            "src": "4184:8:6"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 143,
          "lineno": 138,
          "node_id": 653,
          "src": "4248:162:6",
          "value": "\n    @notice Mint tokens to an address\n    @param _to The address to mint to\n    @param _value The amount of tokens to mint\n    @return Success boolean\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 152,
        "lineno": 137,
        "name": "mintTo",
        "node_id": 591,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 45,
          "end_col_offset": 49,
          "end_lineno": 137,
          "id": "bool",
          "lineno": 137,
          "node_id": 651,
          "src": "4238:4:6"
        },
        "src": "4193:459:6"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 20,
                "end_col_offset": 27,
                "end_lineno": 156,
                "id": "address",
                "lineno": 156,
                "node_id": 657,
                "src": "4685:7:6"
              },
              "arg": "_from",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 27,
              "end_lineno": 156,
              "lineno": 156,
              "node_id": 656,
              "src": "4678:14:6"
            },
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 37,
                "end_col_offset": 44,
                "end_lineno": 156,
                "id": "uint256",
                "lineno": 156,
                "node_id": 660,
                "src": "4702:7:6"
              },
              "arg": "_value",
              "ast_type": "arg",
              "col_offset": 29,
              "end_col_offset": 44,
              "end_lineno": 156,
              "lineno": 156,
              "node_id": 659,
              "src": "4694:15:6"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 44,
          "end_lineno": 156,
          "lineno": 156,
          "node_id": 655,
          "src": "4678:31:6"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 38,
            "end_lineno": 164,
            "lineno": 164,
            "msg": null,
            "node_id": 664,
            "src": "4914:34:6",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 38,
              "end_lineno": 164,
              "left": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 164,
                "lineno": 164,
                "node_id": 666,
                "src": "4921:10:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 164,
                  "id": "msg",
                  "lineno": 164,
                  "node_id": 667,
                  "src": "4921:3:6"
                }
              },
              "lineno": 164,
              "node_id": 665,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 38,
                "end_lineno": 164,
                "lineno": 164,
                "node_id": 752,
                "src": "4921:27:6"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "deployer",
                "col_offset": 25,
                "end_col_offset": 38,
                "end_lineno": 164,
                "lineno": 164,
                "node_id": 671,
                "src": "4935:13:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 29,
                  "end_lineno": 164,
                  "id": "self",
                  "lineno": 164,
                  "node_id": 672,
                  "src": "4935:4:6"
                }
              },
              "src": "4921:27:6"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 30,
            "end_lineno": 166,
            "lineno": 166,
            "node_id": 675,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 30,
              "end_lineno": 166,
              "lineno": 166,
              "node_id": 693,
              "src": "4973:26:6"
            },
            "src": "4973:26:6",
            "target": {
              "ast_type": "Attribute",
              "attr": "totalSupply",
              "col_offset": 4,
              "end_col_offset": 20,
              "end_lineno": 166,
              "lineno": 166,
              "node_id": 676,
              "src": "4973:16:6",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 166,
                "id": "self",
                "lineno": 166,
                "node_id": 677,
                "src": "4973:4:6"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 24,
              "end_col_offset": 30,
              "end_lineno": 166,
              "id": "_value",
              "lineno": 166,
              "node_id": 681,
              "src": "4993:6:6"
            }
          },
          {
            "ast_type": "AugAssign",
            "col_offset": 4,
            "end_col_offset": 34,
            "end_lineno": 167,
            "lineno": 167,
            "node_id": 683,
            "op": {
              "ast_type": "Sub",
              "col_offset": 4,
              "end_col_offset": 34,
              "end_lineno": 167,
              "lineno": 167,
              "node_id": 693,
              "src": "5004:30:6"
            },
            "src": "5004:30:6",
            "target": {
              "ast_type": "Subscript",
              "col_offset": 4,
              "end_col_offset": 24,
              "end_lineno": 167,
              "lineno": 167,
              "node_id": 684,
              "slice": {
                "ast_type": "Index",
                "col_offset": 4,
                "end_col_offset": 24,
                "end_lineno": 167,
                "lineno": 167,
                "node_id": 692,
                "src": "5004:20:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 18,
                  "end_col_offset": 23,
                  "end_lineno": 167,
                  "id": "_from",
                  "lineno": 167,
                  "node_id": 689,
                  "src": "5018:5:6"
                }
              },
              "src": "5004:20:6",
              "value": {
                "ast_type": "Attribute",
                "attr": "balances",
                "col_offset": 4,
                "end_col_offset": 17,
                "end_lineno": 167,
                "lineno": 167,
                "node_id": 685,
                "src": "5004:13:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 4,
                  "end_col_offset": 8,
                  "end_lineno": 167,
                  "id": "self",
                  "lineno": 167,
                  "node_id": 686,
                  "src": "5004:4:6"
                }
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 28,
              "end_col_offset": 34,
              "end_lineno": 167,
              "id": "_value",
              "lineno": 167,
              "node_id": 694,
              "src": "5028:6:6"
            }
          },
          {
            "ast_type": "Log",
            "col_offset": 4,
            "end_col_offset": 47,
            "end_lineno": 169,
            "lineno": 169,
            "node_id": 697,
            "src": "5058:43:6",
            "value": {
              "args": [
                {
                  "ast_type": "Name",
                  "col_offset": 17,
                  "end_col_offset": 22,
                  "end_lineno": 169,
                  "id": "_from",
                  "lineno": 169,
                  "node_id": 701,
                  "src": "5071:5:6"
                },
                {
                  "args": [
                    {
                      "ast_type": "Name",
                      "col_offset": 30,
                      "end_col_offset": 37,
                      "end_lineno": 169,
                      "id": "address",
                      "lineno": 169,
                      "node_id": 706,
                      "src": "5084:7:6"
                    }
                  ],
                  "ast_type": "Call",
                  "col_offset": 24,
                  "end_col_offset": 38,
                  "end_lineno": 169,
                  "func": {
                    "ast_type": "Name",
                    "col_offset": 24,
                    "end_col_offset": 29,
                    "end_lineno": 169,
                    "id": "empty",
                    "lineno": 169,
                    "node_id": 704,
                    "src": "5078:5:6"
                  },
                  "keyword": null,
                  "keywords": [],
                  "lineno": 169,
                  "node_id": 703,
                  "src": "5078:14:6"
                },
                {
                  "ast_type": "Name",
                  "col_offset": 40,
                  "end_col_offset": 46,
                  "end_lineno": 169,
                  "id": "_value",
                  "lineno": 169,
                  "node_id": 708,
                  "src": "5094:6:6"
                }
              ],
              "ast_type": "Call",
              "col_offset": 8,
              "end_col_offset": 47,
              "end_lineno": 169,
              "func": {
                "ast_type": "Name",
                "col_offset": 8,
                "end_col_offset": 16,
                "end_lineno": 169,
                "id": "Transfer",
                "lineno": 169,
                "node_id": 699,
                "src": "5062:8:6"
              },
              "keyword": null,
              "keywords": [],
              "lineno": 169,
              "node_id": 698,
              "src": "5062:39:6"
            }
          },
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 15,
            "end_lineno": 171,
            "lineno": 171,
            "node_id": 710,
            "src": "5127:11:6",
            "value": {
              "ast_type": "NameConstant",
              "col_offset": 11,
              "end_col_offset": 15,
              "end_lineno": 171,
              "lineno": 171,
              "node_id": 711,
              "src": "5134:4:6",
              "value": true
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 155,
            "id": "external",
            "lineno": 155,
            "node_id": 712,
            "src": "4656:8:6"
          }
        ],
        "doc_string": {
          "ast_type": "DocStr",
          "col_offset": 4,
          "end_col_offset": 7,
          "end_lineno": 162,
          "lineno": 157,
          "node_id": 716,
          "src": "4724:168:6",
          "value": "\n    @notice Burn tokens from an address\n    @param _from The address to burn from\n    @param _value The amount of tokens to burn\n    @return Success boolean\n    "
        },
        "end_col_offset": 15,
        "end_lineno": 171,
        "lineno": 156,
        "name": "burnFrom",
        "node_id": 654,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 49,
          "end_col_offset": 53,
          "end_lineno": 156,
          "id": "bool",
          "lineno": 156,
          "node_id": 714,
          "src": "4714:4:6"
        },
        "src": "4665:473:6"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 29,
                "end_col_offset": 36,
                "end_lineno": 175,
                "id": "uint256",
                "lineno": 175,
                "node_id": 720,
                "src": "5180:7:6"
              },
              "arg": "_amount",
              "ast_type": "arg",
              "col_offset": 20,
              "end_col_offset": 36,
              "end_lineno": 175,
              "lineno": 175,
              "node_id": 719,
              "src": "5171:16:6"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 20,
          "default": null,
          "defaults": [],
          "end_col_offset": 36,
          "end_lineno": 175,
          "lineno": 175,
          "node_id": 718,
          "src": "5171:16:6"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Return",
            "col_offset": 4,
            "end_col_offset": 42,
            "end_lineno": 176,
            "lineno": 176,
            "node_id": 722,
            "src": "5205:38:6",
            "value": {
              "ast_type": "BinOp",
              "col_offset": 11,
              "end_col_offset": 42,
              "end_lineno": 176,
              "left": {
                "ast_type": "BinOp",
                "col_offset": 11,
                "end_col_offset": 31,
                "end_lineno": 176,
                "left": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 18,
                  "end_lineno": 176,
                  "id": "_amount",
                  "lineno": 176,
                  "node_id": 725,
                  "src": "5212:7:6"
                },
                "lineno": 176,
                "node_id": 724,
                "op": {
                  "ast_type": "Mult",
                  "col_offset": 11,
                  "end_col_offset": 31,
                  "end_lineno": 176,
                  "lineno": 176,
                  "node_id": 727,
                  "src": "5212:20:6"
                },
                "right": {
                  "ast_type": "Attribute",
                  "attr": "price",
                  "col_offset": 21,
                  "end_col_offset": 31,
                  "end_lineno": 176,
                  "lineno": 176,
                  "node_id": 728,
                  "src": "5222:10:6",
                  "value": {
                    "ast_type": "Name",
                    "col_offset": 21,
                    "end_col_offset": 25,
                    "end_lineno": 176,
                    "id": "self",
                    "lineno": 176,
                    "node_id": 729,
                    "src": "5222:4:6"
                  }
                },
                "src": "5212:20:6"
              },
              "lineno": 176,
              "node_id": 723,
              "op": {
                "ast_type": "Div",
                "col_offset": 11,
                "end_col_offset": 42,
                "end_lineno": 176,
                "lineno": 176,
                "node_id": 732,
                "src": "5212:31:6"
              },
              "right": {
                "ast_type": "BinOp",
                "col_offset": 34,
                "end_col_offset": 42,
                "end_lineno": 176,
                "left": {
                  "ast_type": "Int",
                  "col_offset": 34,
                  "end_col_offset": 36,
                  "end_lineno": 176,
                  "lineno": 176,
                  "node_id": 734,
                  "src": "5235:2:6",
                  "value": 10
                },
                "lineno": 176,
                "node_id": 733,
                "op": {
                  "ast_type": "Pow",
                  "col_offset": 34,
                  "end_col_offset": 42,
                  "end_lineno": 176,
                  "lineno": 176,
                  "node_id": 735,
                  "src": "5235:8:6"
                },
                "right": {
                  "ast_type": "Int",
                  "col_offset": 40,
                  "end_col_offset": 42,
                  "end_lineno": 176,
                  "lineno": 176,
                  "node_id": 736,
                  "src": "5241:2:6",
                  "value": 18
                },
                "src": "5235:8:6"
              },
              "src": "5212:31:6"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 174,
            "id": "external",
            "lineno": 174,
            "node_id": 737,
            "src": "5142:8:6"
          }
        ],
        "doc_string": null,
        "end_col_offset": 42,
        "end_lineno": 176,
        "lineno": 175,
        "name": "convertToAssets",
        "node_id": 717,
        "pos": null,
        "returns": {
          "ast_type": "Name",
          "col_offset": 41,
          "end_col_offset": 48,
          "end_lineno": 175,
          "id": "uint256",
          "lineno": 175,
          "node_id": 739,
          "src": "5192:7:6"
        },
        "src": "5151:92:6"
      },
      {
        "args": {
          "args": [
            {
              "annotation": {
                "ast_type": "Name",
                "col_offset": 21,
                "end_col_offset": 28,
                "end_lineno": 180,
                "id": "uint256",
                "lineno": 180,
                "node_id": 744,
                "src": "5277:7:6"
              },
              "arg": "_price",
              "ast_type": "arg",
              "col_offset": 13,
              "end_col_offset": 28,
              "end_lineno": 180,
              "lineno": 180,
              "node_id": 743,
              "src": "5269:15:6"
            }
          ],
          "ast_type": "arguments",
          "col_offset": 13,
          "default": null,
          "defaults": [],
          "end_col_offset": 28,
          "end_lineno": 180,
          "lineno": 180,
          "node_id": 742,
          "src": "5269:15:6"
        },
        "ast_type": "FunctionDef",
        "body": [
          {
            "ast_type": "Assert",
            "col_offset": 4,
            "end_col_offset": 38,
            "end_lineno": 181,
            "lineno": 181,
            "msg": null,
            "node_id": 746,
            "src": "5291:34:6",
            "test": {
              "ast_type": "Compare",
              "col_offset": 11,
              "end_col_offset": 38,
              "end_lineno": 181,
              "left": {
                "ast_type": "Attribute",
                "attr": "sender",
                "col_offset": 11,
                "end_col_offset": 21,
                "end_lineno": 181,
                "lineno": 181,
                "node_id": 748,
                "src": "5298:10:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 11,
                  "end_col_offset": 14,
                  "end_lineno": 181,
                  "id": "msg",
                  "lineno": 181,
                  "node_id": 749,
                  "src": "5298:3:6"
                }
              },
              "lineno": 181,
              "node_id": 747,
              "op": {
                "ast_type": "Eq",
                "col_offset": 11,
                "end_col_offset": 38,
                "end_lineno": 181,
                "lineno": 181,
                "node_id": 752,
                "src": "5298:27:6"
              },
              "right": {
                "ast_type": "Attribute",
                "attr": "deployer",
                "col_offset": 25,
                "end_col_offset": 38,
                "end_lineno": 181,
                "lineno": 181,
                "node_id": 753,
                "src": "5312:13:6",
                "value": {
                  "ast_type": "Name",
                  "col_offset": 25,
                  "end_col_offset": 29,
                  "end_lineno": 181,
                  "id": "self",
                  "lineno": 181,
                  "node_id": 754,
                  "src": "5312:4:6"
                }
              },
              "src": "5298:27:6"
            }
          },
          {
            "ast_type": "Assign",
            "col_offset": 4,
            "end_col_offset": 23,
            "end_lineno": 182,
            "lineno": 182,
            "node_id": 757,
            "src": "5330:19:6",
            "target": {
              "ast_type": "Attribute",
              "attr": "price",
              "col_offset": 4,
              "end_col_offset": 14,
              "end_lineno": 182,
              "lineno": 182,
              "node_id": 758,
              "src": "5330:10:6",
              "value": {
                "ast_type": "Name",
                "col_offset": 4,
                "end_col_offset": 8,
                "end_lineno": 182,
                "id": "self",
                "lineno": 182,
                "node_id": 759,
                "src": "5330:4:6"
              }
            },
            "value": {
              "ast_type": "Name",
              "col_offset": 17,
              "end_col_offset": 23,
              "end_lineno": 182,
              "id": "_price",
              "lineno": 182,
              "node_id": 762,
              "src": "5343:6:6"
            }
          }
        ],
        "col_offset": 0,
        "decorator_list": [
          {
            "ast_type": "Name",
            "col_offset": 1,
            "end_col_offset": 9,
            "end_lineno": 179,
            "id": "external",
            "lineno": 179,
            "node_id": 764,
            "src": "5247:8:6"
          }
        ],
        "doc_string": null,
        "end_col_offset": 23,
        "end_lineno": 182,
        "lineno": 180,
        "name": "setPrice",
        "node_id": 741,
        "pos": null,
        "returns": null,
        "src": "5256:93:6"
      }
    ],
    "col_offset": 0,
    "doc_string": {
      "ast_type": "DocStr",
      "col_offset": 0,
      "end_col_offset": 3,
      "end_lineno": 7,
      "lineno": 3,
      "node_id": 766,
      "src": "19:147:6",
      "value": "\n@title Mintable Token implementation\n@notice Based on the ERC-20 token standard as defined at\n        https://eips.ethereum.org/EIPS/eip-20\n"
    },
    "end_col_offset": 23,
    "end_lineno": 182,
    "lineno": 1,
    "name": "contracts/tests/TestYearnToken.vy",
    "node_id": 0,
    "src": "0:5349:6"
  },
  "bytecode": "0x60206109126000396000516040602082610912016000396000511161090d5760208161091201600039600051806040526020820181816109120160603950505060206109326000396000516020602082610912016000396000511161090d57602081610912016000396000518060a052602082016020816109120160003960005160c0525050503461090d5760405180600055600081601f0160051c6002811161090d5780156100c357905b8060051b6060015181600101556001018181186100ab575b50505060a0518060035560c05160045550670de0b6b3a7640000600555602061095260003960005160065560206109726000396000516009336020526000526040600020556020610972600039600051600755336008553360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602061097260003960005160e052602060e0a36107a9610163610000396107a9610000f36003361161000c5761069a565b60003560e01c34610797576370a0823181186100525760243610610797576004358060a01c61079757604052600960405160205260005260406000205460605260206060f35b63dd62ed3e81186100b35760443610610797576004358060a01c610797576040526024358060a01c61079757606052670de0b6b3a76403f5604051602052600052604060002080606051602052600052604060002090505460805260206080f35b63095ea7b381186101395760443610610797576004358060a01c61079757604052602435670de0b6b3a76403f5336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b63a9059cbb811861017f5760443610610797576004358060a01c6107975760e0523360405260e0516060526024356080526101726106a0565b6001610100526020610100f35b6323b872dd81186102a75760643610610797576004358060a01c6107975760e0526024358060a01c6107975761010052604435670de0b6b3a76403f560e0516020526000526040600020803360205260005260406000209050541015610243576016610120527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006101405261012050610120518061014001601f826000031636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b670de0b6b3a76403f560e05160205260005260406000208033602052600052604060002090508054604435808203828111610797579050905081555060e0516040526101005160605260443560805261029a6106a0565b6001610120526020610120f35b63449a52f8811861034a5760443610610797576004358060a01c610797576040526008543318610797576007546024358082018281106107975790509050600755600960405160205260005260406000208054602435808201828110610797579050905081555060405160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b6379cc679081186103ed5760443610610797576004358060a01c610797576040526008543318610797576007546024358082038281116107975790509050600755600960405160205260005260406000208054602435808203828111610797579050905081555060006040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b6307a2d13a81186104305760243610610797576004356005548082028115838383041417156107975790509050670de0b6b3a76400008104905060405260206040f35b6391b7f5ed8118610454576024361061079757600854331861079757600435600555005b6306fdde0381186104d95760043610610797576020806040528060400160005480825260208201600082601f0160051c600281116107975780156104ab57905b80600101548160051b840152600101818118610494575b505050508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6395d89b4181186105315760043610610797576020806040528060400160035480825260208201600454815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b63a035b1fe811861055057600436106107975760055460405260206040f35b63313ce567811861056f57600436106107975760065460405260206040f35b6318160ddd811861058e57600436106107975760075460405260206040f35b63d5f3948881186105ad57600436106107975760085460405260206040f35b631ff0a02381186105da576024361061079757600435600a5481101561079757600b015460405260206040f35b63f585b9b08118610615576024361061079757600435670de0b6b3a764000a5481101561079757670de0b6b3a764000b015460405260206040f35b6326204c3d81186106575760243610610797576004358060a01c61079757604052670de0b6b3a76403f360405160205260005260406000205460605260206060f35b6293728581186106985760243610610797576004358060a01c61079757604052670de0b6b3a76403f460405160205260005260406000205460605260206060f35b505b60006000fd5b6080516009604051602052600052604060002054101561071757601460a0527f496e73756666696369656e742062616c616e636500000000000000000000000060c05260a05060a0518060c001601f826000031636823750506308c379a06060526020608052601f19601f60a0510116604401607cfd5b600960405160205260005260406000208054608051808203828111610797579050905081555060096060516020526000526040600020805460805180820182811061079757905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160a052602060a0a3565b600080fda165767970657283000307000b005b600080fd",
  "bytecodeSha1": "f5687624c9aa9866174afde629156122712a72c2",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.3.7"
  },
  "contractName": "TestYearnToken",
  "coverageMap": {
    "branches": {
      "0": {
        "TestYearnToken._transfer": {
          "29": [
            2905,
            2966,
            true
          ]
        },
        "TestYearnToken.burnFrom": {
          "19": [
            4914,
            4948,
            true
          ]
        },
        "TestYearnToken.mintTo": {
          "13": [
            4432,
            4466,
            true
          ]
        },
        "TestYearnToken.setPrice": {
          "26": [
            5291,
            5325,
            true
          ]
        },
        "TestYearnToken.transferFrom": {
          "9": [
            3995,
            4072,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "TestYearnToken._transfer": {
          "28": [
            2905,
            2966
          ],
          "30": [
            2971,
            3001
          ],
          "31": [
            3006,
            3034
          ],
          "32": [
            3039,
            3071
          ]
        },
        "TestYearnToken.allowance": {
          "1": [
            1871,
            1911
          ]
        },
        "TestYearnToken.approve": {
          "2": [
            2691,
            2733
          ],
          "3": [
            2640,
            2686
          ],
          "4": [
            2738,
            2749
          ]
        },
        "TestYearnToken.balanceOf": {
          "0": [
            1481,
            1509
          ]
        },
        "TestYearnToken.burnFrom": {
          "18": [
            4914,
            4948
          ],
          "20": [
            4973,
            4999
          ],
          "21": [
            5058,
            5101
          ],
          "22": [
            5004,
            5034
          ],
          "23": [
            5127,
            5138
          ]
        },
        "TestYearnToken.convertToAssets": {
          "24": [
            5205,
            5243
          ]
        },
        "TestYearnToken.mintTo": {
          "12": [
            4432,
            4466
          ],
          "14": [
            4491,
            4517
          ],
          "15": [
            4574,
            4615
          ],
          "16": [
            4522,
            4550
          ],
          "17": [
            4641,
            4652
          ]
        },
        "TestYearnToken.setPrice": {
          "25": [
            5291,
            5325
          ],
          "27": [
            5330,
            5349
          ]
        },
        "TestYearnToken.transfer": {
          "5": [
            3448,
            3487
          ],
          "6": [
            3492,
            3503
          ]
        },
        "TestYearnToken.transferFrom": {
          "7": [
            4126,
            4160
          ],
          "8": [
            3995,
            4072
          ],
          "10": [
            4077,
            4121
          ],
          "11": [
            4165,
            4176
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "0x6003361161000c5761069a565b60003560e01c34610797576370a0823181186100525760243610610797576004358060a01c61079757604052600960405160205260005260406000205460605260206060f35b63dd62ed3e81186100b35760443610610797576004358060a01c610797576040526024358060a01c61079757606052670de0b6b3a76403f5604051602052600052604060002080606051602052600052604060002090505460805260206080f35b63095ea7b381186101395760443610610797576004358060a01c61079757604052602435670de0b6b3a76403f5336020526000526040600020806040516020526000526040600020905055604051337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560243560605260206060a3600160605260206060f35b63a9059cbb811861017f5760443610610797576004358060a01c6107975760e0523360405260e0516060526024356080526101726106a0565b6001610100526020610100f35b6323b872dd81186102a75760643610610797576004358060a01c6107975760e0526024358060a01c6107975761010052604435670de0b6b3a76403f560e0516020526000526040600020803360205260005260406000209050541015610243576016610120527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006101405261012050610120518061014001601f826000031636823750506308c379a060e052602061010052601f19601f61012051011660440160fcfd5b670de0b6b3a76403f560e05160205260005260406000208033602052600052604060002090508054604435808203828111610797579050905081555060e0516040526101005160605260443560805261029a6106a0565b6001610120526020610120f35b63449a52f8811861034a5760443610610797576004358060a01c610797576040526008543318610797576007546024358082018281106107975790509050600755600960405160205260005260406000208054602435808201828110610797579050905081555060405160007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b6379cc679081186103ed5760443610610797576004358060a01c610797576040526008543318610797576007546024358082038281116107975790509050600755600960405160205260005260406000208054602435808203828111610797579050905081555060006040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60243560605260206060a3600160605260206060f35b6307a2d13a81186104305760243610610797576004356005548082028115838383041417156107975790509050670de0b6b3a76400008104905060405260206040f35b6391b7f5ed8118610454576024361061079757600854331861079757600435600555005b6306fdde0381186104d95760043610610797576020806040528060400160005480825260208201600082601f0160051c600281116107975780156104ab57905b80600101548160051b840152600101818118610494575b505050508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b6395d89b4181186105315760043610610797576020806040528060400160035480825260208201600454815250508051806020830101601f82600003163682375050601f19601f825160200101169050810190506040f35b63a035b1fe811861055057600436106107975760055460405260206040f35b63313ce567811861056f57600436106107975760065460405260206040f35b6318160ddd811861058e57600436106107975760075460405260206040f35b63d5f3948881186105ad57600436106107975760085460405260206040f35b631ff0a02381186105da576024361061079757600435600a5481101561079757600b015460405260206040f35b63f585b9b08118610615576024361061079757600435670de0b6b3a764000a5481101561079757670de0b6b3a764000b015460405260206040f35b6326204c3d81186106575760243610610797576004358060a01c61079757604052670de0b6b3a76403f360405160205260005260406000205460605260206060f35b6293728581186106985760243610610797576004358060a01c61079757604052670de0b6b3a76403f460405160205260005260406000205460605260206060f35b505b60006000fd5b6080516009604051602052600052604060002054101561071757601460a0527f496e73756666696369656e742062616c616e636500000000000000000000000060c05260a05060a0518060c001601f826000031636823750506308c379a06060526020608052601f19601f60a0510116604401607cfd5b600960405160205260005260406000208054608051808203828111610797579050905081555060096060516020526000526040600020805460805180820182811061079757905090508155506060516040517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60805160a052602060a0a3565b600080fda165767970657283000307000b",
  "deployedSourceMap": "-1:-1:6:-;;;;:::-;;:::-;:::-;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;1294:15;;1488:13;1502:6;-1:-1;1488:21;;;;;;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;1542:16;;-1:-1;;;;;;:::-;1560:18;;1878:15;1894:6;-1:-1;1878:23;;;;;;;-1:-1;1902:8;-1:-1;;;;;;;;1878:33;;-1:-1;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;1936:18;;2726:6;-1:-1;2640:15;2656:10;2640:27;;;;;;;-1:-1;2668:8;-1:-1;;;;;;;;2640:37;;:46;2716:8;2691:42;2704:10;2691:42;2726:6;-1:-1;;;;2691:42;;2745:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;3097:13;;3463:10;-1:-1;;3475:3;-1:-1;;;3480:6;-1:-1;;;;3448:39;:::i;:::-;3499:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;3533:15;;-1:-1;;;;;;:::-;3550:13;;4153:6;4002:44;:15;4018:5;-1:-1;4002:22;;;;;;;-1:-1;4025:10;-1:-1;;;;;;;4002:34;;:44;-1:-1;3995:77;;:::-;-1:-1;;4048:24;-1:-1;;4048:24;;3995:77;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3995:77::-;4077:15;4093:5;-1:-1;4077:22;;;;;;;-1:-1;4100:10;-1:-1;;;;;;;4077:34;;:44;;4153:6;-1:-1;;4077:44;-1:-1;4077:44;-1:-1;;;:::-;4077:44;;;;;-1:-1;4077:44;4141:5;-1:-1;;;4148:3;-1:-1;;;4153:6;-1:-1;;;;4126:34;:::i;:::-;4172:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;4204:12;;4453:13;4439:27;:10;:27;4432:34;:::-;4491:16;:26;4608:6;-1:-1;;4491:26;-1:-1;4491:26;-1:-1;;;:::-;4491:26;;;;:16;:26;4522:13;4536:3;-1:-1;4522:18;;;;;;;:28;;4608:6;-1:-1;;4522:28;-1:-1;4522:28;-1:-1;;;:::-;4522:28;;;;;-1:-1;4522:28;4603:3;4574:41;;;4608:6;-1:-1;;;;4574:41;;4648:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;4678:14;;4935:13;4921:27;:10;:27;4914:34;:::-;4973:16;:26;5094:6;-1:-1;;4973:26;-1:-1;4973:26;-1:-1;;;:::-;4973:26;;;;:16;:26;5004:13;5018:5;-1:-1;5004:20;;;;;;;:30;;5094:6;-1:-1;;5004:30;-1:-1;5004:30;-1:-1;;;:::-;5004:30;;;;;-1:-1;5004:30;5058:43;5071:5;5058:43;;5094:6;-1:-1;;;;5058:43;;5134:4;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;5212:7;:20;5222:10;-1:-1;;5212:20;-1:-1;;;5212:20;-1:-1;;;;;;;:::-;5212:20;;;;5235:8;5212:31;-1:-1;5212:31;;-1:-1;;;;;:::-;;;;;:::-;;;;;:::-;5312:13;5298:27;:10;:27;5291:34;:::-;5343:6;-1:-1;5330:10;:19;-1:-1;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;:::-;;:::-;;;;;;;;;;;;;;;;;:::-;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;:::-;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;;;:::-;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;;;;;;;;;;;;;;;;:::-;;;;;:::-;;;;;:::-;;;;;;;:::-;;;;;;;;;;;;;;;;;;;:::-;;:::-;;;;2762:309::-;2936:6;-1:-1;2912:13;2926:5;-1:-1;2912:20;;;;;;;-1:-1;;2905:61;;:::-;-1:-1;;2944:22;-1:-1;;2944:22;;2905:61;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2905:61::-;2971:13;2985:5;-1:-1;2971:20;;;;;;;-1:-1;;2995:6;-1:-1;;;;;;;;:::-;;;2971:30;;-1:-1;;2971:30;3006:13;3020:3;-1:-1;3006:18;;;;;;;-1:-1;;3028:6;-1:-1;;;;;;;;:::-;;;3006:28;;-1:-1;;3006:28;3059:3;3039:32;3052:5;3039:32;;3064:6;-1:-1;;;;3039:32;;-1:-1::-;:::-;;;",
  "language": "Vyper",
  "natspec": {
    "methods": {
      "allowance(address,address)": {
        "notice": "Getter to check the amount of tokens that an owner allowed to a spender",
        "params": {
          "_owner": "The address which owns the funds",
          "_spender": "The address which will spend the funds"
        },
        "returns": {
          "_0": "The amount of tokens still available for the spender"
        }
      },
      "approve(address,uint256)": {
        "details": "Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "notice": "Approve an address to spend the specified amount of tokens on behalf of msg.sender",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        },
        "returns": {
          "_0": "Success boolean"
        }
      },
      "balanceOf(address)": {
        "notice": "Getter to check the current balance of an address",
        "params": {
          "_owner": "Address to query the balance of"
        },
        "returns": {
          "_0": "Token balance"
        }
      },
      "burnFrom(address,uint256)": {
        "notice": "Burn tokens from an address",
        "params": {
          "_from": "The address to burn from",
          "_value": "The amount of tokens to burn"
        },
        "returns": {
          "_0": "Success boolean"
        }
      },
      "mintTo(address,uint256)": {
        "notice": "Mint tokens to an address",
        "params": {
          "_to": "The address to mint to",
          "_value": "The amount of tokens to mint"
        },
        "returns": {
          "_0": "Success boolean"
        }
      },
      "transfer(address,uint256)": {
        "details": "Vyper does not allow underflows, so attempting to transfer more tokens than an account has will revert",
        "notice": "Transfer tokens to a specified address",
        "params": {
          "_to": "The address to transfer to",
          "_value": "The amount to be transferred"
        },
        "returns": {
          "_0": "Success boolean"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Vyper does not allow underflows, so attempting to transfer more tokens than an account has will revert",
        "notice": "Transfer tokens from one address to another",
        "params": {
          "_from": "The address which you want to send tokens from",
          "_to": "The address which you want to transfer to",
          "_value": "The amount of tokens to be transferred"
        },
        "returns": {
          "_0": "Success boolean"
        }
      }
    },
    "notice": "Based on the ERC-20 token standard as defined at https://eips.ethereum.org/EIPS/eip-20",
    "title": "Mintable Token implementation"
  },
  "offset": [
    0,
    5349
  ],
  "opcodes": "PUSH1 0x3 CALLDATASIZE GT PUSH2 0x0C JUMPI PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR CALLVALUE PUSH2 0x797 JUMPI PUSH4 0x70A08231 DUP2 XOR PUSH2 0x052 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x797 JUMPI PUSH1 0x40 MSTORE PUSH1 0x9 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0xDD62ED3E DUP2 XOR PUSH2 0x0B3 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x797 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x797 JUMPI PUSH1 0x60 MSTORE PUSH8 0xDE0B6B3A7643F5 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x80 RETURN JUMPDEST PUSH4 0x95EA7B3 DUP2 XOR PUSH2 0x139 JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x797 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 CALLDATALOAD PUSH8 0xDE0B6B3A7643F5 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SSTORE PUSH1 0x40 MLOAD CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 LOG3 PUSH1 0x1 PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0xA959CBB DUP2 XOR PUSH2 0x17F JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x797 JUMPI PUSH1 0xE0 MSTORE CALLER PUSH1 0x40 MSTORE PUSH1 0xE0 MLOAD PUSH1 0x60 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x80 MSTORE PUSH2 0x172 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x10 MSTORE PUSH1 0x20 PUSH2 0x10 RETURN JUMPDEST PUSH4 0x23B872DD DUP2 XOR PUSH2 0x2A7 JUMPI PUSH1 0x64 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x797 JUMPI PUSH1 0xE0 MSTORE PUSH1 0x24 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x797 JUMPI PUSH2 0x10 MSTORE PUSH1 0x44 CALLDATALOAD PUSH8 0xDE0B6B3A7643F5 PUSH1 0xE0 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP SLOAD LT ISZERO PUSH2 0x243 JUMPI PUSH1 0x16 PUSH2 0x120 MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F77616E63650000000000 PUSH2 0x140 MSTORE PUSH2 0x120 POP PUSH2 0x120 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH4 0x8C379A0 PUSH1 0xE0 MSTORE PUSH1 0x20 PUSH2 0x10 MSTORE PUSH1 0x1F NOT PUSH1 0x1F PUSH2 0x120 MLOAD ADD AND PUSH1 0x44 ADD PUSH1 0xFC REVERT JUMPDEST PUSH8 0xDE0B6B3A7643F5 PUSH1 0xE0 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 CALLER PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SWAP1 POP DUP1 SLOAD PUSH1 0x44 CALLDATALOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x797 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0xE0 MLOAD PUSH1 0x40 MSTORE PUSH2 0x10 MLOAD PUSH1 0x60 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 MSTORE PUSH2 0x29A PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x120 MSTORE PUSH1 0x20 PUSH2 0x120 RETURN JUMPDEST PUSH4 0x449A52F8 DUP2 XOR PUSH2 0x34A JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x797 JUMPI PUSH1 0x40 MSTORE PUSH1 0x8 SLOAD CALLER XOR PUSH2 0x797 JUMPI PUSH1 0x7 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 ADD DUP3 DUP2 LT PUSH2 0x797 JUMPI SWAP1 POP SWAP1 POP PUSH1 0x7 SSTORE PUSH1 0x9 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 ADD DUP3 DUP2 LT PUSH2 0x797 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x40 MLOAD PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 LOG3 PUSH1 0x1 PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0x79CC6790 DUP2 XOR PUSH2 0x3ED JUMPI PUSH1 0x44 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x797 JUMPI PUSH1 0x40 MSTORE PUSH1 0x8 SLOAD CALLER XOR PUSH2 0x797 JUMPI PUSH1 0x7 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x797 JUMPI SWAP1 POP SWAP1 POP PUSH1 0x7 SSTORE PUSH1 0x9 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x797 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x24 CALLDATALOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 LOG3 PUSH1 0x1 PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH4 0x7A2D13A DUP2 XOR PUSH2 0x430 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP1 DUP3 MUL DUP2 ISZERO DUP4 DUP4 DUP4 DIV EQ OR ISZERO PUSH2 0x797 JUMPI SWAP1 POP SWAP1 POP PUSH8 0xDE0B6B3A76400 DUP2 DIV SWAP1 POP PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x91B7F5ED DUP2 XOR PUSH2 0x454 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x8 SLOAD CALLER XOR PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SSTORE STOP JUMPDEST PUSH4 0x6FDDE3 DUP2 XOR PUSH2 0x4D9 JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 ADD PUSH1 0x0 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP3 PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x2 DUP2 GT PUSH2 0x797 JUMPI DUP1 ISZERO PUSH2 0x4AB JUMPI SWAP1 JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x5 SHL DUP5 ADD MSTORE PUSH1 0x1 ADD DUP2 DUP2 XOR PUSH2 0x494 JUMPI JUMPDEST POP POP POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST PUSH4 0x95D89B41 DUP2 XOR PUSH2 0x531 JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x20 DUP1 PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 ADD PUSH1 0x3 SLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x4 SLOAD DUP2 MSTORE POP POP DUP1 MLOAD DUP1 PUSH1 0x20 DUP4 ADD ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x1F NOT PUSH1 0x1F DUP3 MLOAD PUSH1 0x20 ADD ADD AND SWAP1 POP DUP2 ADD SWAP1 POP PUSH1 0x40 RETURN JUMPDEST PUSH4 0xA035B1FE DUP2 XOR PUSH2 0x550 JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x313CE567 DUP2 XOR PUSH2 0x56F JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x1816DDD DUP2 XOR PUSH2 0x58E JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0xD5F39488 DUP2 XOR PUSH2 0x5AD JUMPI PUSH1 0x4 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x1FF0A023 DUP2 XOR PUSH2 0x5DA JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x797 JUMPI PUSH1 0xB ADD SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0xF585B9B0 DUP2 XOR PUSH2 0x615 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xDE0B6B3A7640A SLOAD DUP2 LT ISZERO PUSH2 0x797 JUMPI PUSH8 0xDE0B6B3A7640B ADD SLOAD PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN JUMPDEST PUSH4 0x26204C3D DUP2 XOR PUSH2 0x657 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x797 JUMPI PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7643F3 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST PUSH3 0x937285 DUP2 XOR PUSH2 0x698 JUMPI PUSH1 0x24 CALLDATASIZE LT PUSH2 0x797 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0xA0 SHR PUSH2 0x797 JUMPI PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7643F4 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x60 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x9 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 SLOAD LT ISZERO PUSH2 0x717 JUMPI PUSH1 0x14 PUSH1 0xA0 MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000 PUSH1 0xC0 MSTORE PUSH1 0xA0 POP PUSH1 0xA0 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x1F DUP3 PUSH1 0x0 SUB AND CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH4 0x8C379A0 PUSH1 0x60 MSTORE PUSH1 0x20 PUSH1 0x80 MSTORE PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0xA0 MLOAD ADD AND PUSH1 0x44 ADD PUSH1 0x7C REVERT JUMPDEST PUSH1 0x9 PUSH1 0x40 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x80 MLOAD DUP1 DUP3 SUB DUP3 DUP2 GT PUSH2 0x797 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x9 PUSH1 0x60 MLOAD PUSH1 0x20 MSTORE PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 SHA3 DUP1 SLOAD PUSH1 0x80 MLOAD DUP1 DUP3 ADD DUP3 DUP2 LT PUSH2 0x797 JUMPI SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x60 MLOAD PUSH1 0x40 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x80 MLOAD PUSH1 0xA0 MSTORE PUSH1 0x20 PUSH1 0xA0 LOG3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT LOG1 PUSH6 0x767970657283 STOP SUB SMOD STOP SIGNEXTEND",
  "pcMap": {
    "0": {
      "offset": [
        0,
        5349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2": {
      "op": "CALLDATASIZE"
    },
    "3": {
      "op": "GT"
    },
    "4": {
      "op": "PUSH2",
      "value": "0x0C"
    },
    "7": {
      "op": "JUMPI"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x69A"
    },
    "11": {
      "op": "JUMP"
    },
    "12": {
      "op": "JUMPDEST"
    },
    "13": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "15": {
      "op": "CALLDATALOAD"
    },
    "16": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "18": {
      "op": "SHR"
    },
    "19": {
      "op": "CALLVALUE"
    },
    "20": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "23": {
      "op": "JUMPI"
    },
    "24": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "29": {
      "op": "DUP2"
    },
    "30": {
      "op": "XOR"
    },
    "31": {
      "op": "PUSH2",
      "value": "0x052"
    },
    "34": {
      "op": "JUMPI"
    },
    "35": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "37": {
      "op": "CALLDATASIZE"
    },
    "38": {
      "op": "LT"
    },
    "39": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "42": {
      "op": "JUMPI"
    },
    "43": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "45": {
      "op": "CALLDATALOAD"
    },
    "46": {
      "op": "DUP1"
    },
    "47": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "49": {
      "op": "SHR"
    },
    "50": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "53": {
      "op": "JUMPI"
    },
    "54": {
      "fn": "TestYearnToken.balanceOf",
      "offset": [
        1294,
        1309
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "56": {
      "fn": "TestYearnToken.balanceOf",
      "offset": [
        1294,
        1309
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "57": {
      "fn": "TestYearnToken.balanceOf",
      "offset": [
        1488,
        1501
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x9"
    },
    "59": {
      "fn": "TestYearnToken.balanceOf",
      "offset": [
        1502,
        1508
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "61": {
      "op": "MLOAD"
    },
    "62": {
      "fn": "TestYearnToken.balanceOf",
      "offset": [
        1488,
        1509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "64": {
      "fn": "TestYearnToken.balanceOf",
      "offset": [
        1488,
        1509
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "65": {
      "fn": "TestYearnToken.balanceOf",
      "offset": [
        1488,
        1509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "67": {
      "fn": "TestYearnToken.balanceOf",
      "offset": [
        1488,
        1509
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "68": {
      "fn": "TestYearnToken.balanceOf",
      "offset": [
        1488,
        1509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "70": {
      "fn": "TestYearnToken.balanceOf",
      "offset": [
        1488,
        1509
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "72": {
      "fn": "TestYearnToken.balanceOf",
      "offset": [
        1488,
        1509
      ],
      "op": "SHA3",
      "path": "0"
    },
    "73": {
      "op": "SLOAD"
    },
    "74": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "76": {
      "op": "MSTORE"
    },
    "77": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "79": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "81": {
      "op": "RETURN"
    },
    "82": {
      "op": "JUMPDEST"
    },
    "83": {
      "op": "PUSH4",
      "value": "0xDD62ED3E"
    },
    "88": {
      "op": "DUP2"
    },
    "89": {
      "op": "XOR"
    },
    "90": {
      "op": "PUSH2",
      "value": "0x0B3"
    },
    "93": {
      "op": "JUMPI"
    },
    "94": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "96": {
      "op": "CALLDATASIZE"
    },
    "97": {
      "op": "LT"
    },
    "98": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "101": {
      "op": "JUMPI"
    },
    "102": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "104": {
      "op": "CALLDATALOAD"
    },
    "105": {
      "op": "DUP1"
    },
    "106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "108": {
      "op": "SHR"
    },
    "109": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "112": {
      "op": "JUMPI"
    },
    "113": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1542,
        1558
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "115": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1542,
        1558
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "116": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "118": {
      "op": "CALLDATALOAD"
    },
    "119": {
      "op": "DUP1"
    },
    "120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "122": {
      "op": "SHR"
    },
    "123": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "126": {
      "op": "JUMPI"
    },
    "127": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1560,
        1578
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "129": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1560,
        1578
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "130": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1878,
        1893
      ],
      "op": "PUSH8",
      "path": "0",
      "statement": 1,
      "value": "0xDE0B6B3A7643F5"
    },
    "139": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1894,
        1900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "141": {
      "op": "MLOAD"
    },
    "142": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1878,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "144": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1878,
        1901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "145": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1878,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "147": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1878,
        1901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "148": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1878,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "150": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1878,
        1901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "152": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1878,
        1901
      ],
      "op": "SHA3",
      "path": "0"
    },
    "153": {
      "op": "DUP1"
    },
    "154": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1902,
        1910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "156": {
      "op": "MLOAD"
    },
    "157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "159": {
      "op": "MSTORE"
    },
    "160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "162": {
      "op": "MSTORE"
    },
    "163": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "167": {
      "op": "SHA3"
    },
    "168": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1878,
        1911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "169": {
      "fn": "TestYearnToken.allowance",
      "offset": [
        1878,
        1911
      ],
      "op": "POP",
      "path": "0"
    },
    "170": {
      "op": "SLOAD"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "173": {
      "op": "MSTORE"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "176": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "178": {
      "op": "RETURN"
    },
    "179": {
      "op": "JUMPDEST"
    },
    "180": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "185": {
      "op": "DUP2"
    },
    "186": {
      "op": "XOR"
    },
    "187": {
      "op": "PUSH2",
      "value": "0x139"
    },
    "190": {
      "op": "JUMPI"
    },
    "191": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "193": {
      "op": "CALLDATASIZE"
    },
    "194": {
      "op": "LT"
    },
    "195": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "198": {
      "op": "JUMPI"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "201": {
      "op": "CALLDATALOAD"
    },
    "202": {
      "op": "DUP1"
    },
    "203": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "205": {
      "op": "SHR"
    },
    "206": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "209": {
      "op": "JUMPI"
    },
    "210": {
      "fn": "TestYearnToken.approve",
      "offset": [
        1936,
        1954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "212": {
      "fn": "TestYearnToken.approve",
      "offset": [
        1936,
        1954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "213": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2726,
        2732
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x24"
    },
    "215": {
      "op": "CALLDATALOAD"
    },
    "216": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2640,
        2655
      ],
      "op": "PUSH8",
      "path": "0",
      "statement": 3,
      "value": "0xDE0B6B3A7643F5"
    },
    "225": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2656,
        2666
      ],
      "op": "CALLER",
      "path": "0"
    },
    "226": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "228": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2640,
        2667
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "229": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "231": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2640,
        2667
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "232": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "234": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2640,
        2667
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "236": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2640,
        2667
      ],
      "op": "SHA3",
      "path": "0"
    },
    "237": {
      "op": "DUP1"
    },
    "238": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2668,
        2676
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "240": {
      "op": "MLOAD"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "243": {
      "op": "MSTORE"
    },
    "244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "246": {
      "op": "MSTORE"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "251": {
      "op": "SHA3"
    },
    "252": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2640,
        2677
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "253": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2640,
        2677
      ],
      "op": "POP",
      "path": "0"
    },
    "254": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2640,
        2686
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "255": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2716,
        2724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "257": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2691,
        2733
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "258": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2704,
        2714
      ],
      "op": "CALLER",
      "path": "0"
    },
    "259": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2691,
        2733
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925"
    },
    "292": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2726,
        2732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "294": {
      "op": "CALLDATALOAD"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "297": {
      "op": "MSTORE"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "300": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2691,
        2733
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "302": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2691,
        2733
      ],
      "op": "LOG3",
      "path": "0"
    },
    "303": {
      "fn": "TestYearnToken.approve",
      "offset": [
        2745,
        2749
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x1"
    },
    "305": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "307": {
      "op": "MSTORE"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "312": {
      "op": "RETURN"
    },
    "313": {
      "op": "JUMPDEST"
    },
    "314": {
      "op": "PUSH4",
      "value": "0xA959CBB"
    },
    "319": {
      "op": "DUP2"
    },
    "320": {
      "op": "XOR"
    },
    "321": {
      "op": "PUSH2",
      "value": "0x17F"
    },
    "324": {
      "op": "JUMPI"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "327": {
      "op": "CALLDATASIZE"
    },
    "328": {
      "op": "LT"
    },
    "329": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "332": {
      "op": "JUMPI"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "335": {
      "op": "CALLDATALOAD"
    },
    "336": {
      "op": "DUP1"
    },
    "337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "339": {
      "op": "SHR"
    },
    "340": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "343": {
      "op": "JUMPI"
    },
    "344": {
      "fn": "TestYearnToken.transfer",
      "offset": [
        3097,
        3110
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "346": {
      "fn": "TestYearnToken.transfer",
      "offset": [
        3097,
        3110
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "347": {
      "fn": "TestYearnToken.transfer",
      "offset": [
        3463,
        3473
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 5
    },
    "348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "350": {
      "op": "MSTORE"
    },
    "351": {
      "fn": "TestYearnToken.transfer",
      "offset": [
        3475,
        3478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "353": {
      "op": "MLOAD"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "356": {
      "op": "MSTORE"
    },
    "357": {
      "fn": "TestYearnToken.transfer",
      "offset": [
        3480,
        3486
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "359": {
      "op": "CALLDATALOAD"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "362": {
      "op": "MSTORE"
    },
    "363": {
      "op": "PUSH2",
      "value": "0x172"
    },
    "366": {
      "fn": "TestYearnToken.transfer",
      "offset": [
        3448,
        3487
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A0"
    },
    "369": {
      "fn": "TestYearnToken.transfer",
      "jump": "i",
      "offset": [
        3448,
        3487
      ],
      "op": "JUMP",
      "path": "0"
    },
    "370": {
      "fn": "TestYearnToken.transfer",
      "offset": [
        3448,
        3487
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "371": {
      "fn": "TestYearnToken.transfer",
      "offset": [
        3499,
        3503
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "373": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "376": {
      "op": "MSTORE"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "379": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "382": {
      "op": "RETURN"
    },
    "383": {
      "op": "JUMPDEST"
    },
    "384": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "389": {
      "op": "DUP2"
    },
    "390": {
      "op": "XOR"
    },
    "391": {
      "op": "PUSH2",
      "value": "0x2A7"
    },
    "394": {
      "op": "JUMPI"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "397": {
      "op": "CALLDATASIZE"
    },
    "398": {
      "op": "LT"
    },
    "399": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "402": {
      "op": "JUMPI"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "405": {
      "op": "CALLDATALOAD"
    },
    "406": {
      "op": "DUP1"
    },
    "407": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "409": {
      "op": "SHR"
    },
    "410": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "413": {
      "op": "JUMPI"
    },
    "414": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        3533,
        3548
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "416": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        3533,
        3548
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "419": {
      "op": "CALLDATALOAD"
    },
    "420": {
      "op": "DUP1"
    },
    "421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "423": {
      "op": "SHR"
    },
    "424": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "427": {
      "op": "JUMPI"
    },
    "428": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        3550,
        3563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "431": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        3550,
        3563
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "432": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4153,
        4159
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x44"
    },
    "434": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4046
      ],
      "op": "CALLDATALOAD",
      "path": "0",
      "statement": 8
    },
    "435": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4017
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7643F5"
    },
    "444": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4018,
        4023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "446": {
      "op": "MLOAD"
    },
    "447": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "449": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4024
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "450": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "452": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4024
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "453": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "455": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "457": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4024
      ],
      "op": "SHA3",
      "path": "0"
    },
    "458": {
      "op": "DUP1"
    },
    "459": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4025,
        4035
      ],
      "op": "CALLER",
      "path": "0"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "462": {
      "op": "MSTORE"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "465": {
      "op": "MSTORE"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "470": {
      "op": "SHA3"
    },
    "471": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4036
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "472": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4036
      ],
      "op": "POP",
      "path": "0"
    },
    "473": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4002,
        4046
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "474": {
      "op": "LT"
    },
    "475": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        3995,
        4072
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "476": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        3995,
        4072
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243"
    },
    "479": {
      "branch": 9,
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        3995,
        4072
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "482": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "485": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4048,
        4072
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "486": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E7420616C6C6F77616E63650000000000"
    },
    "519": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "522": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4048,
        4072
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "523": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4048,
        4072
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "526": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        3995,
        4072
      ],
      "op": "POP",
      "path": "0"
    },
    "527": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "530": {
      "op": "MLOAD"
    },
    "531": {
      "op": "DUP1"
    },
    "532": {
      "op": "PUSH2",
      "value": "0x140"
    },
    "535": {
      "op": "ADD"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "538": {
      "op": "DUP3"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "541": {
      "op": "SUB"
    },
    "542": {
      "op": "AND"
    },
    "543": {
      "op": "CALLDATASIZE"
    },
    "544": {
      "op": "DUP3"
    },
    "545": {
      "op": "CALLDATACOPY"
    },
    "546": {
      "op": "POP"
    },
    "547": {
      "op": "POP"
    },
    "548": {
      "op": "PUSH4",
      "value": "0x8C379A0"
    },
    "553": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "555": {
      "op": "MSTORE"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "558": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "561": {
      "op": "MSTORE"
    },
    "562": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "564": {
      "op": "NOT"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "567": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "570": {
      "op": "MLOAD"
    },
    "571": {
      "op": "ADD"
    },
    "572": {
      "op": "AND"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "575": {
      "op": "ADD"
    },
    "576": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "578": {
      "op": "REVERT"
    },
    "579": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        3995,
        4072
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "580": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4092
      ],
      "op": "PUSH8",
      "path": "0",
      "statement": 10,
      "value": "0xDE0B6B3A7643F5"
    },
    "589": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4093,
        4098
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "591": {
      "op": "MLOAD"
    },
    "592": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "594": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4099
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "595": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "597": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4099
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "598": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "600": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4099
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "602": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4099
      ],
      "op": "SHA3",
      "path": "0"
    },
    "603": {
      "op": "DUP1"
    },
    "604": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4100,
        4110
      ],
      "op": "CALLER",
      "path": "0"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "607": {
      "op": "MSTORE"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "610": {
      "op": "MSTORE"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "615": {
      "op": "SHA3"
    },
    "616": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "617": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4111
      ],
      "op": "POP",
      "path": "0"
    },
    "618": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "619": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "620": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4153,
        4159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "622": {
      "op": "CALLDATALOAD"
    },
    "623": {
      "op": "DUP1"
    },
    "624": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "625": {
      "op": "SUB"
    },
    "626": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "627": {
      "op": "DUP2"
    },
    "628": {
      "op": "GT"
    },
    "629": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "632": {
      "op": "JUMPI"
    },
    "633": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "634": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4121
      ],
      "op": "POP",
      "path": "0"
    },
    "635": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "636": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4121
      ],
      "op": "POP",
      "path": "0"
    },
    "637": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4121
      ],
      "op": "DUP2",
      "path": "0"
    },
    "638": {
      "op": "SSTORE"
    },
    "639": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4077,
        4121
      ],
      "op": "POP",
      "path": "0"
    },
    "640": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4141,
        4146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "642": {
      "op": "MLOAD"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "645": {
      "op": "MSTORE"
    },
    "646": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4148,
        4151
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "649": {
      "op": "MLOAD"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4153,
        4159
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "655": {
      "op": "CALLDATALOAD"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "658": {
      "op": "MSTORE"
    },
    "659": {
      "op": "PUSH2",
      "value": "0x29A"
    },
    "662": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4126,
        4160
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A0"
    },
    "665": {
      "fn": "TestYearnToken.transferFrom",
      "jump": "i",
      "offset": [
        4126,
        4160
      ],
      "op": "JUMP",
      "path": "0"
    },
    "666": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4126,
        4160
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "667": {
      "fn": "TestYearnToken.transferFrom",
      "offset": [
        4172,
        4176
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x1"
    },
    "669": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "672": {
      "op": "MSTORE"
    },
    "673": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "675": {
      "op": "PUSH2",
      "value": "0x120"
    },
    "678": {
      "op": "RETURN"
    },
    "679": {
      "op": "JUMPDEST"
    },
    "680": {
      "op": "PUSH4",
      "value": "0x449A52F8"
    },
    "685": {
      "op": "DUP2"
    },
    "686": {
      "op": "XOR"
    },
    "687": {
      "op": "PUSH2",
      "value": "0x34A"
    },
    "690": {
      "op": "JUMPI"
    },
    "691": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "693": {
      "op": "CALLDATASIZE"
    },
    "694": {
      "op": "LT"
    },
    "695": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "698": {
      "op": "JUMPI"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "701": {
      "op": "CALLDATALOAD"
    },
    "702": {
      "op": "DUP1"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "705": {
      "op": "SHR"
    },
    "706": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "709": {
      "op": "JUMPI"
    },
    "710": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4204,
        4216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "712": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4204,
        4216
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "713": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4453,
        4466
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x8"
    },
    "715": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4439,
        4466
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "716": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4439,
        4449
      ],
      "op": "CALLER",
      "path": "0"
    },
    "717": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4439,
        4466
      ],
      "op": "XOR",
      "path": "0"
    },
    "718": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4432,
        4466
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x797"
    },
    "721": {
      "branch": 13,
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4432,
        4466
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "722": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4491,
        4507
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x7"
    },
    "724": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4491,
        4517
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "725": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4608,
        4614
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x24"
    },
    "727": {
      "op": "CALLDATALOAD"
    },
    "728": {
      "op": "DUP1"
    },
    "729": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4491,
        4517
      ],
      "op": "DUP3",
      "path": "0"
    },
    "730": {
      "op": "ADD"
    },
    "731": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4491,
        4517
      ],
      "op": "DUP3",
      "path": "0"
    },
    "732": {
      "op": "DUP2"
    },
    "733": {
      "op": "LT"
    },
    "734": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "737": {
      "op": "JUMPI"
    },
    "738": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4491,
        4517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "739": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4491,
        4517
      ],
      "op": "POP",
      "path": "0"
    },
    "740": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4491,
        4517
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "741": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4491,
        4517
      ],
      "op": "POP",
      "path": "0"
    },
    "742": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4491,
        4507
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "744": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4491,
        4517
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "745": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4535
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x9"
    },
    "747": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4536,
        4539
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "749": {
      "op": "MLOAD"
    },
    "750": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "752": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4540
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "753": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "755": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4540
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "756": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "758": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4540
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "760": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4540
      ],
      "op": "SHA3",
      "path": "0"
    },
    "761": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "762": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4550
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "763": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4608,
        4614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "765": {
      "op": "CALLDATALOAD"
    },
    "766": {
      "op": "DUP1"
    },
    "767": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4550
      ],
      "op": "DUP3",
      "path": "0"
    },
    "768": {
      "op": "ADD"
    },
    "769": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4550
      ],
      "op": "DUP3",
      "path": "0"
    },
    "770": {
      "op": "DUP2"
    },
    "771": {
      "op": "LT"
    },
    "772": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "775": {
      "op": "JUMPI"
    },
    "776": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4550
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "777": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4550
      ],
      "op": "POP",
      "path": "0"
    },
    "778": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4550
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "779": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4550
      ],
      "op": "POP",
      "path": "0"
    },
    "780": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "781": {
      "op": "SSTORE"
    },
    "782": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4522,
        4550
      ],
      "op": "POP",
      "path": "0"
    },
    "783": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4603,
        4606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "785": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4574,
        4615
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "786": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4574,
        4615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "788": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4574,
        4615
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "821": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4608,
        4614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "823": {
      "op": "CALLDATALOAD"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "826": {
      "op": "MSTORE"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "829": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4574,
        4615
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "831": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4574,
        4615
      ],
      "op": "LOG3",
      "path": "0"
    },
    "832": {
      "fn": "TestYearnToken.mintTo",
      "offset": [
        4648,
        4652
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x1"
    },
    "834": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "836": {
      "op": "MSTORE"
    },
    "837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "841": {
      "op": "RETURN"
    },
    "842": {
      "op": "JUMPDEST"
    },
    "843": {
      "op": "PUSH4",
      "value": "0x79CC6790"
    },
    "848": {
      "op": "DUP2"
    },
    "849": {
      "op": "XOR"
    },
    "850": {
      "op": "PUSH2",
      "value": "0x3ED"
    },
    "853": {
      "op": "JUMPI"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "856": {
      "op": "CALLDATASIZE"
    },
    "857": {
      "op": "LT"
    },
    "858": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "861": {
      "op": "JUMPI"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "864": {
      "op": "CALLDATALOAD"
    },
    "865": {
      "op": "DUP1"
    },
    "866": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "868": {
      "op": "SHR"
    },
    "869": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "872": {
      "op": "JUMPI"
    },
    "873": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4678,
        4692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "875": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4678,
        4692
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "876": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4935,
        4948
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x8"
    },
    "878": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4921,
        4948
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "879": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4921,
        4931
      ],
      "op": "CALLER",
      "path": "0"
    },
    "880": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4921,
        4948
      ],
      "op": "XOR",
      "path": "0"
    },
    "881": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4914,
        4948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x797"
    },
    "884": {
      "branch": 19,
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4914,
        4948
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "885": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4973,
        4989
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x7"
    },
    "887": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4973,
        4999
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "888": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5094,
        5100
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x24"
    },
    "890": {
      "op": "CALLDATALOAD"
    },
    "891": {
      "op": "DUP1"
    },
    "892": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4973,
        4999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "893": {
      "op": "SUB"
    },
    "894": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4973,
        4999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "895": {
      "op": "DUP2"
    },
    "896": {
      "op": "GT"
    },
    "897": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "900": {
      "op": "JUMPI"
    },
    "901": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4973,
        4999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "902": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4973,
        4999
      ],
      "op": "POP",
      "path": "0"
    },
    "903": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4973,
        4999
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "904": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4973,
        4999
      ],
      "op": "POP",
      "path": "0"
    },
    "905": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4973,
        4989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "907": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        4973,
        4999
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "908": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5017
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 22,
      "value": "0x9"
    },
    "910": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5018,
        5023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "912": {
      "op": "MLOAD"
    },
    "913": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "915": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5024
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "916": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "918": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5024
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "919": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "921": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "923": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5024
      ],
      "op": "SHA3",
      "path": "0"
    },
    "924": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5034
      ],
      "op": "DUP1",
      "path": "0"
    },
    "925": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5034
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "926": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5094,
        5100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "928": {
      "op": "CALLDATALOAD"
    },
    "929": {
      "op": "DUP1"
    },
    "930": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5034
      ],
      "op": "DUP3",
      "path": "0"
    },
    "931": {
      "op": "SUB"
    },
    "932": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5034
      ],
      "op": "DUP3",
      "path": "0"
    },
    "933": {
      "op": "DUP2"
    },
    "934": {
      "op": "GT"
    },
    "935": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "938": {
      "op": "JUMPI"
    },
    "939": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "940": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5034
      ],
      "op": "POP",
      "path": "0"
    },
    "941": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "942": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5034
      ],
      "op": "POP",
      "path": "0"
    },
    "943": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5034
      ],
      "op": "DUP2",
      "path": "0"
    },
    "944": {
      "op": "SSTORE"
    },
    "945": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5004,
        5034
      ],
      "op": "POP",
      "path": "0"
    },
    "946": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5058,
        5101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "948": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5071,
        5076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "950": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5058,
        5101
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "951": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5058,
        5101
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "984": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5094,
        5100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "986": {
      "op": "CALLDATALOAD"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "992": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5058,
        5101
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "994": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5058,
        5101
      ],
      "op": "LOG3",
      "path": "0"
    },
    "995": {
      "fn": "TestYearnToken.burnFrom",
      "offset": [
        5134,
        5138
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1004": {
      "op": "RETURN"
    },
    "1005": {
      "op": "JUMPDEST"
    },
    "1006": {
      "op": "PUSH4",
      "value": "0x7A2D13A"
    },
    "1011": {
      "op": "DUP2"
    },
    "1012": {
      "op": "XOR"
    },
    "1013": {
      "op": "PUSH2",
      "value": "0x430"
    },
    "1016": {
      "op": "JUMPI"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1019": {
      "op": "CALLDATASIZE"
    },
    "1020": {
      "op": "LT"
    },
    "1021": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1024": {
      "op": "JUMPI"
    },
    "1025": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5212,
        5219
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x4"
    },
    "1027": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5212,
        5232
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1028": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5222,
        5232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1030": {
      "op": "SLOAD"
    },
    "1031": {
      "op": "DUP1"
    },
    "1032": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5212,
        5232
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1033": {
      "op": "MUL"
    },
    "1034": {
      "op": "DUP2"
    },
    "1035": {
      "op": "ISZERO"
    },
    "1036": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5212,
        5232
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1037": {
      "op": "DUP4"
    },
    "1038": {
      "op": "DUP4"
    },
    "1039": {
      "op": "DIV"
    },
    "1040": {
      "op": "EQ"
    },
    "1041": {
      "op": "OR"
    },
    "1042": {
      "op": "ISZERO"
    },
    "1043": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1046": {
      "op": "JUMPI"
    },
    "1047": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5212,
        5232
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1048": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5212,
        5232
      ],
      "op": "POP",
      "path": "0"
    },
    "1049": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5212,
        5232
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1050": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5212,
        5232
      ],
      "op": "POP",
      "path": "0"
    },
    "1051": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5235,
        5243
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A76400"
    },
    "1060": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5212,
        5243
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1061": {
      "op": "DIV"
    },
    "1062": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5212,
        5243
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1063": {
      "fn": "TestYearnToken.convertToAssets",
      "offset": [
        5212,
        5243
      ],
      "op": "POP",
      "path": "0"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1071": {
      "op": "RETURN"
    },
    "1072": {
      "op": "JUMPDEST"
    },
    "1073": {
      "op": "PUSH4",
      "value": "0x91B7F5ED"
    },
    "1078": {
      "op": "DUP2"
    },
    "1079": {
      "op": "XOR"
    },
    "1080": {
      "op": "PUSH2",
      "value": "0x454"
    },
    "1083": {
      "op": "JUMPI"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1086": {
      "op": "CALLDATASIZE"
    },
    "1087": {
      "op": "LT"
    },
    "1088": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1091": {
      "op": "JUMPI"
    },
    "1092": {
      "fn": "TestYearnToken.setPrice",
      "offset": [
        5312,
        5325
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x8"
    },
    "1094": {
      "fn": "TestYearnToken.setPrice",
      "offset": [
        5298,
        5325
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1095": {
      "fn": "TestYearnToken.setPrice",
      "offset": [
        5298,
        5308
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1096": {
      "fn": "TestYearnToken.setPrice",
      "offset": [
        5298,
        5325
      ],
      "op": "XOR",
      "path": "0"
    },
    "1097": {
      "fn": "TestYearnToken.setPrice",
      "offset": [
        5291,
        5325
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x797"
    },
    "1100": {
      "branch": 26,
      "fn": "TestYearnToken.setPrice",
      "offset": [
        5291,
        5325
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1101": {
      "fn": "TestYearnToken.setPrice",
      "offset": [
        5343,
        5349
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x4"
    },
    "1103": {
      "op": "CALLDATALOAD"
    },
    "1104": {
      "fn": "TestYearnToken.setPrice",
      "offset": [
        5330,
        5340
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1106": {
      "fn": "TestYearnToken.setPrice",
      "offset": [
        5330,
        5349
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1107": {
      "op": "STOP"
    },
    "1108": {
      "op": "JUMPDEST"
    },
    "1109": {
      "op": "PUSH4",
      "value": "0x6FDDE3"
    },
    "1114": {
      "op": "DUP2"
    },
    "1115": {
      "op": "XOR"
    },
    "1116": {
      "op": "PUSH2",
      "value": "0x4D9"
    },
    "1119": {
      "op": "JUMPI"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1122": {
      "op": "CALLDATASIZE"
    },
    "1123": {
      "op": "LT"
    },
    "1124": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1127": {
      "op": "JUMPI"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1130": {
      "op": "DUP1"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1133": {
      "op": "MSTORE"
    },
    "1134": {
      "op": "DUP1"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1137": {
      "op": "ADD"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1140": {
      "op": "SLOAD"
    },
    "1141": {
      "op": "DUP1"
    },
    "1142": {
      "op": "DUP3"
    },
    "1143": {
      "op": "MSTORE"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1146": {
      "op": "DUP3"
    },
    "1147": {
      "op": "ADD"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1150": {
      "op": "DUP3"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1153": {
      "op": "ADD"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1156": {
      "op": "SHR"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1159": {
      "op": "DUP2"
    },
    "1160": {
      "op": "GT"
    },
    "1161": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1164": {
      "op": "JUMPI"
    },
    "1165": {
      "op": "DUP1"
    },
    "1166": {
      "op": "ISZERO"
    },
    "1167": {
      "op": "PUSH2",
      "value": "0x4AB"
    },
    "1170": {
      "op": "JUMPI"
    },
    "1171": {
      "op": "SWAP1"
    },
    "1172": {
      "op": "JUMPDEST"
    },
    "1173": {
      "op": "DUP1"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "ADD"
    },
    "1177": {
      "op": "SLOAD"
    },
    "1178": {
      "op": "DUP2"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1181": {
      "op": "SHL"
    },
    "1182": {
      "op": "DUP5"
    },
    "1183": {
      "op": "ADD"
    },
    "1184": {
      "op": "MSTORE"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "DUP2"
    },
    "1189": {
      "op": "DUP2"
    },
    "1190": {
      "op": "XOR"
    },
    "1191": {
      "op": "PUSH2",
      "value": "0x494"
    },
    "1194": {
      "op": "JUMPI"
    },
    "1195": {
      "op": "JUMPDEST"
    },
    "1196": {
      "op": "POP"
    },
    "1197": {
      "op": "POP"
    },
    "1198": {
      "op": "POP"
    },
    "1199": {
      "op": "POP"
    },
    "1200": {
      "op": "DUP1"
    },
    "1201": {
      "op": "MLOAD"
    },
    "1202": {
      "op": "DUP1"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1205": {
      "op": "DUP4"
    },
    "1206": {
      "op": "ADD"
    },
    "1207": {
      "op": "ADD"
    },
    "1208": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1210": {
      "op": "DUP3"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1213": {
      "op": "SUB"
    },
    "1214": {
      "op": "AND"
    },
    "1215": {
      "op": "CALLDATASIZE"
    },
    "1216": {
      "op": "DUP3"
    },
    "1217": {
      "op": "CALLDATACOPY"
    },
    "1218": {
      "op": "POP"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1222": {
      "op": "NOT"
    },
    "1223": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1225": {
      "op": "DUP3"
    },
    "1226": {
      "op": "MLOAD"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1229": {
      "op": "ADD"
    },
    "1230": {
      "op": "ADD"
    },
    "1231": {
      "op": "AND"
    },
    "1232": {
      "op": "SWAP1"
    },
    "1233": {
      "op": "POP"
    },
    "1234": {
      "op": "DUP2"
    },
    "1235": {
      "op": "ADD"
    },
    "1236": {
      "op": "SWAP1"
    },
    "1237": {
      "op": "POP"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1240": {
      "op": "RETURN"
    },
    "1241": {
      "op": "JUMPDEST"
    },
    "1242": {
      "op": "PUSH4",
      "value": "0x95D89B41"
    },
    "1247": {
      "op": "DUP2"
    },
    "1248": {
      "op": "XOR"
    },
    "1249": {
      "op": "PUSH2",
      "value": "0x531"
    },
    "1252": {
      "op": "JUMPI"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1255": {
      "op": "CALLDATASIZE"
    },
    "1256": {
      "op": "LT"
    },
    "1257": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1260": {
      "op": "JUMPI"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1263": {
      "op": "DUP1"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1266": {
      "op": "MSTORE"
    },
    "1267": {
      "op": "DUP1"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1270": {
      "op": "ADD"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1273": {
      "op": "SLOAD"
    },
    "1274": {
      "op": "DUP1"
    },
    "1275": {
      "op": "DUP3"
    },
    "1276": {
      "op": "MSTORE"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1279": {
      "op": "DUP3"
    },
    "1280": {
      "op": "ADD"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1283": {
      "op": "SLOAD"
    },
    "1284": {
      "op": "DUP2"
    },
    "1285": {
      "op": "MSTORE"
    },
    "1286": {
      "op": "POP"
    },
    "1287": {
      "op": "POP"
    },
    "1288": {
      "op": "DUP1"
    },
    "1289": {
      "op": "MLOAD"
    },
    "1290": {
      "op": "DUP1"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1293": {
      "op": "DUP4"
    },
    "1294": {
      "op": "ADD"
    },
    "1295": {
      "op": "ADD"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1298": {
      "op": "DUP3"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1301": {
      "op": "SUB"
    },
    "1302": {
      "op": "AND"
    },
    "1303": {
      "op": "CALLDATASIZE"
    },
    "1304": {
      "op": "DUP3"
    },
    "1305": {
      "op": "CALLDATACOPY"
    },
    "1306": {
      "op": "POP"
    },
    "1307": {
      "op": "POP"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1310": {
      "op": "NOT"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1313": {
      "op": "DUP3"
    },
    "1314": {
      "op": "MLOAD"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1317": {
      "op": "ADD"
    },
    "1318": {
      "op": "ADD"
    },
    "1319": {
      "op": "AND"
    },
    "1320": {
      "op": "SWAP1"
    },
    "1321": {
      "op": "POP"
    },
    "1322": {
      "op": "DUP2"
    },
    "1323": {
      "op": "ADD"
    },
    "1324": {
      "op": "SWAP1"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1328": {
      "op": "RETURN"
    },
    "1329": {
      "op": "JUMPDEST"
    },
    "1330": {
      "op": "PUSH4",
      "value": "0xA035B1FE"
    },
    "1335": {
      "op": "DUP2"
    },
    "1336": {
      "op": "XOR"
    },
    "1337": {
      "op": "PUSH2",
      "value": "0x550"
    },
    "1340": {
      "op": "JUMPI"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1343": {
      "op": "CALLDATASIZE"
    },
    "1344": {
      "op": "LT"
    },
    "1345": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1348": {
      "op": "JUMPI"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "1351": {
      "op": "SLOAD"
    },
    "1352": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1354": {
      "op": "MSTORE"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1359": {
      "op": "RETURN"
    },
    "1360": {
      "op": "JUMPDEST"
    },
    "1361": {
      "op": "PUSH4",
      "value": "0x313CE567"
    },
    "1366": {
      "op": "DUP2"
    },
    "1367": {
      "op": "XOR"
    },
    "1368": {
      "op": "PUSH2",
      "value": "0x56F"
    },
    "1371": {
      "op": "JUMPI"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1374": {
      "op": "CALLDATASIZE"
    },
    "1375": {
      "op": "LT"
    },
    "1376": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1379": {
      "op": "JUMPI"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x6"
    },
    "1382": {
      "op": "SLOAD"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1385": {
      "op": "MSTORE"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1390": {
      "op": "RETURN"
    },
    "1391": {
      "op": "JUMPDEST"
    },
    "1392": {
      "op": "PUSH4",
      "value": "0x1816DDD"
    },
    "1397": {
      "op": "DUP2"
    },
    "1398": {
      "op": "XOR"
    },
    "1399": {
      "op": "PUSH2",
      "value": "0x58E"
    },
    "1402": {
      "op": "JUMPI"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1405": {
      "op": "CALLDATASIZE"
    },
    "1406": {
      "op": "LT"
    },
    "1407": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1410": {
      "op": "JUMPI"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "1413": {
      "op": "SLOAD"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1416": {
      "op": "MSTORE"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1421": {
      "op": "RETURN"
    },
    "1422": {
      "op": "JUMPDEST"
    },
    "1423": {
      "op": "PUSH4",
      "value": "0xD5F39488"
    },
    "1428": {
      "op": "DUP2"
    },
    "1429": {
      "op": "XOR"
    },
    "1430": {
      "op": "PUSH2",
      "value": "0x5AD"
    },
    "1433": {
      "op": "JUMPI"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1436": {
      "op": "CALLDATASIZE"
    },
    "1437": {
      "op": "LT"
    },
    "1438": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1441": {
      "op": "JUMPI"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "1444": {
      "op": "SLOAD"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1447": {
      "op": "MSTORE"
    },
    "1448": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1450": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1452": {
      "op": "RETURN"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "PUSH4",
      "value": "0x1FF0A023"
    },
    "1459": {
      "op": "DUP2"
    },
    "1460": {
      "op": "XOR"
    },
    "1461": {
      "op": "PUSH2",
      "value": "0x5DA"
    },
    "1464": {
      "op": "JUMPI"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1467": {
      "op": "CALLDATASIZE"
    },
    "1468": {
      "op": "LT"
    },
    "1469": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1472": {
      "op": "JUMPI"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1475": {
      "op": "CALLDATALOAD"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "1478": {
      "op": "SLOAD"
    },
    "1479": {
      "op": "DUP2"
    },
    "1480": {
      "op": "LT"
    },
    "1481": {
      "op": "ISZERO"
    },
    "1482": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1485": {
      "op": "JUMPI"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "1488": {
      "op": "ADD"
    },
    "1489": {
      "op": "SLOAD"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1492": {
      "op": "MSTORE"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1497": {
      "op": "RETURN"
    },
    "1498": {
      "op": "JUMPDEST"
    },
    "1499": {
      "op": "PUSH4",
      "value": "0xF585B9B0"
    },
    "1504": {
      "op": "DUP2"
    },
    "1505": {
      "op": "XOR"
    },
    "1506": {
      "op": "PUSH2",
      "value": "0x615"
    },
    "1509": {
      "op": "JUMPI"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1512": {
      "op": "CALLDATASIZE"
    },
    "1513": {
      "op": "LT"
    },
    "1514": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1517": {
      "op": "JUMPI"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1520": {
      "op": "CALLDATALOAD"
    },
    "1521": {
      "op": "PUSH8",
      "value": "0xDE0B6B3A7640A"
    },
    "1530": {
      "op": "SLOAD"
    },
    "1531": {
      "op": "DUP2"
    },
    "1532": {
      "op": "LT"
    },
    "1533": {
      "op": "ISZERO"
    },
    "1534": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1537": {
      "op": "JUMPI"
    },
    "1538": {
      "op": "PUSH8",
      "value": "0xDE0B6B3A7640B"
    },
    "1547": {
      "op": "ADD"
    },
    "1548": {
      "op": "SLOAD"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1551": {
      "op": "MSTORE"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1556": {
      "op": "RETURN"
    },
    "1557": {
      "op": "JUMPDEST"
    },
    "1558": {
      "op": "PUSH4",
      "value": "0x26204C3D"
    },
    "1563": {
      "op": "DUP2"
    },
    "1564": {
      "op": "XOR"
    },
    "1565": {
      "op": "PUSH2",
      "value": "0x657"
    },
    "1568": {
      "op": "JUMPI"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1571": {
      "op": "CALLDATASIZE"
    },
    "1572": {
      "op": "LT"
    },
    "1573": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1576": {
      "op": "JUMPI"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1579": {
      "op": "CALLDATALOAD"
    },
    "1580": {
      "op": "DUP1"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1583": {
      "op": "SHR"
    },
    "1584": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1587": {
      "op": "JUMPI"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1590": {
      "op": "MSTORE"
    },
    "1591": {
      "op": "PUSH8",
      "value": "0xDE0B6B3A7643F3"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1602": {
      "op": "MLOAD"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1605": {
      "op": "MSTORE"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1608": {
      "op": "MSTORE"
    },
    "1609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1613": {
      "op": "SHA3"
    },
    "1614": {
      "op": "SLOAD"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1617": {
      "op": "MSTORE"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1622": {
      "op": "RETURN"
    },
    "1623": {
      "op": "JUMPDEST"
    },
    "1624": {
      "op": "PUSH3",
      "value": "0x937285"
    },
    "1628": {
      "op": "DUP2"
    },
    "1629": {
      "op": "XOR"
    },
    "1630": {
      "op": "PUSH2",
      "value": "0x698"
    },
    "1633": {
      "op": "JUMPI"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1636": {
      "op": "CALLDATASIZE"
    },
    "1637": {
      "op": "LT"
    },
    "1638": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1641": {
      "op": "JUMPI"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1644": {
      "op": "CALLDATALOAD"
    },
    "1645": {
      "op": "DUP1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1648": {
      "op": "SHR"
    },
    "1649": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1652": {
      "op": "JUMPI"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1655": {
      "op": "MSTORE"
    },
    "1656": {
      "op": "PUSH8",
      "value": "0xDE0B6B3A7643F4"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1667": {
      "op": "MLOAD"
    },
    "1668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1670": {
      "op": "MSTORE"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1673": {
      "op": "MSTORE"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1678": {
      "op": "SHA3"
    },
    "1679": {
      "op": "SLOAD"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1682": {
      "op": "MSTORE"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1685": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1687": {
      "op": "RETURN"
    },
    "1688": {
      "op": "JUMPDEST"
    },
    "1689": {
      "op": "POP"
    },
    "1690": {
      "op": "JUMPDEST"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1695": {
      "op": "REVERT"
    },
    "1696": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2762,
        3071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1697": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2936,
        2942
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x80"
    },
    "1699": {
      "op": "MLOAD"
    },
    "1700": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2912,
        2925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1702": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2926,
        2931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1704": {
      "op": "MLOAD"
    },
    "1705": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2912,
        2932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1707": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2912,
        2932
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1708": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2912,
        2932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1710": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2912,
        2932
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1711": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2912,
        2932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1713": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2912,
        2932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1715": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2912,
        2932
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1716": {
      "op": "SLOAD"
    },
    "1717": {
      "op": "LT"
    },
    "1718": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2905,
        2966
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1719": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2905,
        2966
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x717"
    },
    "1722": {
      "branch": 29,
      "fn": "TestYearnToken._transfer",
      "offset": [
        2905,
        2966
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1727": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2944,
        2966
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1728": {
      "op": "PUSH32",
      "value": "0x496E73756666696369656E742062616C616E6365000000000000"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1763": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2944,
        2966
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1764": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2944,
        2966
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1766": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2905,
        2966
      ],
      "op": "POP",
      "path": "0"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1769": {
      "op": "MLOAD"
    },
    "1770": {
      "op": "DUP1"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1773": {
      "op": "ADD"
    },
    "1774": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1776": {
      "op": "DUP3"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1779": {
      "op": "SUB"
    },
    "1780": {
      "op": "AND"
    },
    "1781": {
      "op": "CALLDATASIZE"
    },
    "1782": {
      "op": "DUP3"
    },
    "1783": {
      "op": "CALLDATACOPY"
    },
    "1784": {
      "op": "POP"
    },
    "1785": {
      "op": "POP"
    },
    "1786": {
      "op": "PUSH4",
      "value": "0x8C379A0"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1793": {
      "op": "MSTORE"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1798": {
      "op": "MSTORE"
    },
    "1799": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1801": {
      "op": "NOT"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1806": {
      "op": "MLOAD"
    },
    "1807": {
      "op": "ADD"
    },
    "1808": {
      "op": "AND"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1811": {
      "op": "ADD"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x7C"
    },
    "1814": {
      "op": "REVERT"
    },
    "1815": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2905,
        2966
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1816": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2971,
        2984
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x9"
    },
    "1818": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2985,
        2990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1820": {
      "op": "MLOAD"
    },
    "1821": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2971,
        2991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1823": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2971,
        2991
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1824": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2971,
        2991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1826": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2971,
        2991
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1827": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2971,
        2991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1829": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2971,
        2991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1831": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2971,
        2991
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1832": {
      "op": "DUP1"
    },
    "1833": {
      "op": "SLOAD"
    },
    "1834": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2995,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1836": {
      "op": "MLOAD"
    },
    "1837": {
      "op": "DUP1"
    },
    "1838": {
      "op": "DUP3"
    },
    "1839": {
      "op": "SUB"
    },
    "1840": {
      "op": "DUP3"
    },
    "1841": {
      "op": "DUP2"
    },
    "1842": {
      "op": "GT"
    },
    "1843": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1846": {
      "op": "JUMPI"
    },
    "1847": {
      "op": "SWAP1"
    },
    "1848": {
      "op": "POP"
    },
    "1849": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2971,
        3001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1850": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2971,
        3001
      ],
      "op": "POP",
      "path": "0"
    },
    "1851": {
      "op": "DUP2"
    },
    "1852": {
      "op": "SSTORE"
    },
    "1853": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        2971,
        3001
      ],
      "op": "POP",
      "path": "0"
    },
    "1854": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3006,
        3019
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x9"
    },
    "1856": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3020,
        3023
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1858": {
      "op": "MLOAD"
    },
    "1859": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3006,
        3024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1861": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3006,
        3024
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1862": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3006,
        3024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1864": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3006,
        3024
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1865": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3006,
        3024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1867": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3006,
        3024
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1869": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3006,
        3024
      ],
      "op": "SHA3",
      "path": "0"
    },
    "1870": {
      "op": "DUP1"
    },
    "1871": {
      "op": "SLOAD"
    },
    "1872": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3028,
        3034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1874": {
      "op": "MLOAD"
    },
    "1875": {
      "op": "DUP1"
    },
    "1876": {
      "op": "DUP3"
    },
    "1877": {
      "op": "ADD"
    },
    "1878": {
      "op": "DUP3"
    },
    "1879": {
      "op": "DUP2"
    },
    "1880": {
      "op": "LT"
    },
    "1881": {
      "op": "PUSH2",
      "value": "0x797"
    },
    "1884": {
      "op": "JUMPI"
    },
    "1885": {
      "op": "SWAP1"
    },
    "1886": {
      "op": "POP"
    },
    "1887": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3006,
        3034
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1888": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3006,
        3034
      ],
      "op": "POP",
      "path": "0"
    },
    "1889": {
      "op": "DUP2"
    },
    "1890": {
      "op": "SSTORE"
    },
    "1891": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3006,
        3034
      ],
      "op": "POP",
      "path": "0"
    },
    "1892": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3059,
        3062
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x60"
    },
    "1894": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3039,
        3071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1895": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3052,
        3057
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1897": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3039,
        3071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1898": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3039,
        3071
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1931": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3064,
        3070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "1933": {
      "op": "MLOAD"
    },
    "1934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1936": {
      "op": "MSTORE"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1939": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3039,
        3071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1941": {
      "fn": "TestYearnToken._transfer",
      "offset": [
        3039,
        3071
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1942": {
      "op": "JUMP"
    },
    "1943": {
      "op": "JUMPDEST"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1946": {
      "op": "DUP1"
    },
    "1947": {
      "op": "REVERT"
    }
  },
  "sha1": "789c9f5431b3fac79ca6936dcd723947e6351537",
  "source": "# @version ^0.3.7\n\n\"\"\"\n@title Mintable Token implementation\n@notice Based on the ERC-20 token standard as defined at\n        https://eips.ethereum.org/EIPS/eip-20\n\"\"\"\n\nfrom vyper.interfaces import ERC20\n\nimplements: ERC20\n\n\nevent Approval:\n    owner: indexed(address)\n    spender: indexed(address)\n    value: uint256\n\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    value: uint256\n\n\nname: public(String[64])\nsymbol: public(String[32])\n\nprice: public(uint256)\ndecimals: public(uint256)\ntotalSupply: public(uint256)\n\ndeployer: public(address)\n\nbalances: HashMap[address, uint256]\nallMinters: public(DynArray[address, 1000000000000000000])\nactiveMinters: public(DynArray[address, 1000])\nactiveMintersIndex: public(HashMap[address, uint256])\nactiveMintersActive: public(HashMap[address, bool])\nallowances: HashMap[address, HashMap[address, uint256]]\n\n\n@external\ndef __init__(_name: String[64], _symbol: String[32], _decimals: uint256, _totalSupply: uint256):\n    self.name = _name\n    self.symbol = _symbol\n    self.price = 10 ** 18\n    self.decimals = _decimals\n    self.balances[msg.sender] = _totalSupply\n    self.totalSupply = _totalSupply\n    self.deployer = msg.sender\n    log Transfer(empty(address), msg.sender, _totalSupply)\n\n\n@view\n@external\ndef balanceOf(_owner: address) -> uint256:\n    \"\"\"\n    @notice Getter to check the current balance of an address\n    @param _owner Address to query the balance of\n    @return Token balance\n    \"\"\"\n    return self.balances[_owner]\n\n\n@view\n@external\ndef allowance(_owner : address, _spender : address) -> uint256:\n    \"\"\"\n    @notice Getter to check the amount of tokens that an owner allowed to a spender\n    @param _owner The address which owns the funds\n    @param _spender The address which will spend the funds\n    @return The amount of tokens still available for the spender\n    \"\"\"\n    return self.allowances[_owner][_spender]\n\n\n@external\ndef approve(_spender : address, _value : uint256) -> bool:\n    \"\"\"\n    @notice Approve an address to spend the specified amount of tokens on behalf of msg.sender\n    @dev Beware that changing an allowance with this method brings the risk that someone may use both the old\n         and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n         race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n         https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param _spender The address which will spend the funds.\n    @param _value The amount of tokens to be spent.\n    @return Success boolean\n    \"\"\"\n    self.allowances[msg.sender][_spender] = _value\n    log Approval(msg.sender, _spender, _value)\n    return True\n\n\n@internal\ndef _transfer(_from: address, _to: address, _value: uint256):\n    \"\"\"\n    @dev Internal shared logic for transfer and transferFrom\n    \"\"\"\n    assert self.balances[_from] >= _value, \"Insufficient balance\"\n    self.balances[_from] -= _value\n    self.balances[_to] += _value\n    log Transfer(_from, _to, _value)\n\n\n@external\ndef transfer(_to : address, _value : uint256) -> bool:\n    \"\"\"\n    @notice Transfer tokens to a specified address\n    @dev Vyper does not allow underflows, so attempting to transfer more\n         tokens than an account has will revert\n    @param _to The address to transfer to\n    @param _value The amount to be transferred\n    @return Success boolean\n    \"\"\"\n    self._transfer(msg.sender, _to, _value)\n    return True\n\n\n@external\ndef transferFrom(_from : address, _to : address, _value : uint256) -> bool:\n    \"\"\"\n    @notice Transfer tokens from one address to another\n    @dev Vyper does not allow underflows, so attempting to transfer more\n         tokens than an account has will revert\n    @param _from The address which you want to send tokens from\n    @param _to The address which you want to transfer to\n    @param _value The amount of tokens to be transferred\n    @return Success boolean\n    \"\"\"\n    assert self.allowances[_from][msg.sender] >= _value, \"Insufficient allowance\"\n    self.allowances[_from][msg.sender] -= _value\n    self._transfer(_from, _to, _value)\n    return True\n    \n\n@external\ndef mintTo(_to: address, _value: uint256) -> bool:\n    \"\"\"\n    @notice Mint tokens to an address\n    @param _to The address to mint to\n    @param _value The amount of tokens to mint\n    @return Success boolean\n    \"\"\"\n    # Run Checks\n    assert msg.sender == self.deployer\n    # Update Values\n    self.totalSupply += _value\n    self.balances[_to] += _value\n    # Log Transfer\n    log Transfer(empty(address), _to, _value)\n    # Return Success\n    return True\n\n\n@external\ndef burnFrom(_from: address, _value: uint256) -> bool:\n    \"\"\"\n    @notice Burn tokens from an address\n    @param _from The address to burn from\n    @param _value The amount of tokens to burn\n    @return Success boolean\n    \"\"\"\n    # Run Checks\n    assert msg.sender == self.deployer\n    # Update Values\n    self.totalSupply -= _value\n    self.balances[_from] -= _value\n    # Log Transfer\n    log Transfer(_from, empty(address), _value)\n    # Return Success\n    return True\n\n\n@external\ndef convertToAssets(_amount: uint256) -> uint256:\n    return _amount * self.price / 10 ** 18\n\n\n@external\ndef setPrice(_price: uint256):\n    assert msg.sender == self.deployer\n    self.price = _price",
  "sourceMap": "",
  "sourcePath": "contracts/tests/TestYearnToken.vy",
  "type": "contract"
}